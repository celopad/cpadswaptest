{"ast":null,"code":"var _jsxFileName = \"/Users/khoiplus/Desktop/celopad/cpadswaptest/src/components/SearchModal/ManageLists.tsx\";\nimport Card from 'components/Card';\nimport { UNSUPPORTED_LIST_URLS } from 'constants/lists';\nimport { useListColor } from 'hooks/useColor';\nimport React, { memo, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { CheckCircle, Settings } from 'react-feather';\nimport ReactGA from 'react-ga';\nimport { usePopper } from 'react-popper';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { useFetchListCallback } from '../../hooks/useFetchListCallback';\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside';\nimport useTheme from '../../hooks/useTheme';\nimport useToggle from '../../hooks/useToggle';\nimport { acceptListUpdate, disableList, enableList, removeList } from '../../state/lists/actions';\nimport { useActiveListUrls, useAllLists, useIsListActive } from '../../state/lists/hooks';\nimport { ExternalLink, IconWrapper, LinkStyledButton, TYPE } from '../../theme';\nimport listVersionLabel from '../../utils/listVersionLabel';\nimport { parseENSAddress } from '../../utils/parseENSAddress';\nimport uriToHttp from '../../utils/uriToHttp';\nimport { ButtonEmpty, ButtonPrimary } from '../Button';\nimport Column, { AutoColumn } from '../Column';\nimport ListLogo from '../ListLogo';\nimport Row, { RowBetween, RowFixed } from '../Row';\nimport ListToggle from '../Toggle/ListToggle';\nimport { CurrencyModalView } from './CurrencySearchModal';\nimport { PaddedColumn, SearchInput, Separator, SeparatorDark } from './styleds';\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`;\nconst UnpaddedLinkStyledButton = styled(LinkStyledButton)`\n  padding: 0;\n  font-size: 1rem;\n  opacity: ${({\n  disabled\n}) => disabled ? '0.4' : '1'};\n`;\nconst PopoverContainer = styled.div`\n  z-index: 100;\n  visibility: ${props => props.show ? 'visible' : 'hidden'};\n  opacity: ${props => props.show ? 1 : 0};\n  transition: visibility 150ms linear, opacity 150ms linear;\n  background: ${({\n  theme\n}) => theme.bg2};\n  border: 1px solid ${({\n  theme\n}) => theme.bg3};\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n  color: ${({\n  theme\n}) => theme.text2};\n  border-radius: 0.5rem;\n  padding: 1rem;\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-gap: 8px;\n  font-size: 1rem;\n  text-align: left;\n`;\nconst StyledMenu = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n`;\nconst StyledTitleText = styled.div`\n  font-size: 16px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 600;\n  color: ${({\n  theme,\n  active\n}) => active ? theme.white : theme.text2};\n`;\nconst StyledListUrlText = styled(TYPE.main)`\n  font-size: 12px;\n  color: ${({\n  theme,\n  active\n}) => active ? theme.white : theme.text2};\n`;\nconst RowWrapper = styled(Row)`\n  background-color: ${({\n  bgColor,\n  active,\n  theme\n}) => active ? bgColor !== null && bgColor !== void 0 ? bgColor : 'transparent' : theme.bg2};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`;\n\nfunction listUrlRowHTMLId(listUrl) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`;\n}\n\nconst ListRow = memo(function ListRow({\n  listUrl\n}) {\n  const listsByUrl = useSelector(state => state.lists.byUrl);\n  const dispatch = useDispatch();\n  const {\n    current: list,\n    pendingUpdate: pending\n  } = listsByUrl[listUrl];\n  const theme = useTheme();\n  const listColor = useListColor(list === null || list === void 0 ? void 0 : list.logoURI);\n  const isActive = useIsListActive(listUrl);\n  const [open, toggle] = useToggle(false);\n  const node = useRef();\n  const [referenceElement, setReferenceElement] = useState();\n  const [popperElement, setPopperElement] = useState();\n  const {\n    styles,\n    attributes\n  } = usePopper(referenceElement, popperElement, {\n    placement: 'auto',\n    strategy: 'fixed',\n    modifiers: [{\n      name: 'offset',\n      options: {\n        offset: [8, 8]\n      }\n    }]\n  });\n  useOnClickOutside(node, open ? toggle : undefined);\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return;\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Update List from List Select',\n      label: listUrl\n    });\n    dispatch(acceptListUpdate(listUrl));\n  }, [dispatch, listUrl, pending]);\n  const handleRemoveList = useCallback(() => {\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Start Remove List',\n      label: listUrl\n    });\n\n    if (window.prompt(`Please confirm you would like to remove this list by typing REMOVE`) === `REMOVE`) {\n      ReactGA.event({\n        category: 'Lists',\n        action: 'Confirm Remove List',\n        label: listUrl\n      });\n      dispatch(removeList(listUrl));\n    }\n  }, [dispatch, listUrl]);\n  const handleEnableList = useCallback(() => {\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Enable List',\n      label: listUrl\n    });\n    dispatch(enableList(listUrl));\n  }, [dispatch, listUrl]);\n  const handleDisableList = useCallback(() => {\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Disable List',\n      label: listUrl\n    });\n    dispatch(disableList(listUrl));\n  }, [dispatch, listUrl]);\n  if (!list) return null;\n  return /*#__PURE__*/React.createElement(RowWrapper, {\n    active: isActive,\n    bgColor: listColor,\n    key: listUrl,\n    id: listUrlRowHTMLId(listUrl),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, list.logoURI ? /*#__PURE__*/React.createElement(ListLogo, {\n    size: \"40px\",\n    style: {\n      marginRight: '1rem'\n    },\n    logoURI: list.logoURI,\n    alt: `${list.name} list logo`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '24px',\n      height: '24px',\n      marginRight: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    style: {\n      flex: '1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledTitleText, {\n    active: isActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, list.name)), /*#__PURE__*/React.createElement(RowFixed, {\n    mt: \"4px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledListUrlText, {\n    active: isActive,\n    mr: \"6px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, list.tokens.length, \" tokens\"), /*#__PURE__*/React.createElement(StyledMenu, {\n    ref: node,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ButtonEmpty, {\n    onClick: toggle,\n    ref: setReferenceElement,\n    padding: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Settings, {\n    stroke: isActive ? theme.bg1 : theme.text1,\n    size: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  })), open && /*#__PURE__*/React.createElement(PopoverContainer, Object.assign({\n    show: true,\n    ref: setPopperElement,\n    style: styles.popper\n  }, attributes.popper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, list && listVersionLabel(list.version)), /*#__PURE__*/React.createElement(SeparatorDark, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ExternalLink, {\n    href: `https://tokenlists.org/token-list?url=${listUrl}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, \"View list\"), /*#__PURE__*/React.createElement(UnpaddedLinkStyledButton, {\n    onClick: handleRemoveList,\n    disabled: Object.keys(listsByUrl).length === 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, \"Remove list\"), pending && /*#__PURE__*/React.createElement(UnpaddedLinkStyledButton, {\n    onClick: handleAcceptListUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }\n  }, \"Update list\"))))), /*#__PURE__*/React.createElement(ListToggle, {\n    isActive: isActive,\n    bgColor: listColor,\n    toggle: () => {\n      isActive ? handleDisableList() : handleEnableList();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }));\n});\nconst ListContainer = styled.div`\n  padding: 1rem;\n  height: 100%;\n  overflow: auto;\n  padding-bottom: 80px;\n`;\nexport function ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl\n}) {\n  const theme = useTheme();\n  const [listUrlInput, setListUrlInput] = useState('');\n  const lists = useAllLists(); // sort by active but only if not visible\n\n  const activeListUrls = useActiveListUrls();\n  const [activeCopy, setActiveCopy] = useState();\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls);\n    }\n  }, [activeCopy, activeListUrls]);\n  const handleInput = useCallback(e => {\n    setListUrlInput(e.target.value);\n  }, []);\n  const fetchList = useFetchListCallback();\n  const validUrl = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput));\n  }, [listUrlInput]);\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists);\n    return listUrls.filter(listUrl => {\n      // only show loaded lists, hide unsupported lists\n      return Boolean(lists[listUrl].current) && !Boolean(UNSUPPORTED_LIST_URLS.includes(listUrl));\n    }).sort((u1, u2) => {\n      const {\n        current: l1\n      } = lists[u1];\n      const {\n        current: l2\n      } = lists[u2]; // first filter on active lists\n\n      if ((activeCopy === null || activeCopy === void 0 ? void 0 : activeCopy.includes(u1)) && !(activeCopy === null || activeCopy === void 0 ? void 0 : activeCopy.includes(u2))) {\n        return -1;\n      }\n\n      if (!(activeCopy === null || activeCopy === void 0 ? void 0 : activeCopy.includes(u1)) && (activeCopy === null || activeCopy === void 0 ? void 0 : activeCopy.includes(u2))) {\n        return 1;\n      }\n\n      if (l1 && l2) {\n        return l1.name.toLowerCase() < l2.name.toLowerCase() ? -1 : l1.name.toLowerCase() === l2.name.toLowerCase() ? 0 : 1;\n      }\n\n      if (l1) return -1;\n      if (l2) return 1;\n      return 0;\n    });\n  }, [lists, activeCopy]); // temporary fetched list for import flow\n\n  const [tempList, setTempList] = useState();\n  const [addError, setAddError] = useState();\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false).then(list => setTempList(list)).catch(() => setAddError('Error importing list'));\n    } // if valid url, fetch details for card\n\n\n    if (validUrl) {\n      fetchTempList();\n    } else {\n      setTempList(undefined);\n      listUrlInput !== '' && setAddError('Enter valid list location');\n    } // reset error\n\n\n    if (listUrlInput === '') {\n      setAddError(undefined);\n    }\n  }, [fetchList, listUrlInput, validUrl]); // check if list is already imported\n\n  const isImported = Object.keys(lists).includes(listUrlInput); // set list values and have parent modal switch to import list view\n\n  const handleImport = useCallback(() => {\n    if (!tempList) return;\n    setImportList(tempList);\n    setModalView(CurrencyModalView.importList);\n    setListUrl(listUrlInput);\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList]);\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PaddedColumn, {\n    gap: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchInput, {\n    type: \"text\",\n    id: \"list-add-input\",\n    placeholder: \"https:// or ipfs:// or ENS name\",\n    value: listUrlInput,\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 11\n    }\n  })), addError ? /*#__PURE__*/React.createElement(TYPE.error, {\n    title: addError,\n    style: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden'\n    },\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 11\n    }\n  }, addError) : null), tempList && /*#__PURE__*/React.createElement(PaddedColumn, {\n    style: {\n      paddingTop: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    backgroundColor: theme.bg2,\n    padding: \"12px 20px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 15\n    }\n  }, tempList.logoURI && /*#__PURE__*/React.createElement(ListLogo, {\n    logoURI: tempList.logoURI,\n    size: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 38\n    }\n  }), /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"4px\",\n    style: {\n      marginLeft: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    fontWeight: 600,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 19\n    }\n  }, tempList.name), /*#__PURE__*/React.createElement(TYPE.main, {\n    fontSize: '12px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 19\n    }\n  }, tempList.tokens.length, \" tokens\"))), isImported ? /*#__PURE__*/React.createElement(RowFixed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconWrapper, {\n    stroke: theme.text2,\n    size: \"16px\",\n    marginRight: '10px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CheckCircle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 19\n    }\n  }, \"Loaded\")) : /*#__PURE__*/React.createElement(ButtonPrimary, {\n    style: {\n      fontSize: '14px'\n    },\n    padding: \"6px 8px\",\n    width: \"fit-content\",\n    onClick: handleImport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 17\n    }\n  }, \"Import\")))), /*#__PURE__*/React.createElement(Separator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ListContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AutoColumn, {\n    gap: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }\n  }, sortedLists.map(listUrl => /*#__PURE__*/React.createElement(ListRow, {\n    key: listUrl,\n    listUrl: listUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/khoiplus/Desktop/celopad/cpadswaptest/src/components/SearchModal/ManageLists.tsx"],"names":["Card","UNSUPPORTED_LIST_URLS","useListColor","React","memo","useCallback","useEffect","useMemo","useRef","useState","CheckCircle","Settings","ReactGA","usePopper","useDispatch","useSelector","styled","useFetchListCallback","useOnClickOutside","useTheme","useToggle","acceptListUpdate","disableList","enableList","removeList","useActiveListUrls","useAllLists","useIsListActive","ExternalLink","IconWrapper","LinkStyledButton","TYPE","listVersionLabel","parseENSAddress","uriToHttp","ButtonEmpty","ButtonPrimary","Column","AutoColumn","ListLogo","Row","RowBetween","RowFixed","ListToggle","CurrencyModalView","PaddedColumn","SearchInput","Separator","SeparatorDark","Wrapper","UnpaddedLinkStyledButton","disabled","PopoverContainer","div","props","show","theme","bg2","bg3","text2","StyledMenu","StyledTitleText","active","white","StyledListUrlText","main","RowWrapper","bgColor","listUrlRowHTMLId","listUrl","replace","ListRow","listsByUrl","state","lists","byUrl","dispatch","current","list","pendingUpdate","pending","listColor","logoURI","isActive","open","toggle","node","referenceElement","setReferenceElement","popperElement","setPopperElement","styles","attributes","placement","strategy","modifiers","name","options","offset","undefined","handleAcceptListUpdate","event","category","action","label","handleRemoveList","window","prompt","handleEnableList","handleDisableList","marginRight","width","height","flex","tokens","length","bg1","text1","popper","version","Object","keys","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeListUrls","activeCopy","setActiveCopy","handleInput","e","target","value","fetchList","validUrl","Boolean","sortedLists","listUrls","filter","includes","sort","u1","u2","l1","l2","toLowerCase","tempList","setTempList","addError","setAddError","fetchTempList","then","catch","isImported","handleImport","importList","textOverflow","overflow","paddingTop","marginLeft","fontSize","map"],"mappings":";AACA,OAAOA,IAAP,MAAiB,iBAAjB;AACA,SAASC,qBAAT,QAAsC,iBAAtC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,OAAOC,KAAP,IAAgBC,IAAhB,EAAsBC,WAAtB,EAAmCC,SAAnC,EAA8CC,OAA9C,EAAuDC,MAAvD,EAA+DC,QAA/D,QAA+E,OAA/E;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,eAAtC;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,oBAAT,QAAqC,kCAArC;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AAEA,SAASC,gBAAT,EAA2BC,WAA3B,EAAwCC,UAAxC,EAAoDC,UAApD,QAAsE,2BAAtE;AACA,SAASC,iBAAT,EAA4BC,WAA5B,EAAyCC,eAAzC,QAAgE,yBAAhE;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,gBAApC,EAAsDC,IAAtD,QAAkE,aAAlE;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,WAA3C;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,WAAnC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,GAAP,IAAcC,UAAd,EAA0BC,QAA1B,QAA0C,QAA1C;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,SAApC,EAA+CC,aAA/C,QAAoE,WAApE;AAEA,MAAMC,OAAO,GAAGjC,MAAM,CAACqB,MAAD,CAAS;;;CAA/B;AAKA,MAAMa,wBAAwB,GAAGlC,MAAM,CAACc,gBAAD,CAAmB;;;aAG7C,CAAC;AAAEqB,EAAAA;AAAF,CAAD,KAAmBA,QAAQ,GAAG,KAAH,GAAW,GAAK;CAHxD;AAMA,MAAMC,gBAAgB,GAAGpC,MAAM,CAACqC,GAAuB;;gBAEvCC,KAAK,IAAKA,KAAK,CAACC,IAAN,GAAa,SAAb,GAAyB,QAAU;aAChDD,KAAK,IAAKA,KAAK,CAACC,IAAN,GAAa,CAAb,GAAiB,CAAG;;gBAE3B,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,GAAI;sBACnB,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACE,GAAI;;;WAGpC,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,KAAM;;;;;;;;CATtC;AAmBA,MAAMC,UAAU,GAAG5C,MAAM,CAACqC,GAAI;;;;;;CAA9B;AAQA,MAAMQ,eAAe,GAAG7C,MAAM,CAACqC,GAAyB;;;;;WAK7C,CAAC;AAAEG,EAAAA,KAAF;AAASM,EAAAA;AAAT,CAAD,KAAwBA,MAAM,GAAGN,KAAK,CAACO,KAAT,GAAiBP,KAAK,CAACG,KAAO;CALvE;AAQA,MAAMK,iBAAiB,GAAGhD,MAAM,CAACe,IAAI,CAACkC,IAAN,CAAiC;;WAEtD,CAAC;AAAET,EAAAA,KAAF;AAASM,EAAAA;AAAT,CAAD,KAAwBA,MAAM,GAAGN,KAAK,CAACO,KAAT,GAAiBP,KAAK,CAACG,KAAO;CAFvE;AAKA,MAAMO,UAAU,GAAGlD,MAAM,CAACwB,GAAD,CAA4C;sBAC/C,CAAC;AAAE2B,EAAAA,OAAF;AAAWL,EAAAA,MAAX;AAAmBN,EAAAA;AAAnB,CAAD,KAAiCM,MAAM,GAAGK,OAAH,aAAGA,OAAH,cAAGA,OAAH,GAAc,aAAd,GAA8BX,KAAK,CAACC,GAAK;;;;;CADtG;;AAQA,SAASW,gBAAT,CAA0BC,OAA1B,EAA2C;AACzC,SAAQ,YAAWA,OAAO,CAACC,OAAR,CAAgB,KAAhB,EAAuB,GAAvB,CAA4B,EAA/C;AACD;;AAED,MAAMC,OAAO,GAAGnE,IAAI,CAAC,SAASmE,OAAT,CAAiB;AAAEF,EAAAA;AAAF,CAAjB,EAAmD;AACtE,QAAMG,UAAU,GAAGzD,WAAW,CAAuC0D,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,KAA5D,CAA9B;AACA,QAAMC,QAAQ,GAAG9D,WAAW,EAA5B;AACA,QAAM;AAAE+D,IAAAA,OAAO,EAAEC,IAAX;AAAiBC,IAAAA,aAAa,EAAEC;AAAhC,MAA4CR,UAAU,CAACH,OAAD,CAA5D;AAEA,QAAMb,KAAK,GAAGrC,QAAQ,EAAtB;AACA,QAAM8D,SAAS,GAAG/E,YAAY,CAAC4E,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEI,OAAP,CAA9B;AACA,QAAMC,QAAQ,GAAGxD,eAAe,CAAC0C,OAAD,CAAhC;AAEA,QAAM,CAACe,IAAD,EAAOC,MAAP,IAAiBjE,SAAS,CAAC,KAAD,CAAhC;AACA,QAAMkE,IAAI,GAAG9E,MAAM,EAAnB;AACA,QAAM,CAAC+E,gBAAD,EAAmBC,mBAAnB,IAA0C/E,QAAQ,EAAxD;AACA,QAAM,CAACgF,aAAD,EAAgBC,gBAAhB,IAAoCjF,QAAQ,EAAlD;AAEA,QAAM;AAAEkF,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAyB/E,SAAS,CAAC0E,gBAAD,EAAmBE,aAAnB,EAAkC;AACxEI,IAAAA,SAAS,EAAE,MAD6D;AAExEC,IAAAA,QAAQ,EAAE,OAF8D;AAGxEC,IAAAA,SAAS,EAAE,CAAC;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ;AAAV;AAA3B,KAAD;AAH6D,GAAlC,CAAxC;AAMAhF,EAAAA,iBAAiB,CAACoE,IAAD,EAAOF,IAAI,GAAGC,MAAH,GAAYc,SAAvB,CAAjB;AAEA,QAAMC,sBAAsB,GAAG/F,WAAW,CAAC,MAAM;AAC/C,QAAI,CAAC2E,OAAL,EAAc;AACdpE,IAAAA,OAAO,CAACyF,KAAR,CAAc;AACZC,MAAAA,QAAQ,EAAE,OADE;AAEZC,MAAAA,MAAM,EAAE,8BAFI;AAGZC,MAAAA,KAAK,EAAEnC;AAHK,KAAd;AAKAO,IAAAA,QAAQ,CAACvD,gBAAgB,CAACgD,OAAD,CAAjB,CAAR;AACD,GARyC,EAQvC,CAACO,QAAD,EAAWP,OAAX,EAAoBW,OAApB,CARuC,CAA1C;AAUA,QAAMyB,gBAAgB,GAAGpG,WAAW,CAAC,MAAM;AACzCO,IAAAA,OAAO,CAACyF,KAAR,CAAc;AACZC,MAAAA,QAAQ,EAAE,OADE;AAEZC,MAAAA,MAAM,EAAE,mBAFI;AAGZC,MAAAA,KAAK,EAAEnC;AAHK,KAAd;;AAKA,QAAIqC,MAAM,CAACC,MAAP,CAAe,oEAAf,MAAyF,QAA7F,EAAsG;AACpG/F,MAAAA,OAAO,CAACyF,KAAR,CAAc;AACZC,QAAAA,QAAQ,EAAE,OADE;AAEZC,QAAAA,MAAM,EAAE,qBAFI;AAGZC,QAAAA,KAAK,EAAEnC;AAHK,OAAd;AAKAO,MAAAA,QAAQ,CAACpD,UAAU,CAAC6C,OAAD,CAAX,CAAR;AACD;AACF,GAdmC,EAcjC,CAACO,QAAD,EAAWP,OAAX,CAdiC,CAApC;AAgBA,QAAMuC,gBAAgB,GAAGvG,WAAW,CAAC,MAAM;AACzCO,IAAAA,OAAO,CAACyF,KAAR,CAAc;AACZC,MAAAA,QAAQ,EAAE,OADE;AAEZC,MAAAA,MAAM,EAAE,aAFI;AAGZC,MAAAA,KAAK,EAAEnC;AAHK,KAAd;AAKAO,IAAAA,QAAQ,CAACrD,UAAU,CAAC8C,OAAD,CAAX,CAAR;AACD,GAPmC,EAOjC,CAACO,QAAD,EAAWP,OAAX,CAPiC,CAApC;AASA,QAAMwC,iBAAiB,GAAGxG,WAAW,CAAC,MAAM;AAC1CO,IAAAA,OAAO,CAACyF,KAAR,CAAc;AACZC,MAAAA,QAAQ,EAAE,OADE;AAEZC,MAAAA,MAAM,EAAE,cAFI;AAGZC,MAAAA,KAAK,EAAEnC;AAHK,KAAd;AAKAO,IAAAA,QAAQ,CAACtD,WAAW,CAAC+C,OAAD,CAAZ,CAAR;AACD,GAPoC,EAOlC,CAACO,QAAD,EAAWP,OAAX,CAPkC,CAArC;AASA,MAAI,CAACS,IAAL,EAAW,OAAO,IAAP;AAEX,sBACE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEK,QAApB;AAA8B,IAAA,OAAO,EAAEF,SAAvC;AAAkD,IAAA,GAAG,EAAEZ,OAAvD;AAAgE,IAAA,EAAE,EAAED,gBAAgB,CAACC,OAAD,CAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,IAAI,CAACI,OAAL,gBACC,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,MAAf;AAAsB,IAAA,KAAK,EAAE;AAAE4B,MAAAA,WAAW,EAAE;AAAf,KAA7B;AAAsD,IAAA,OAAO,EAAEhC,IAAI,CAACI,OAApE;AAA6E,IAAA,GAAG,EAAG,GAAEJ,IAAI,CAACkB,IAAK,YAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC;AAAK,IAAA,KAAK,EAAE;AAAEe,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,MAAM,EAAE,MAAzB;AAAiCF,MAAAA,WAAW,EAAE;AAA9C,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAME,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAE9B,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCL,IAAI,CAACkB,IAAzC,CADF,CADF,eAIE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAmB,IAAA,MAAM,EAAEb,QAA3B;AAAqC,IAAA,EAAE,EAAC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IAAI,CAACoC,MAAL,CAAYC,MADf,YADF,eAIE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAE7B,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAED,MAAtB;AAA8B,IAAA,GAAG,EAAEG,mBAAnC;AAAwD,IAAA,OAAO,EAAC,GAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEL,QAAQ,GAAG3B,KAAK,CAAC4D,GAAT,GAAe5D,KAAK,CAAC6D,KAA/C;AAAsD,IAAA,IAAI,EAAE,EAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIGjC,IAAI,iBACH,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAE,IAAxB;AAA8B,IAAA,GAAG,EAAEM,gBAAnC;AAA4D,IAAA,KAAK,EAAEC,MAAM,CAAC2B;AAA1E,KAAsF1B,UAAU,CAAC0B,MAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMxC,IAAI,IAAI9C,gBAAgB,CAAC8C,IAAI,CAACyC,OAAN,CAA9B,CADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAG,yCAAwClD,OAAQ,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEoC,gBAAnC;AAAqD,IAAA,QAAQ,EAAEe,MAAM,CAACC,IAAP,CAAYjD,UAAZ,EAAwB2C,MAAxB,KAAmC,CAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAOGnC,OAAO,iBACN,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEoB,sBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARJ,CALJ,CAJF,CAJF,CANF,eAkCE,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAEjB,QADZ;AAEE,IAAA,OAAO,EAAEF,SAFX;AAGE,IAAA,MAAM,EAAE,MAAM;AACZE,MAAAA,QAAQ,GAAG0B,iBAAiB,EAApB,GAAyBD,gBAAgB,EAAjD;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,CADF;AA4CD,CAhHmB,CAApB;AAkHA,MAAMc,aAAa,GAAG1G,MAAM,CAACqC,GAAI;;;;;CAAjC;AAOA,OAAO,SAASsE,WAAT,CAAqB;AAC1BC,EAAAA,YAD0B;AAE1BC,EAAAA,aAF0B;AAG1BC,EAAAA;AAH0B,CAArB,EAQJ;AACD,QAAMtE,KAAK,GAAGrC,QAAQ,EAAtB;AAEA,QAAM,CAAC4G,YAAD,EAAeC,eAAf,IAAkCvH,QAAQ,CAAS,EAAT,CAAhD;AAEA,QAAMiE,KAAK,GAAGhD,WAAW,EAAzB,CALC,CAOD;;AACA,QAAMuG,cAAc,GAAGxG,iBAAiB,EAAxC;AACA,QAAM,CAACyG,UAAD,EAAaC,aAAb,IAA8B1H,QAAQ,EAA5C;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAC4H,UAAD,IAAeD,cAAnB,EAAmC;AACjCE,MAAAA,aAAa,CAACF,cAAD,CAAb;AACD;AACF,GAJQ,EAIN,CAACC,UAAD,EAAaD,cAAb,CAJM,CAAT;AAMA,QAAMG,WAAW,GAAG/H,WAAW,CAACgI,CAAC,IAAI;AACnCL,IAAAA,eAAe,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACD,GAF8B,EAE5B,EAF4B,CAA/B;AAIA,QAAMC,SAAS,GAAGvH,oBAAoB,EAAtC;AAEA,QAAMwH,QAAiB,GAAGlI,OAAO,CAAC,MAAM;AACtC,WAAO2B,SAAS,CAAC6F,YAAD,CAAT,CAAwBZ,MAAxB,GAAiC,CAAjC,IAAsCuB,OAAO,CAACzG,eAAe,CAAC8F,YAAD,CAAhB,CAApD;AACD,GAFgC,EAE9B,CAACA,YAAD,CAF8B,CAAjC;AAIA,QAAMY,WAAW,GAAGpI,OAAO,CAAC,MAAM;AAChC,UAAMqI,QAAQ,GAAGpB,MAAM,CAACC,IAAP,CAAY/C,KAAZ,CAAjB;AACA,WAAOkE,QAAQ,CACZC,MADI,CACGxE,OAAO,IAAI;AACjB;AACA,aAAOqE,OAAO,CAAChE,KAAK,CAACL,OAAD,CAAL,CAAeQ,OAAhB,CAAP,IAAmC,CAAC6D,OAAO,CAACzI,qBAAqB,CAAC6I,QAAtB,CAA+BzE,OAA/B,CAAD,CAAlD;AACD,KAJI,EAKJ0E,IALI,CAKC,CAACC,EAAD,EAAKC,EAAL,KAAY;AAChB,YAAM;AAAEpE,QAAAA,OAAO,EAAEqE;AAAX,UAAkBxE,KAAK,CAACsE,EAAD,CAA7B;AACA,YAAM;AAAEnE,QAAAA,OAAO,EAAEsE;AAAX,UAAkBzE,KAAK,CAACuE,EAAD,CAA7B,CAFgB,CAIhB;;AACA,UAAI,CAAAf,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEY,QAAZ,CAAqBE,EAArB,MAA4B,EAACd,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAEY,QAAZ,CAAqBG,EAArB,CAAD,CAAhC,EAA2D;AACzD,eAAO,CAAC,CAAR;AACD;;AACD,UAAI,EAACf,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAEY,QAAZ,CAAqBE,EAArB,CAAD,MAA6Bd,UAA7B,aAA6BA,UAA7B,uBAA6BA,UAAU,CAAEY,QAAZ,CAAqBG,EAArB,CAA7B,CAAJ,EAA2D;AACzD,eAAO,CAAP;AACD;;AAED,UAAIC,EAAE,IAAIC,EAAV,EAAc;AACZ,eAAOD,EAAE,CAAClD,IAAH,CAAQoD,WAAR,KAAwBD,EAAE,CAACnD,IAAH,CAAQoD,WAAR,EAAxB,GACH,CAAC,CADE,GAEHF,EAAE,CAAClD,IAAH,CAAQoD,WAAR,OAA0BD,EAAE,CAACnD,IAAH,CAAQoD,WAAR,EAA1B,GACA,CADA,GAEA,CAJJ;AAKD;;AACD,UAAIF,EAAJ,EAAQ,OAAO,CAAC,CAAR;AACR,UAAIC,EAAJ,EAAQ,OAAO,CAAP;AACR,aAAO,CAAP;AACD,KA3BI,CAAP;AA4BD,GA9B0B,EA8BxB,CAACzE,KAAD,EAAQwD,UAAR,CA9BwB,CAA3B,CA1BC,CA0DD;;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0B7I,QAAQ,EAAxC;AACA,QAAM,CAAC8I,QAAD,EAAWC,WAAX,IAA0B/I,QAAQ,EAAxC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAemJ,aAAf,GAA+B;AAC7BjB,MAAAA,SAAS,CAACT,YAAD,EAAe,KAAf,CAAT,CACG2B,IADH,CACQ5E,IAAI,IAAIwE,WAAW,CAACxE,IAAD,CAD3B,EAEG6E,KAFH,CAES,MAAMH,WAAW,CAAC,sBAAD,CAF1B;AAGD,KALa,CAMd;;;AACA,QAAIf,QAAJ,EAAc;AACZgB,MAAAA,aAAa;AACd,KAFD,MAEO;AACLH,MAAAA,WAAW,CAACnD,SAAD,CAAX;AACA4B,MAAAA,YAAY,KAAK,EAAjB,IAAuByB,WAAW,CAAC,2BAAD,CAAlC;AACD,KAZa,CAcd;;;AACA,QAAIzB,YAAY,KAAK,EAArB,EAAyB;AACvByB,MAAAA,WAAW,CAACrD,SAAD,CAAX;AACD;AACF,GAlBQ,EAkBN,CAACqC,SAAD,EAAYT,YAAZ,EAA0BU,QAA1B,CAlBM,CAAT,CA9DC,CAkFD;;AACA,QAAMmB,UAAU,GAAGpC,MAAM,CAACC,IAAP,CAAY/C,KAAZ,EAAmBoE,QAAnB,CAA4Bf,YAA5B,CAAnB,CAnFC,CAqFD;;AACA,QAAM8B,YAAY,GAAGxJ,WAAW,CAAC,MAAM;AACrC,QAAI,CAACgJ,QAAL,EAAe;AACfxB,IAAAA,aAAa,CAACwB,QAAD,CAAb;AACAzB,IAAAA,YAAY,CAAChF,iBAAiB,CAACkH,UAAnB,CAAZ;AACAhC,IAAAA,UAAU,CAACC,YAAD,CAAV;AACD,GAL+B,EAK7B,CAACA,YAAD,EAAeF,aAAf,EAA8BC,UAA9B,EAA0CF,YAA1C,EAAwDyB,QAAxD,CAL6B,CAAhC;AAOA,sBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,gBAFL;AAGE,IAAA,WAAW,EAAC,iCAHd;AAIE,IAAA,KAAK,EAAEtB,YAJT;AAKE,IAAA,QAAQ,EAAEK,WALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAUGmB,QAAQ,gBACP,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAEA,QAAnB;AAA6B,IAAA,KAAK,EAAE;AAAEQ,MAAAA,YAAY,EAAE,UAAhB;AAA4BC,MAAAA,QAAQ,EAAE;AAAtC,KAApC;AAAsF,IAAA,KAAK,MAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,QADH,CADO,GAIL,IAdN,CADF,EAiBGF,QAAQ,iBACP,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEY,MAAAA,UAAU,EAAE;AAAd,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,eAAe,EAAEzG,KAAK,CAACC,GAA7B;AAAkC,IAAA,OAAO,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG4F,QAAQ,CAACnE,OAAT,iBAAoB,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEmE,QAAQ,CAACnE,OAA5B;AAAqC,IAAA,IAAI,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADvB,eAEE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAC,KAAhB;AAAsB,IAAA,KAAK,EAAE;AAAEgF,MAAAA,UAAU,EAAE;AAAd,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,UAAU,EAAE,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6Bb,QAAQ,CAACrD,IAAtC,CADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,QAAQ,EAAE,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BqD,QAAQ,CAACnC,MAAT,CAAgBC,MAA9C,YAFF,CAFF,CADF,EAQGyC,UAAU,gBACT,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEpG,KAAK,CAACG,KAA3B;AAAkC,IAAA,IAAI,EAAC,MAAvC;AAA8C,IAAA,WAAW,EAAE,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAEH,KAAK,CAACG,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADS,gBAQT,oBAAC,aAAD;AACE,IAAA,KAAK,EAAE;AAAEwG,MAAAA,QAAQ,EAAE;AAAZ,KADT;AAEE,IAAA,OAAO,EAAC,SAFV;AAGE,IAAA,KAAK,EAAC,aAHR;AAIE,IAAA,OAAO,EAAEN,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ,CADF,CADF,CAlBJ,eAiDE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjDF,eAkDE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,WAAW,CAACyB,GAAZ,CAAgB/F,OAAO,iBACtB,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,OAAd;AAAuB,IAAA,OAAO,EAAEA,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CAlDF,CADF;AA4DD","sourcesContent":["import { TokenList } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'constants/lists'\nimport { useListColor } from 'hooks/useColor'\nimport React, { memo, useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { CheckCircle, Settings } from 'react-feather'\nimport ReactGA from 'react-ga'\nimport { usePopper } from 'react-popper'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { useFetchListCallback } from '../../hooks/useFetchListCallback'\nimport { useOnClickOutside } from '../../hooks/useOnClickOutside'\nimport useTheme from '../../hooks/useTheme'\nimport useToggle from '../../hooks/useToggle'\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, disableList, enableList, removeList } from '../../state/lists/actions'\nimport { useActiveListUrls, useAllLists, useIsListActive } from '../../state/lists/hooks'\nimport { ExternalLink, IconWrapper, LinkStyledButton, TYPE } from '../../theme'\nimport listVersionLabel from '../../utils/listVersionLabel'\nimport { parseENSAddress } from '../../utils/parseENSAddress'\nimport uriToHttp from '../../utils/uriToHttp'\nimport { ButtonEmpty, ButtonPrimary } from '../Button'\nimport Column, { AutoColumn } from '../Column'\nimport ListLogo from '../ListLogo'\nimport Row, { RowBetween, RowFixed } from '../Row'\nimport ListToggle from '../Toggle/ListToggle'\nimport { CurrencyModalView } from './CurrencySearchModal'\nimport { PaddedColumn, SearchInput, Separator, SeparatorDark } from './styleds'\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst UnpaddedLinkStyledButton = styled(LinkStyledButton)`\n  padding: 0;\n  font-size: 1rem;\n  opacity: ${({ disabled }) => (disabled ? '0.4' : '1')};\n`\n\nconst PopoverContainer = styled.div<{ show: boolean }>`\n  z-index: 100;\n  visibility: ${props => (props.show ? 'visible' : 'hidden')};\n  opacity: ${props => (props.show ? 1 : 0)};\n  transition: visibility 150ms linear, opacity 150ms linear;\n  background: ${({ theme }) => theme.bg2};\n  border: 1px solid ${({ theme }) => theme.bg3};\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n  color: ${({ theme }) => theme.text2};\n  border-radius: 0.5rem;\n  padding: 1rem;\n  display: grid;\n  grid-template-rows: 1fr;\n  grid-gap: 8px;\n  font-size: 1rem;\n  text-align: left;\n`\n\nconst StyledMenu = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  border: none;\n`\n\nconst StyledTitleText = styled.div<{ active: boolean }>`\n  font-size: 16px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 600;\n  color: ${({ theme, active }) => (active ? theme.white : theme.text2)};\n`\n\nconst StyledListUrlText = styled(TYPE.main)<{ active: boolean }>`\n  font-size: 12px;\n  color: ${({ theme, active }) => (active ? theme.white : theme.text2)};\n`\n\nconst RowWrapper = styled(Row)<{ bgColor: string; active: boolean }>`\n  background-color: ${({ bgColor, active, theme }) => (active ? bgColor ?? 'transparent' : theme.bg2)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>(state => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const theme = useTheme()\n  const listColor = useListColor(list?.logoURI)\n  const isActive = useIsListActive(listUrl)\n\n  const [open, toggle] = useToggle(false)\n  const node = useRef<HTMLDivElement>()\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement>()\n  const [popperElement, setPopperElement] = useState<HTMLDivElement>()\n\n  const { styles, attributes } = usePopper(referenceElement, popperElement, {\n    placement: 'auto',\n    strategy: 'fixed',\n    modifiers: [{ name: 'offset', options: { offset: [8, 8] } }]\n  })\n\n  useOnClickOutside(node, open ? toggle : undefined)\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Update List from List Select',\n      label: listUrl\n    })\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Start Remove List',\n      label: listUrl\n    })\n    if (window.prompt(`Please confirm you would like to remove this list by typing REMOVE`) === `REMOVE`) {\n      ReactGA.event({\n        category: 'Lists',\n        action: 'Confirm Remove List',\n        label: listUrl\n      })\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Enable List',\n      label: listUrl\n    })\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Disable List',\n      label: listUrl\n    })\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} bgColor={listColor} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <StyledTitleText active={isActive}>{list.name}</StyledTitleText>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <StyledListUrlText active={isActive} mr=\"6px\">\n            {list.tokens.length} tokens\n          </StyledListUrlText>\n          <StyledMenu ref={node as any}>\n            <ButtonEmpty onClick={toggle} ref={setReferenceElement} padding=\"0\">\n              <Settings stroke={isActive ? theme.bg1 : theme.text1} size={12} />\n            </ButtonEmpty>\n            {open && (\n              <PopoverContainer show={true} ref={setPopperElement as any} style={styles.popper} {...attributes.popper}>\n                <div>{list && listVersionLabel(list.version)}</div>\n                <SeparatorDark />\n                <ExternalLink href={`https://tokenlists.org/token-list?url=${listUrl}`}>View list</ExternalLink>\n                <UnpaddedLinkStyledButton onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n                  Remove list\n                </UnpaddedLinkStyledButton>\n                {pending && (\n                  <UnpaddedLinkStyledButton onClick={handleAcceptListUpdate}>Update list</UnpaddedLinkStyledButton>\n                )}\n              </PopoverContainer>\n            )}\n          </StyledMenu>\n        </RowFixed>\n      </Column>\n      <ListToggle\n        isActive={isActive}\n        bgColor={listColor}\n        toggle={() => {\n          isActive ? handleDisableList() : handleEnableList()\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem;\n  height: 100%;\n  overflow: auto;\n  padding-bottom: 80px;\n`\n\nexport function ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const theme = useTheme()\n\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback(e => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter(listUrl => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !Boolean(UNSUPPORTED_LIST_URLS.includes(listUrl))\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then(list => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      listUrlInput !== '' && setAddError('Enter valid list location')\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <PaddedColumn gap=\"14px\">\n        <Row>\n          <SearchInput\n            type=\"text\"\n            id=\"list-add-input\"\n            placeholder=\"https:// or ipfs:// or ENS name\"\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <TYPE.error title={addError} style={{ textOverflow: 'ellipsis', overflow: 'hidden' }} error>\n            {addError}\n          </TYPE.error>\n        ) : null}\n      </PaddedColumn>\n      {tempList && (\n        <PaddedColumn style={{ paddingTop: 0 }}>\n          <Card backgroundColor={theme.bg2} padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <TYPE.body fontWeight={600}>{tempList.name}</TYPE.body>\n                  <TYPE.main fontSize={'12px'}>{tempList.tokens.length} tokens</TYPE.main>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <IconWrapper stroke={theme.text2} size=\"16px\" marginRight={'10px'}>\n                    <CheckCircle />\n                  </IconWrapper>\n                  <TYPE.body color={theme.text2}>Loaded</TYPE.body>\n                </RowFixed>\n              ) : (\n                <ButtonPrimary\n                  style={{ fontSize: '14px' }}\n                  padding=\"6px 8px\"\n                  width=\"fit-content\"\n                  onClick={handleImport}\n                >\n                  Import\n                </ButtonPrimary>\n              )}\n            </RowBetween>\n          </Card>\n        </PaddedColumn>\n      )}\n      <Separator />\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map(listUrl => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}