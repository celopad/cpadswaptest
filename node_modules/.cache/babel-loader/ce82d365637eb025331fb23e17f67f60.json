{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar address_1 = require(\"@celo/base/lib/address\");\n\nvar async_1 = require(\"@celo/base/lib/async\");\n\nvar collections_1 = require(\"@celo/base/lib/collections\");\n\nvar connect_1 = require(\"@celo/connect\");\n\nvar fixidity_1 = require(\"@celo/utils/lib/fixidity\");\n\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\n\nvar ProposalStage;\n\n(function (ProposalStage) {\n  ProposalStage[\"None\"] = \"None\";\n  ProposalStage[\"Queued\"] = \"Queued\";\n  ProposalStage[\"Approval\"] = \"Approval\";\n  ProposalStage[\"Referendum\"] = \"Referendum\";\n  ProposalStage[\"Execution\"] = \"Execution\";\n  ProposalStage[\"Expiration\"] = \"Expiration\";\n})(ProposalStage = exports.ProposalStage || (exports.ProposalStage = {}));\n\nexports.proposalToParams = function (proposal, descriptionURL) {\n  var data = proposal.map(function (tx) {\n    return address_1.hexToBuffer(tx.input);\n  });\n  return [proposal.map(function (tx) {\n    return tx.value;\n  }), proposal.map(function (tx) {\n    return tx.to;\n  }), BaseWrapper_1.bufferToSolidityBytes(Buffer.concat(data)), data.map(function (inp) {\n    return inp.length;\n  }), descriptionURL];\n};\n\nvar VoteValue;\n\n(function (VoteValue) {\n  VoteValue[\"None\"] = \"NONE\";\n  VoteValue[\"Abstain\"] = \"Abstain\";\n  VoteValue[\"No\"] = \"No\";\n  VoteValue[\"Yes\"] = \"Yes\";\n})(VoteValue = exports.VoteValue || (exports.VoteValue = {}));\n\nexports.hotfixToParams = function (proposal, salt) {\n  var p = exports.proposalToParams(proposal, ''); // no description URL for hotfixes\n\n  return [p[0], p[1], p[2], p[3], address_1.bufferToHex(salt)];\n};\n\nvar ZERO_BN = new bignumber_js_1.default(0);\n/**\n * Contract managing voting for governance proposals.\n */\n\nvar GovernanceWrapper =\n/** @class */\nfunction (_super) {\n  __extends(GovernanceWrapper, _super);\n\n  function GovernanceWrapper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * Querying number of possible concurrent proposals.\n     * @returns Current number of possible concurrent proposals.\n     */\n\n\n    _this.concurrentProposals = BaseWrapper_1.proxyCall(_this.contract.methods.concurrentProposals, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Query proposal dequeue frequency.\n     * @returns Current proposal dequeue frequency in seconds.\n     */\n\n    _this.lastDequeue = BaseWrapper_1.proxyCall(_this.contract.methods.lastDequeue, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Query proposal dequeue frequency.\n     * @returns Current proposal dequeue frequency in seconds.\n     */\n\n    _this.dequeueFrequency = BaseWrapper_1.proxyCall(_this.contract.methods.dequeueFrequency, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Query minimum deposit required to make a proposal.\n     * @returns Current minimum deposit.\n     */\n\n    _this.minDeposit = BaseWrapper_1.proxyCall(_this.contract.methods.minDeposit, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Query queue expiry parameter.\n     * @return The number of seconds a proposal can stay in the queue before expiring.\n     */\n\n    _this.queueExpiry = BaseWrapper_1.proxyCall(_this.contract.methods.queueExpiry, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Returns whether or not a particular account is voting on proposals.\n     * @param account The address of the account.\n     * @returns Whether or not the account is voting on proposals.\n     */\n\n    _this.isVoting = BaseWrapper_1.proxyCall(_this.contract.methods.isVoting);\n    /**\n     * Returns the metadata associated with a given proposal.\n     * @param proposalID Governance proposal UUID\n     */\n\n    _this.getProposalMetadata = BaseWrapper_1.proxyCall(_this.contract.methods.getProposal, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString), function (res) {\n      return {\n        proposer: res[0],\n        deposit: BaseWrapper_1.valueToBigNumber(res[1]),\n        timestamp: BaseWrapper_1.valueToBigNumber(res[2]),\n        transactionCount: BaseWrapper_1.valueToInt(res[3]),\n        descriptionURL: res[4]\n      };\n    });\n    /**\n     * Returns the transaction at the given index associated with a given proposal.\n     * @param proposalID Governance proposal UUID\n     * @param txIndex Transaction index\n     */\n\n    _this.getProposalTransaction = BaseWrapper_1.proxyCall(_this.contract.methods.getProposalTransaction, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString, BaseWrapper_1.valueToString), function (res) {\n      return {\n        value: res[0],\n        to: res[1],\n        input: BaseWrapper_1.solidityBytesToString(res[2])\n      };\n    });\n    /**\n     * Returns whether a given proposal is approved.\n     * @param proposalID Governance proposal UUID\n     */\n\n    _this.isApproved = BaseWrapper_1.proxyCall(_this.contract.methods.isApproved, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString));\n    /**\n     * Returns whether a dequeued proposal is expired.\n     * @param proposalID Governance proposal UUID\n     */\n\n    _this.isDequeuedProposalExpired = BaseWrapper_1.proxyCall(_this.contract.methods.isDequeuedProposalExpired, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString));\n    /**\n     * Returns whether a dequeued proposal is expired.\n     * @param proposalID Governance proposal UUID\n     */\n\n    _this.isQueuedProposalExpired = BaseWrapper_1.proxyCall(_this.contract.methods.isQueuedProposalExpired, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString));\n    /**\n     * Returns the approver address for proposals and hotfixes.\n     */\n\n    _this.getApprover = BaseWrapper_1.proxyCall(_this.contract.methods.approver);\n    _this.getProposalStage = BaseWrapper_1.proxyCall(_this.contract.methods.getProposalStage, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString), function (res) {\n      return Object.keys(ProposalStage)[BaseWrapper_1.valueToInt(res)];\n    });\n    /**\n     * Returns whether a given proposal is passing relative to the constitution's threshold.\n     * @param proposalID Governance proposal UUID\n     */\n\n    _this.isProposalPassing = BaseWrapper_1.proxyCall(_this.contract.methods.isProposalPassing, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString));\n    /**\n     * Withdraws refunded proposal deposits.\n     */\n\n    _this.withdraw = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.withdraw);\n    /**\n     * Submits a new governance proposal.\n     * @param proposal Governance proposal\n     * @param descriptionURL A URL where further information about the proposal can be viewed\n     */\n\n    _this.propose = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.propose, exports.proposalToParams);\n    /**\n     * Returns whether a governance proposal exists with the given ID.\n     * @param proposalID Governance proposal UUID\n     */\n\n    _this.proposalExists = BaseWrapper_1.proxyCall(_this.contract.methods.proposalExists, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString));\n    /**\n     * Returns the current upvoted governance proposal ID and applied vote weight (zeroes if none).\n     * @param upvoter Address of upvoter\n     */\n\n    _this.getUpvoteRecord = BaseWrapper_1.proxyCall(_this.contract.methods.getUpvoteRecord, BaseWrapper_1.tupleParser(BaseWrapper_1.identity), function (o) {\n      return {\n        proposalID: BaseWrapper_1.valueToBigNumber(o[0]),\n        upvotes: BaseWrapper_1.valueToBigNumber(o[1])\n      };\n    });\n    /**\n     * Returns whether a given proposal is queued.\n     * @param proposalID Governance proposal UUID\n     */\n\n    _this.isQueued = BaseWrapper_1.proxyCall(_this.contract.methods.isQueued, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString));\n    /**\n     * Returns the value of proposal deposits that have been refunded.\n     * @param proposer Governance proposer address.\n     */\n\n    _this.getRefundedDeposits = BaseWrapper_1.proxyCall(_this.contract.methods.refundedDeposits, BaseWrapper_1.tupleParser(BaseWrapper_1.stringIdentity), BaseWrapper_1.valueToBigNumber);\n    /*\n     * Returns the upvotes applied to a given proposal.\n     * @param proposalID Governance proposal UUID\n     */\n\n    _this.getUpvotes = BaseWrapper_1.proxyCall(_this.contract.methods.getUpvotes, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString), BaseWrapper_1.valueToBigNumber);\n    /**\n     * Returns the yes, no, and abstain votes applied to a given proposal.\n     * @param proposalID Governance proposal UUID\n     */\n\n    _this.getVotes = BaseWrapper_1.proxyCall(_this.contract.methods.getVoteTotals, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString), function (res) {\n      var _a;\n\n      return _a = {}, _a[VoteValue.Yes] = BaseWrapper_1.valueToBigNumber(res[0]), _a[VoteValue.No] = BaseWrapper_1.valueToBigNumber(res[1]), _a[VoteValue.Abstain] = BaseWrapper_1.valueToBigNumber(res[2]), _a;\n    });\n    /**\n     * Returns the proposal queue as list of upvote records.\n     */\n\n    _this.getQueue = BaseWrapper_1.proxyCall(_this.contract.methods.getQueue, undefined, function (arraysObject) {\n      return collections_1.zip(function (_id, _upvotes) {\n        return {\n          proposalID: BaseWrapper_1.valueToBigNumber(_id),\n          upvotes: BaseWrapper_1.valueToBigNumber(_upvotes)\n        };\n      }, arraysObject[0], arraysObject[1]);\n    });\n    /**\n     * Dequeues any queued proposals if `dequeueFrequency` seconds have elapsed since the last dequeue\n     */\n\n    _this.dequeueProposalsIfReady = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.dequeueProposalsIfReady);\n    /**\n     * Returns whether a given hotfix has been whitelisted by a given address.\n     * @param hash keccak256 hash of hotfix's associated abi encoded transactions\n     * @param whitelister address of whitelister\n     */\n\n    _this.isHotfixWhitelistedBy = BaseWrapper_1.proxyCall(_this.contract.methods.isHotfixWhitelistedBy, BaseWrapper_1.tupleParser(address_1.bufferToHex, function (s) {\n      return BaseWrapper_1.identity(s);\n    }));\n    /**\n     * Returns whether a given hotfix can be passed.\n     * @param hash keccak256 hash of hotfix's associated abi encoded transactions\n     */\n\n    _this.isHotfixPassing = BaseWrapper_1.proxyCall(_this.contract.methods.isHotfixPassing, BaseWrapper_1.tupleParser(address_1.bufferToHex));\n    /**\n     * Returns the number of validators required to reach a Byzantine quorum\n     */\n\n    _this.minQuorumSize = BaseWrapper_1.proxyCall(_this.contract.methods.minQuorumSizeInCurrentSet, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Returns the number of validators that whitelisted the hotfix\n     * @param hash keccak256 hash of hotfix's associated abi encoded transactions\n     */\n\n    _this.hotfixWhitelistValidatorTally = BaseWrapper_1.proxyCall(_this.contract.methods.hotfixWhitelistValidatorTally, BaseWrapper_1.tupleParser(address_1.bufferToHex));\n    /**\n     * Marks the given hotfix whitelisted by `sender`.\n     * @param hash keccak256 hash of hotfix's associated abi encoded transactions\n     */\n\n    _this.whitelistHotfix = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.whitelistHotfix, BaseWrapper_1.tupleParser(address_1.bufferToHex));\n    /**\n     * Marks the given hotfix approved by `sender`.\n     * @param hash keccak256 hash of hotfix's associated abi encoded transactions\n     * @notice Only the `approver` address will succeed in sending this transaction\n     */\n\n    _this.approveHotfix = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.approveHotfix, BaseWrapper_1.tupleParser(address_1.bufferToHex));\n    /**\n     * Marks the given hotfix prepared for current epoch if quorum of validators have whitelisted it.\n     * @param hash keccak256 hash of hotfix's associated abi encoded transactions\n     */\n\n    _this.prepareHotfix = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.prepareHotfix, BaseWrapper_1.tupleParser(address_1.bufferToHex));\n    /**\n     * Executes a given sequence of transactions if the corresponding hash is prepared and approved.\n     * @param hotfix Governance hotfix proposal\n     * @param salt Secret which guarantees uniqueness of hash\n     * @notice keccak256 hash of abi encoded transactions computed on-chain\n     */\n\n    _this.executeHotfix = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.executeHotfix, exports.hotfixToParams);\n    return _this;\n  }\n  /**\n   * Query durations of different stages in proposal lifecycle.\n   * @returns Durations for approval, referendum and execution stages in seconds.\n   */\n\n\n  GovernanceWrapper.prototype.stageDurations = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var res;\n\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.contract.methods.stageDurations().call()];\n\n          case 1:\n            res = _b.sent();\n            return [2\n            /*return*/\n            , (_a = {}, _a[ProposalStage.Approval] = BaseWrapper_1.valueToBigNumber(res[0]), _a[ProposalStage.Referendum] = BaseWrapper_1.valueToBigNumber(res[1]), _a[ProposalStage.Execution] = BaseWrapper_1.valueToBigNumber(res[2]), _a)];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the required ratio of yes:no votes needed to exceed in order to pass the proposal transaction.\n   * @param tx Transaction to determine the constitution for running.\n   */\n\n\n  GovernanceWrapper.prototype.getTransactionConstitution = function (tx) {\n    var _a;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var callSignature, value;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            callSignature = address_1.ensureLeading0x(address_1.trimLeading0x(tx.input).slice(0, 8));\n            return [4\n            /*yield*/\n            , this.contract.methods.getConstitution((_a = tx.to) !== null && _a !== void 0 ? _a : address_1.NULL_ADDRESS, callSignature).call()];\n\n          case 1:\n            value = _b.sent();\n            return [2\n            /*return*/\n            , fixidity_1.fromFixed(new bignumber_js_1.default(value))];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the required ratio of yes:no votes needed to exceed in order to pass the proposal.\n   * @param proposal Proposal to determine the constitution for running.\n   */\n\n\n  GovernanceWrapper.prototype.getConstitution = function (proposal) {\n    return __awaiter(this, void 0, void 0, function () {\n      var constitution, _i, proposal_1, tx, _a, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            constitution = new bignumber_js_1.default(0);\n            _i = 0, proposal_1 = proposal;\n            _c.label = 1;\n\n          case 1:\n            if (!(_i < proposal_1.length)) return [3\n            /*break*/\n            , 4];\n            tx = proposal_1[_i];\n            _b = (_a = bignumber_js_1.default).max;\n            return [4\n            /*yield*/\n            , this.getTransactionConstitution(tx)];\n\n          case 2:\n            constitution = _b.apply(_a, [_c.sent(), constitution]);\n            _c.label = 3;\n\n          case 3:\n            _i++;\n            return [3\n            /*break*/\n            , 1];\n\n          case 4:\n            return [2\n            /*return*/\n            , constitution];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the participation parameters.\n   * @returns The participation parameters.\n   */\n\n\n  GovernanceWrapper.prototype.getParticipationParameters = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var res;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.contract.methods.getParticipationParameters().call()];\n\n          case 1:\n            res = _a.sent();\n            return [2\n            /*return*/\n            , {\n              baseline: fixidity_1.fromFixed(new bignumber_js_1.default(res[0])),\n              baselineFloor: fixidity_1.fromFixed(new bignumber_js_1.default(res[1])),\n              baselineUpdateFactor: fixidity_1.fromFixed(new bignumber_js_1.default(res[2])),\n              baselineQuorumFactor: fixidity_1.fromFixed(new bignumber_js_1.default(res[3]))\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Returns current configuration parameters.\n   */\n\n\n  GovernanceWrapper.prototype.getConfig = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var res;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all([this.concurrentProposals(), this.dequeueFrequency(), this.minDeposit(), this.queueExpiry(), this.stageDurations(), this.getParticipationParameters()])];\n\n          case 1:\n            res = _a.sent();\n            return [2\n            /*return*/\n            , {\n              concurrentProposals: res[0],\n              dequeueFrequency: res[1],\n              minDeposit: res[2],\n              queueExpiry: res[3],\n              stageDurations: res[4],\n              participationParameters: res[5]\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * @dev Returns human readable configuration of the governance contract\n   * @return GovernanceConfig object\n   */\n\n\n  GovernanceWrapper.prototype.getHumanReadableConfig = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var config, stageDurations;\n\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getConfig()];\n\n          case 1:\n            config = _b.sent();\n            stageDurations = (_a = {}, _a[ProposalStage.Approval] = BaseWrapper_1.secondsToDurationString(config.stageDurations[ProposalStage.Approval]), _a[ProposalStage.Referendum] = BaseWrapper_1.secondsToDurationString(config.stageDurations[ProposalStage.Referendum]), _a[ProposalStage.Execution] = BaseWrapper_1.secondsToDurationString(config.stageDurations[ProposalStage.Execution]), _a);\n            return [2\n            /*return*/\n            , __assign(__assign({}, config), {\n              dequeueFrequency: BaseWrapper_1.secondsToDurationString(config.dequeueFrequency),\n              queueExpiry: BaseWrapper_1.secondsToDurationString(config.queueExpiry),\n              stageDurations: stageDurations\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the human readable metadata associated with a given proposal.\n   * @param proposalID Governance proposal UUID\n   */\n\n\n  GovernanceWrapper.prototype.getHumanReadableProposalMetadata = function (proposalID) {\n    return __awaiter(this, void 0, void 0, function () {\n      var meta;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getProposalMetadata(proposalID)];\n\n          case 1:\n            meta = _a.sent();\n            return [2\n            /*return*/\n            , __assign(__assign({}, meta), {\n              timestamp: BaseWrapper_1.unixSecondsTimestampToDateString(meta.timestamp)\n            })];\n        }\n      });\n    });\n  };\n\n  GovernanceWrapper.prototype.timeUntilStages = function (proposalID) {\n    return __awaiter(this, void 0, void 0, function () {\n      var meta, now, durations, referendum, execution, expiration;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getProposalMetadata(proposalID)];\n\n          case 1:\n            meta = _a.sent();\n            now = Math.round(new Date().getTime() / 1000);\n            return [4\n            /*yield*/\n            , this.stageDurations()];\n\n          case 2:\n            durations = _a.sent();\n            referendum = meta.timestamp.plus(durations.Approval).minus(now);\n            execution = referendum.plus(durations.Referendum);\n            expiration = execution.plus(durations.Execution);\n            return [2\n            /*return*/\n            , {\n              referendum: referendum,\n              execution: execution,\n              expiration: expiration\n            }];\n        }\n      });\n    });\n  };\n\n  GovernanceWrapper.prototype.humanReadableTimeUntilStages = function (propoaslID) {\n    return __awaiter(this, void 0, void 0, function () {\n      var time;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.timeUntilStages(propoaslID)];\n\n          case 1:\n            time = _a.sent();\n            return [2\n            /*return*/\n            , {\n              referendum: BaseWrapper_1.secondsToDurationString(time.referendum),\n              execution: BaseWrapper_1.secondsToDurationString(time.execution),\n              expiration: BaseWrapper_1.secondsToDurationString(time.expiration)\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the proposal associated with a given id.\n   * @param proposalID Governance proposal UUID\n   */\n\n\n  GovernanceWrapper.prototype.getProposal = function (proposalID) {\n    return __awaiter(this, void 0, void 0, function () {\n      var metadata, txIndices;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getProposalMetadata(proposalID)];\n\n          case 1:\n            metadata = _a.sent();\n            txIndices = collections_1.zeroRange(metadata.transactionCount);\n            return [2\n            /*return*/\n            , async_1.concurrentMap(4, txIndices, function (idx) {\n              return _this.getProposalTransaction(proposalID, idx);\n            })];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the stage, metadata, upvotes, votes, and transactions associated with a given proposal.\n   * @param proposalID Governance proposal UUID\n   */\n\n\n  GovernanceWrapper.prototype.getProposalRecord = function (proposalID) {\n    return __awaiter(this, void 0, void 0, function () {\n      var metadata, proposal, stage, passing, upvotes, votes;\n\n      var _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getProposalMetadata(proposalID)];\n\n          case 1:\n            metadata = _b.sent();\n            return [4\n            /*yield*/\n            , this.getProposal(proposalID)];\n\n          case 2:\n            proposal = _b.sent();\n            return [4\n            /*yield*/\n            , this.getProposalStage(proposalID)];\n\n          case 3:\n            stage = _b.sent();\n            return [4\n            /*yield*/\n            , this.isProposalPassing(proposalID)];\n\n          case 4:\n            passing = _b.sent();\n            upvotes = ZERO_BN;\n            votes = (_a = {}, _a[VoteValue.Yes] = ZERO_BN, _a[VoteValue.No] = ZERO_BN, _a[VoteValue.Abstain] = ZERO_BN, _a);\n            if (!(stage === ProposalStage.Queued)) return [3\n            /*break*/\n            , 6];\n            return [4\n            /*yield*/\n            , this.getUpvotes(proposalID)];\n\n          case 5:\n            upvotes = _b.sent();\n            return [3\n            /*break*/\n            , 8];\n\n          case 6:\n            if (!(stage !== ProposalStage.Expiration)) return [3\n            /*break*/\n            , 8];\n            return [4\n            /*yield*/\n            , this.getVotes(proposalID)];\n\n          case 7:\n            votes = _b.sent();\n            _b.label = 8;\n\n          case 8:\n            return [2\n            /*return*/\n            , {\n              proposal: proposal,\n              metadata: metadata,\n              stage: stage,\n              upvotes: upvotes,\n              votes: votes,\n              passing: passing\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the corresponding vote record\n   * @param voter Address of voter\n   * @param proposalID Governance proposal UUID\n   */\n\n\n  GovernanceWrapper.prototype.getVoteRecord = function (voter, proposalID) {\n    return __awaiter(this, void 0, void 0, function () {\n      var proposalIndex, res, _1;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.getDequeueIndex(proposalID)];\n\n          case 1:\n            proposalIndex = _a.sent();\n            return [4\n            /*yield*/\n            , this.contract.methods.getVoteRecord(voter, proposalIndex).call()];\n\n          case 2:\n            res = _a.sent();\n            return [2\n            /*return*/\n            , {\n              proposalID: BaseWrapper_1.valueToBigNumber(res[0]),\n              value: Object.keys(VoteValue)[BaseWrapper_1.valueToInt(res[1])],\n              votes: BaseWrapper_1.valueToBigNumber(res[2])\n            }];\n\n          case 3:\n            _1 = _a.sent(); // The proposal ID may not be present in the dequeued list, or the voter may not have a vote\n            // record for the proposal.\n\n            return [2\n            /*return*/\n            , null];\n\n          case 4:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the (existing) proposal dequeue as list of proposal IDs.\n   */\n\n\n  GovernanceWrapper.prototype.getDequeue = function (filterZeroes) {\n    if (filterZeroes === void 0) {\n      filterZeroes = false;\n    }\n\n    return __awaiter(this, void 0, void 0, function () {\n      var dequeue, dequeueIds;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.contract.methods.getDequeue().call() // filter non-zero as dequeued indices are reused and `deleteDequeuedProposal` zeroes\n            ];\n\n          case 1:\n            dequeue = _a.sent();\n            dequeueIds = dequeue.map(BaseWrapper_1.valueToBigNumber);\n            return [2\n            /*return*/\n            , filterZeroes ? dequeueIds.filter(function (id) {\n              return !id.isZero();\n            }) : dequeueIds];\n        }\n      });\n    });\n  };\n  /*\n   * Returns the vote records for a given voter.\n   */\n\n\n  GovernanceWrapper.prototype.getVoteRecords = function (voter) {\n    return __awaiter(this, void 0, void 0, function () {\n      var dequeue, voteRecords;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getDequeue()];\n\n          case 1:\n            dequeue = _a.sent();\n            return [4\n            /*yield*/\n            , Promise.all(dequeue.map(function (id) {\n              return _this.getVoteRecord(voter, id);\n            }))];\n\n          case 2:\n            voteRecords = _a.sent();\n            return [2\n            /*return*/\n            , voteRecords.filter(function (record) {\n              return record != null;\n            })];\n        }\n      });\n    });\n  };\n  /*\n   * Returns information pertaining to a voter in governance.\n   */\n\n\n  GovernanceWrapper.prototype.getVoter = function (account) {\n    return __awaiter(this, void 0, void 0, function () {\n      var res;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , Promise.all([this.getUpvoteRecord(account), this.getVoteRecords(account), this.getRefundedDeposits(account)])];\n\n          case 1:\n            res = _a.sent();\n            return [2\n            /*return*/\n            , {\n              upvote: res[0],\n              votes: res[1],\n              refundedDeposits: res[2]\n            }];\n        }\n      });\n    });\n  };\n  /**\n   * Returns the number of votes that will be applied to a proposal for a given voter.\n   * @param voter Address of voter\n   */\n\n\n  GovernanceWrapper.prototype.getVoteWeight = function (voter) {\n    return __awaiter(this, void 0, void 0, function () {\n      var lockedGoldContract;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.kit.contracts.getLockedGold()];\n\n          case 1:\n            lockedGoldContract = _a.sent();\n            return [2\n            /*return*/\n            , lockedGoldContract.getAccountTotalLockedGold(voter)];\n        }\n      });\n    });\n  };\n\n  GovernanceWrapper.prototype.getIndex = function (id, array) {\n    var index = array.findIndex(function (bn) {\n      return bn.isEqualTo(id);\n    });\n\n    if (index === -1) {\n      throw new Error(\"ID \" + id + \" not found in array \" + array);\n    }\n\n    return index;\n  };\n\n  GovernanceWrapper.prototype.getDequeueIndex = function (proposalID, dequeue) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!dequeue) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.getDequeue()];\n\n          case 1:\n            dequeue = _a.sent();\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , this.getIndex(proposalID, dequeue)];\n        }\n      });\n    });\n  };\n\n  GovernanceWrapper.prototype.getQueueIndex = function (proposalID, queue) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!queue) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this.getQueue()];\n\n          case 1:\n            queue = _a.sent();\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , {\n              index: this.getIndex(proposalID, queue.map(function (record) {\n                return record.proposalID;\n              })),\n              queue: queue\n            }];\n        }\n      });\n    });\n  };\n\n  GovernanceWrapper.prototype.lesserAndGreater = function (proposalID, _queue) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, index, queue;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getQueueIndex(proposalID, _queue)];\n\n          case 1:\n            _a = _b.sent(), index = _a.index, queue = _a.queue;\n            return [2\n            /*return*/\n            , {\n              lesserID: index === 0 ? ZERO_BN : queue[index - 1].proposalID,\n              greaterID: index === queue.length - 1 ? ZERO_BN : queue[index + 1].proposalID\n            }];\n        }\n      });\n    });\n  };\n\n  GovernanceWrapper.prototype.sortedQueue = function (queue) {\n    return queue.sort(function (a, b) {\n      return a.upvotes.comparedTo(b.upvotes);\n    });\n  };\n\n  GovernanceWrapper.prototype.withUpvoteRevoked = function (upvoter, _queue) {\n    return __awaiter(this, void 0, void 0, function () {\n      var upvoteRecord, _a, index, queue;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getUpvoteRecord(upvoter)];\n\n          case 1:\n            upvoteRecord = _b.sent();\n            return [4\n            /*yield*/\n            , this.getQueueIndex(upvoteRecord.proposalID, _queue)];\n\n          case 2:\n            _a = _b.sent(), index = _a.index, queue = _a.queue;\n            queue[index].upvotes = queue[index].upvotes.minus(upvoteRecord.upvotes);\n            return [2\n            /*return*/\n            , {\n              queue: this.sortedQueue(queue),\n              upvoteRecord: upvoteRecord\n            }];\n        }\n      });\n    });\n  };\n\n  GovernanceWrapper.prototype.withUpvoteApplied = function (upvoter, proposalID, _queue) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, index, queue, weight;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getQueueIndex(proposalID, _queue)];\n\n          case 1:\n            _a = _b.sent(), index = _a.index, queue = _a.queue;\n            return [4\n            /*yield*/\n            , this.getVoteWeight(upvoter)];\n\n          case 2:\n            weight = _b.sent();\n            queue[index].upvotes = queue[index].upvotes.plus(weight);\n            return [2\n            /*return*/\n            , this.sortedQueue(queue)];\n        }\n      });\n    });\n  };\n\n  GovernanceWrapper.prototype.lesserAndGreaterAfterRevoke = function (upvoter) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, queue, upvoteRecord;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.withUpvoteRevoked(upvoter)];\n\n          case 1:\n            _a = _b.sent(), queue = _a.queue, upvoteRecord = _a.upvoteRecord;\n            return [2\n            /*return*/\n            , this.lesserAndGreater(upvoteRecord.proposalID, queue)];\n        }\n      });\n    });\n  };\n\n  GovernanceWrapper.prototype.lesserAndGreaterAfterUpvote = function (upvoter, proposalID) {\n    return __awaiter(this, void 0, void 0, function () {\n      var upvoteRecord, recordQueued, queue, _a, upvoteQueue;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getUpvoteRecord(upvoter)];\n\n          case 1:\n            upvoteRecord = _b.sent();\n            return [4\n            /*yield*/\n            , this.isQueued(upvoteRecord.proposalID) // if existing upvote exists in queue, revoke it before applying new upvote\n            ];\n\n          case 2:\n            recordQueued = _b.sent();\n            if (!recordQueued) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , this.withUpvoteRevoked(upvoter)];\n\n          case 3:\n            _a = _b.sent().queue;\n            return [3\n            /*break*/\n            , 6];\n\n          case 4:\n            return [4\n            /*yield*/\n            , this.getQueue()];\n\n          case 5:\n            _a = _b.sent();\n            _b.label = 6;\n\n          case 6:\n            queue = _a;\n            return [4\n            /*yield*/\n            , this.withUpvoteApplied(upvoter, proposalID, queue)];\n\n          case 7:\n            upvoteQueue = _b.sent();\n            return [2\n            /*return*/\n            , this.lesserAndGreater(proposalID, upvoteQueue)];\n        }\n      });\n    });\n  };\n  /**\n   * Applies provided upvoter's upvote to given proposal.\n   * @param proposalID Governance proposal UUID\n   * @param upvoter Address of upvoter\n   */\n\n\n  GovernanceWrapper.prototype.upvote = function (proposalID, upvoter) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, lesserID, greaterID;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.lesserAndGreaterAfterUpvote(upvoter, proposalID)];\n\n          case 1:\n            _a = _b.sent(), lesserID = _a.lesserID, greaterID = _a.greaterID;\n            return [2\n            /*return*/\n            , connect_1.toTransactionObject(this.kit.connection, this.contract.methods.upvote(BaseWrapper_1.valueToString(proposalID), BaseWrapper_1.valueToString(lesserID), BaseWrapper_1.valueToString(greaterID)))];\n        }\n      });\n    });\n  };\n  /**\n   * Revokes provided upvoter's upvote.\n   * @param upvoter Address of upvoter\n   */\n\n\n  GovernanceWrapper.prototype.revokeUpvote = function (upvoter) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, lesserID, greaterID;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.lesserAndGreaterAfterRevoke(upvoter)];\n\n          case 1:\n            _a = _b.sent(), lesserID = _a.lesserID, greaterID = _a.greaterID;\n            return [2\n            /*return*/\n            , connect_1.toTransactionObject(this.kit.connection, this.contract.methods.revokeUpvote(BaseWrapper_1.valueToString(lesserID), BaseWrapper_1.valueToString(greaterID)))];\n        }\n      });\n    });\n  };\n  /**\n   * Approves given proposal, allowing it to later move to `referendum`.\n   * @param proposalID Governance proposal UUID\n   * @notice Only the `approver` address will succeed in sending this transaction\n   */\n\n\n  GovernanceWrapper.prototype.approve = function (proposalID) {\n    return __awaiter(this, void 0, void 0, function () {\n      var proposalIndex;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getDequeueIndex(proposalID)];\n\n          case 1:\n            proposalIndex = _a.sent();\n            return [2\n            /*return*/\n            , connect_1.toTransactionObject(this.kit.connection, this.contract.methods.approve(BaseWrapper_1.valueToString(proposalID), proposalIndex))];\n        }\n      });\n    });\n  };\n  /**\n   * Applies `sender`'s vote choice to a given proposal.\n   * @param proposalID Governance proposal UUID\n   * @param vote Choice to apply (yes, no, abstain)\n   */\n\n\n  GovernanceWrapper.prototype.vote = function (proposalID, vote) {\n    return __awaiter(this, void 0, void 0, function () {\n      var proposalIndex, voteNum;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getDequeueIndex(proposalID)];\n\n          case 1:\n            proposalIndex = _a.sent();\n            voteNum = Object.keys(VoteValue).indexOf(vote);\n            return [2\n            /*return*/\n            , connect_1.toTransactionObject(this.kit.connection, this.contract.methods.vote(BaseWrapper_1.valueToString(proposalID), proposalIndex, voteNum))];\n        }\n      });\n    });\n  };\n  /**\n   * Returns `voter`'s vote choice on a given proposal.\n   * @param proposalID Governance proposal UUID\n   * @param voter Address of voter\n   */\n\n\n  GovernanceWrapper.prototype.getVoteValue = function (proposalID, voter) {\n    return __awaiter(this, void 0, void 0, function () {\n      var proposalIndex, res;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getDequeueIndex(proposalID)];\n\n          case 1:\n            proposalIndex = _a.sent();\n            return [4\n            /*yield*/\n            , this.contract.methods.getVoteRecord(voter, proposalIndex).call()];\n\n          case 2:\n            res = _a.sent();\n            return [2\n            /*return*/\n            , Object.keys(VoteValue)[BaseWrapper_1.valueToInt(res[1])]];\n        }\n      });\n    });\n  };\n  /**\n   * Executes a given proposal's associated transactions.\n   * @param proposalID Governance proposal UUID\n   */\n\n\n  GovernanceWrapper.prototype.execute = function (proposalID) {\n    return __awaiter(this, void 0, void 0, function () {\n      var proposalIndex;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.getDequeueIndex(proposalID)];\n\n          case 1:\n            proposalIndex = _a.sent();\n            return [2\n            /*return*/\n            , connect_1.toTransactionObject(this.kit.connection, this.contract.methods.execute(BaseWrapper_1.valueToString(proposalID), proposalIndex))];\n        }\n      });\n    });\n  };\n  /**\n   * Returns approved, executed, and prepared status associated with a given hotfix.\n   * @param hash keccak256 hash of hotfix's associated abi encoded transactions\n   */\n\n\n  GovernanceWrapper.prototype.getHotfixRecord = function (hash) {\n    return __awaiter(this, void 0, void 0, function () {\n      var res;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.contract.methods.getHotfixRecord(address_1.bufferToHex(hash)).call()];\n\n          case 1:\n            res = _a.sent();\n            return [2\n            /*return*/\n            , {\n              approved: res[0],\n              executed: res[1],\n              preparedEpoch: BaseWrapper_1.valueToBigNumber(res[2])\n            }];\n        }\n      });\n    });\n  };\n\n  return GovernanceWrapper;\n}(BaseWrapper_1.BaseWrapper);\n\nexports.GovernanceWrapper = GovernanceWrapper;","map":{"version":3,"sources":["../../src/wrappers/Governance.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar address_1 = require(\"@celo/base/lib/address\");\nvar async_1 = require(\"@celo/base/lib/async\");\nvar collections_1 = require(\"@celo/base/lib/collections\");\nvar connect_1 = require(\"@celo/connect\");\nvar fixidity_1 = require(\"@celo/utils/lib/fixidity\");\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\nvar ProposalStage;\n(function (ProposalStage) {\n    ProposalStage[\"None\"] = \"None\";\n    ProposalStage[\"Queued\"] = \"Queued\";\n    ProposalStage[\"Approval\"] = \"Approval\";\n    ProposalStage[\"Referendum\"] = \"Referendum\";\n    ProposalStage[\"Execution\"] = \"Execution\";\n    ProposalStage[\"Expiration\"] = \"Expiration\";\n})(ProposalStage = exports.ProposalStage || (exports.ProposalStage = {}));\nexports.proposalToParams = function (proposal, descriptionURL) {\n    var data = proposal.map(function (tx) { return address_1.hexToBuffer(tx.input); });\n    return [\n        proposal.map(function (tx) { return tx.value; }),\n        proposal.map(function (tx) { return tx.to; }),\n        BaseWrapper_1.bufferToSolidityBytes(Buffer.concat(data)),\n        data.map(function (inp) { return inp.length; }),\n        descriptionURL,\n    ];\n};\nvar VoteValue;\n(function (VoteValue) {\n    VoteValue[\"None\"] = \"NONE\";\n    VoteValue[\"Abstain\"] = \"Abstain\";\n    VoteValue[\"No\"] = \"No\";\n    VoteValue[\"Yes\"] = \"Yes\";\n})(VoteValue = exports.VoteValue || (exports.VoteValue = {}));\nexports.hotfixToParams = function (proposal, salt) {\n    var p = exports.proposalToParams(proposal, ''); // no description URL for hotfixes\n    return [p[0], p[1], p[2], p[3], address_1.bufferToHex(salt)];\n};\nvar ZERO_BN = new bignumber_js_1.default(0);\n/**\n * Contract managing voting for governance proposals.\n */\nvar GovernanceWrapper = /** @class */ (function (_super) {\n    __extends(GovernanceWrapper, _super);\n    function GovernanceWrapper() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Querying number of possible concurrent proposals.\n         * @returns Current number of possible concurrent proposals.\n         */\n        _this.concurrentProposals = BaseWrapper_1.proxyCall(_this.contract.methods.concurrentProposals, undefined, BaseWrapper_1.valueToBigNumber);\n        /**\n         * Query proposal dequeue frequency.\n         * @returns Current proposal dequeue frequency in seconds.\n         */\n        _this.lastDequeue = BaseWrapper_1.proxyCall(_this.contract.methods.lastDequeue, undefined, BaseWrapper_1.valueToBigNumber);\n        /**\n         * Query proposal dequeue frequency.\n         * @returns Current proposal dequeue frequency in seconds.\n         */\n        _this.dequeueFrequency = BaseWrapper_1.proxyCall(_this.contract.methods.dequeueFrequency, undefined, BaseWrapper_1.valueToBigNumber);\n        /**\n         * Query minimum deposit required to make a proposal.\n         * @returns Current minimum deposit.\n         */\n        _this.minDeposit = BaseWrapper_1.proxyCall(_this.contract.methods.minDeposit, undefined, BaseWrapper_1.valueToBigNumber);\n        /**\n         * Query queue expiry parameter.\n         * @return The number of seconds a proposal can stay in the queue before expiring.\n         */\n        _this.queueExpiry = BaseWrapper_1.proxyCall(_this.contract.methods.queueExpiry, undefined, BaseWrapper_1.valueToBigNumber);\n        /**\n         * Returns whether or not a particular account is voting on proposals.\n         * @param account The address of the account.\n         * @returns Whether or not the account is voting on proposals.\n         */\n        _this.isVoting = BaseWrapper_1.proxyCall(_this.contract.methods.isVoting);\n        /**\n         * Returns the metadata associated with a given proposal.\n         * @param proposalID Governance proposal UUID\n         */\n        _this.getProposalMetadata = BaseWrapper_1.proxyCall(_this.contract.methods.getProposal, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString), function (res) { return ({\n            proposer: res[0],\n            deposit: BaseWrapper_1.valueToBigNumber(res[1]),\n            timestamp: BaseWrapper_1.valueToBigNumber(res[2]),\n            transactionCount: BaseWrapper_1.valueToInt(res[3]),\n            descriptionURL: res[4],\n        }); });\n        /**\n         * Returns the transaction at the given index associated with a given proposal.\n         * @param proposalID Governance proposal UUID\n         * @param txIndex Transaction index\n         */\n        _this.getProposalTransaction = BaseWrapper_1.proxyCall(_this.contract.methods.getProposalTransaction, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString, BaseWrapper_1.valueToString), function (res) { return ({\n            value: res[0],\n            to: res[1],\n            input: BaseWrapper_1.solidityBytesToString(res[2]),\n        }); });\n        /**\n         * Returns whether a given proposal is approved.\n         * @param proposalID Governance proposal UUID\n         */\n        _this.isApproved = BaseWrapper_1.proxyCall(_this.contract.methods.isApproved, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString));\n        /**\n         * Returns whether a dequeued proposal is expired.\n         * @param proposalID Governance proposal UUID\n         */\n        _this.isDequeuedProposalExpired = BaseWrapper_1.proxyCall(_this.contract.methods.isDequeuedProposalExpired, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString));\n        /**\n         * Returns whether a dequeued proposal is expired.\n         * @param proposalID Governance proposal UUID\n         */\n        _this.isQueuedProposalExpired = BaseWrapper_1.proxyCall(_this.contract.methods.isQueuedProposalExpired, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString));\n        /**\n         * Returns the approver address for proposals and hotfixes.\n         */\n        _this.getApprover = BaseWrapper_1.proxyCall(_this.contract.methods.approver);\n        _this.getProposalStage = BaseWrapper_1.proxyCall(_this.contract.methods.getProposalStage, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString), function (res) { return Object.keys(ProposalStage)[BaseWrapper_1.valueToInt(res)]; });\n        /**\n         * Returns whether a given proposal is passing relative to the constitution's threshold.\n         * @param proposalID Governance proposal UUID\n         */\n        _this.isProposalPassing = BaseWrapper_1.proxyCall(_this.contract.methods.isProposalPassing, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString));\n        /**\n         * Withdraws refunded proposal deposits.\n         */\n        _this.withdraw = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.withdraw);\n        /**\n         * Submits a new governance proposal.\n         * @param proposal Governance proposal\n         * @param descriptionURL A URL where further information about the proposal can be viewed\n         */\n        _this.propose = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.propose, exports.proposalToParams);\n        /**\n         * Returns whether a governance proposal exists with the given ID.\n         * @param proposalID Governance proposal UUID\n         */\n        _this.proposalExists = BaseWrapper_1.proxyCall(_this.contract.methods.proposalExists, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString));\n        /**\n         * Returns the current upvoted governance proposal ID and applied vote weight (zeroes if none).\n         * @param upvoter Address of upvoter\n         */\n        _this.getUpvoteRecord = BaseWrapper_1.proxyCall(_this.contract.methods.getUpvoteRecord, BaseWrapper_1.tupleParser(BaseWrapper_1.identity), function (o) { return ({\n            proposalID: BaseWrapper_1.valueToBigNumber(o[0]),\n            upvotes: BaseWrapper_1.valueToBigNumber(o[1]),\n        }); });\n        /**\n         * Returns whether a given proposal is queued.\n         * @param proposalID Governance proposal UUID\n         */\n        _this.isQueued = BaseWrapper_1.proxyCall(_this.contract.methods.isQueued, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString));\n        /**\n         * Returns the value of proposal deposits that have been refunded.\n         * @param proposer Governance proposer address.\n         */\n        _this.getRefundedDeposits = BaseWrapper_1.proxyCall(_this.contract.methods.refundedDeposits, BaseWrapper_1.tupleParser(BaseWrapper_1.stringIdentity), BaseWrapper_1.valueToBigNumber);\n        /*\n         * Returns the upvotes applied to a given proposal.\n         * @param proposalID Governance proposal UUID\n         */\n        _this.getUpvotes = BaseWrapper_1.proxyCall(_this.contract.methods.getUpvotes, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString), BaseWrapper_1.valueToBigNumber);\n        /**\n         * Returns the yes, no, and abstain votes applied to a given proposal.\n         * @param proposalID Governance proposal UUID\n         */\n        _this.getVotes = BaseWrapper_1.proxyCall(_this.contract.methods.getVoteTotals, BaseWrapper_1.tupleParser(BaseWrapper_1.valueToString), function (res) {\n            var _a;\n            return (_a = {},\n                _a[VoteValue.Yes] = BaseWrapper_1.valueToBigNumber(res[0]),\n                _a[VoteValue.No] = BaseWrapper_1.valueToBigNumber(res[1]),\n                _a[VoteValue.Abstain] = BaseWrapper_1.valueToBigNumber(res[2]),\n                _a);\n        });\n        /**\n         * Returns the proposal queue as list of upvote records.\n         */\n        _this.getQueue = BaseWrapper_1.proxyCall(_this.contract.methods.getQueue, undefined, function (arraysObject) {\n            return collections_1.zip(function (_id, _upvotes) { return ({\n                proposalID: BaseWrapper_1.valueToBigNumber(_id),\n                upvotes: BaseWrapper_1.valueToBigNumber(_upvotes),\n            }); }, arraysObject[0], arraysObject[1]);\n        });\n        /**\n         * Dequeues any queued proposals if `dequeueFrequency` seconds have elapsed since the last dequeue\n         */\n        _this.dequeueProposalsIfReady = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.dequeueProposalsIfReady);\n        /**\n         * Returns whether a given hotfix has been whitelisted by a given address.\n         * @param hash keccak256 hash of hotfix's associated abi encoded transactions\n         * @param whitelister address of whitelister\n         */\n        _this.isHotfixWhitelistedBy = BaseWrapper_1.proxyCall(_this.contract.methods.isHotfixWhitelistedBy, BaseWrapper_1.tupleParser(address_1.bufferToHex, function (s) { return BaseWrapper_1.identity(s); }));\n        /**\n         * Returns whether a given hotfix can be passed.\n         * @param hash keccak256 hash of hotfix's associated abi encoded transactions\n         */\n        _this.isHotfixPassing = BaseWrapper_1.proxyCall(_this.contract.methods.isHotfixPassing, BaseWrapper_1.tupleParser(address_1.bufferToHex));\n        /**\n         * Returns the number of validators required to reach a Byzantine quorum\n         */\n        _this.minQuorumSize = BaseWrapper_1.proxyCall(_this.contract.methods.minQuorumSizeInCurrentSet, undefined, BaseWrapper_1.valueToBigNumber);\n        /**\n         * Returns the number of validators that whitelisted the hotfix\n         * @param hash keccak256 hash of hotfix's associated abi encoded transactions\n         */\n        _this.hotfixWhitelistValidatorTally = BaseWrapper_1.proxyCall(_this.contract.methods.hotfixWhitelistValidatorTally, BaseWrapper_1.tupleParser(address_1.bufferToHex));\n        /**\n         * Marks the given hotfix whitelisted by `sender`.\n         * @param hash keccak256 hash of hotfix's associated abi encoded transactions\n         */\n        _this.whitelistHotfix = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.whitelistHotfix, BaseWrapper_1.tupleParser(address_1.bufferToHex));\n        /**\n         * Marks the given hotfix approved by `sender`.\n         * @param hash keccak256 hash of hotfix's associated abi encoded transactions\n         * @notice Only the `approver` address will succeed in sending this transaction\n         */\n        _this.approveHotfix = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.approveHotfix, BaseWrapper_1.tupleParser(address_1.bufferToHex));\n        /**\n         * Marks the given hotfix prepared for current epoch if quorum of validators have whitelisted it.\n         * @param hash keccak256 hash of hotfix's associated abi encoded transactions\n         */\n        _this.prepareHotfix = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.prepareHotfix, BaseWrapper_1.tupleParser(address_1.bufferToHex));\n        /**\n         * Executes a given sequence of transactions if the corresponding hash is prepared and approved.\n         * @param hotfix Governance hotfix proposal\n         * @param salt Secret which guarantees uniqueness of hash\n         * @notice keccak256 hash of abi encoded transactions computed on-chain\n         */\n        _this.executeHotfix = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.executeHotfix, exports.hotfixToParams);\n        return _this;\n    }\n    /**\n     * Query durations of different stages in proposal lifecycle.\n     * @returns Durations for approval, referendum and execution stages in seconds.\n     */\n    GovernanceWrapper.prototype.stageDurations = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var res;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.contract.methods.stageDurations().call()];\n                    case 1:\n                        res = _b.sent();\n                        return [2 /*return*/, (_a = {},\n                                _a[ProposalStage.Approval] = BaseWrapper_1.valueToBigNumber(res[0]),\n                                _a[ProposalStage.Referendum] = BaseWrapper_1.valueToBigNumber(res[1]),\n                                _a[ProposalStage.Execution] = BaseWrapper_1.valueToBigNumber(res[2]),\n                                _a)];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the required ratio of yes:no votes needed to exceed in order to pass the proposal transaction.\n     * @param tx Transaction to determine the constitution for running.\n     */\n    GovernanceWrapper.prototype.getTransactionConstitution = function (tx) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var callSignature, value;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        callSignature = address_1.ensureLeading0x(address_1.trimLeading0x(tx.input).slice(0, 8));\n                        return [4 /*yield*/, this.contract.methods\n                                .getConstitution((_a = tx.to) !== null && _a !== void 0 ? _a : address_1.NULL_ADDRESS, callSignature)\n                                .call()];\n                    case 1:\n                        value = _b.sent();\n                        return [2 /*return*/, fixidity_1.fromFixed(new bignumber_js_1.default(value))];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the required ratio of yes:no votes needed to exceed in order to pass the proposal.\n     * @param proposal Proposal to determine the constitution for running.\n     */\n    GovernanceWrapper.prototype.getConstitution = function (proposal) {\n        return __awaiter(this, void 0, void 0, function () {\n            var constitution, _i, proposal_1, tx, _a, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        constitution = new bignumber_js_1.default(0);\n                        _i = 0, proposal_1 = proposal;\n                        _c.label = 1;\n                    case 1:\n                        if (!(_i < proposal_1.length)) return [3 /*break*/, 4];\n                        tx = proposal_1[_i];\n                        _b = (_a = bignumber_js_1.default).max;\n                        return [4 /*yield*/, this.getTransactionConstitution(tx)];\n                    case 2:\n                        constitution = _b.apply(_a, [_c.sent(), constitution]);\n                        _c.label = 3;\n                    case 3:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/, constitution];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the participation parameters.\n     * @returns The participation parameters.\n     */\n    GovernanceWrapper.prototype.getParticipationParameters = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.contract.methods.getParticipationParameters().call()];\n                    case 1:\n                        res = _a.sent();\n                        return [2 /*return*/, {\n                                baseline: fixidity_1.fromFixed(new bignumber_js_1.default(res[0])),\n                                baselineFloor: fixidity_1.fromFixed(new bignumber_js_1.default(res[1])),\n                                baselineUpdateFactor: fixidity_1.fromFixed(new bignumber_js_1.default(res[2])),\n                                baselineQuorumFactor: fixidity_1.fromFixed(new bignumber_js_1.default(res[3])),\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Returns current configuration parameters.\n     */\n    GovernanceWrapper.prototype.getConfig = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all([\n                            this.concurrentProposals(),\n                            this.dequeueFrequency(),\n                            this.minDeposit(),\n                            this.queueExpiry(),\n                            this.stageDurations(),\n                            this.getParticipationParameters(),\n                        ])];\n                    case 1:\n                        res = _a.sent();\n                        return [2 /*return*/, {\n                                concurrentProposals: res[0],\n                                dequeueFrequency: res[1],\n                                minDeposit: res[2],\n                                queueExpiry: res[3],\n                                stageDurations: res[4],\n                                participationParameters: res[5],\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * @dev Returns human readable configuration of the governance contract\n     * @return GovernanceConfig object\n     */\n    GovernanceWrapper.prototype.getHumanReadableConfig = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var config, stageDurations;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.getConfig()];\n                    case 1:\n                        config = _b.sent();\n                        stageDurations = (_a = {},\n                            _a[ProposalStage.Approval] = BaseWrapper_1.secondsToDurationString(config.stageDurations[ProposalStage.Approval]),\n                            _a[ProposalStage.Referendum] = BaseWrapper_1.secondsToDurationString(config.stageDurations[ProposalStage.Referendum]),\n                            _a[ProposalStage.Execution] = BaseWrapper_1.secondsToDurationString(config.stageDurations[ProposalStage.Execution]),\n                            _a);\n                        return [2 /*return*/, __assign(__assign({}, config), { dequeueFrequency: BaseWrapper_1.secondsToDurationString(config.dequeueFrequency), queueExpiry: BaseWrapper_1.secondsToDurationString(config.queueExpiry), stageDurations: stageDurations })];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the human readable metadata associated with a given proposal.\n     * @param proposalID Governance proposal UUID\n     */\n    GovernanceWrapper.prototype.getHumanReadableProposalMetadata = function (proposalID) {\n        return __awaiter(this, void 0, void 0, function () {\n            var meta;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getProposalMetadata(proposalID)];\n                    case 1:\n                        meta = _a.sent();\n                        return [2 /*return*/, __assign(__assign({}, meta), { timestamp: BaseWrapper_1.unixSecondsTimestampToDateString(meta.timestamp) })];\n                }\n            });\n        });\n    };\n    GovernanceWrapper.prototype.timeUntilStages = function (proposalID) {\n        return __awaiter(this, void 0, void 0, function () {\n            var meta, now, durations, referendum, execution, expiration;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getProposalMetadata(proposalID)];\n                    case 1:\n                        meta = _a.sent();\n                        now = Math.round(new Date().getTime() / 1000);\n                        return [4 /*yield*/, this.stageDurations()];\n                    case 2:\n                        durations = _a.sent();\n                        referendum = meta.timestamp.plus(durations.Approval).minus(now);\n                        execution = referendum.plus(durations.Referendum);\n                        expiration = execution.plus(durations.Execution);\n                        return [2 /*return*/, { referendum: referendum, execution: execution, expiration: expiration }];\n                }\n            });\n        });\n    };\n    GovernanceWrapper.prototype.humanReadableTimeUntilStages = function (propoaslID) {\n        return __awaiter(this, void 0, void 0, function () {\n            var time;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.timeUntilStages(propoaslID)];\n                    case 1:\n                        time = _a.sent();\n                        return [2 /*return*/, {\n                                referendum: BaseWrapper_1.secondsToDurationString(time.referendum),\n                                execution: BaseWrapper_1.secondsToDurationString(time.execution),\n                                expiration: BaseWrapper_1.secondsToDurationString(time.expiration),\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the proposal associated with a given id.\n     * @param proposalID Governance proposal UUID\n     */\n    GovernanceWrapper.prototype.getProposal = function (proposalID) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, txIndices;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getProposalMetadata(proposalID)];\n                    case 1:\n                        metadata = _a.sent();\n                        txIndices = collections_1.zeroRange(metadata.transactionCount);\n                        return [2 /*return*/, async_1.concurrentMap(4, txIndices, function (idx) { return _this.getProposalTransaction(proposalID, idx); })];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the stage, metadata, upvotes, votes, and transactions associated with a given proposal.\n     * @param proposalID Governance proposal UUID\n     */\n    GovernanceWrapper.prototype.getProposalRecord = function (proposalID) {\n        return __awaiter(this, void 0, void 0, function () {\n            var metadata, proposal, stage, passing, upvotes, votes;\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.getProposalMetadata(proposalID)];\n                    case 1:\n                        metadata = _b.sent();\n                        return [4 /*yield*/, this.getProposal(proposalID)];\n                    case 2:\n                        proposal = _b.sent();\n                        return [4 /*yield*/, this.getProposalStage(proposalID)];\n                    case 3:\n                        stage = _b.sent();\n                        return [4 /*yield*/, this.isProposalPassing(proposalID)];\n                    case 4:\n                        passing = _b.sent();\n                        upvotes = ZERO_BN;\n                        votes = (_a = {}, _a[VoteValue.Yes] = ZERO_BN, _a[VoteValue.No] = ZERO_BN, _a[VoteValue.Abstain] = ZERO_BN, _a);\n                        if (!(stage === ProposalStage.Queued)) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.getUpvotes(proposalID)];\n                    case 5:\n                        upvotes = _b.sent();\n                        return [3 /*break*/, 8];\n                    case 6:\n                        if (!(stage !== ProposalStage.Expiration)) return [3 /*break*/, 8];\n                        return [4 /*yield*/, this.getVotes(proposalID)];\n                    case 7:\n                        votes = _b.sent();\n                        _b.label = 8;\n                    case 8: return [2 /*return*/, {\n                            proposal: proposal,\n                            metadata: metadata,\n                            stage: stage,\n                            upvotes: upvotes,\n                            votes: votes,\n                            passing: passing,\n                        }];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the corresponding vote record\n     * @param voter Address of voter\n     * @param proposalID Governance proposal UUID\n     */\n    GovernanceWrapper.prototype.getVoteRecord = function (voter, proposalID) {\n        return __awaiter(this, void 0, void 0, function () {\n            var proposalIndex, res, _1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 3, , 4]);\n                        return [4 /*yield*/, this.getDequeueIndex(proposalID)];\n                    case 1:\n                        proposalIndex = _a.sent();\n                        return [4 /*yield*/, this.contract.methods.getVoteRecord(voter, proposalIndex).call()];\n                    case 2:\n                        res = _a.sent();\n                        return [2 /*return*/, {\n                                proposalID: BaseWrapper_1.valueToBigNumber(res[0]),\n                                value: Object.keys(VoteValue)[BaseWrapper_1.valueToInt(res[1])],\n                                votes: BaseWrapper_1.valueToBigNumber(res[2]),\n                            }];\n                    case 3:\n                        _1 = _a.sent();\n                        // The proposal ID may not be present in the dequeued list, or the voter may not have a vote\n                        // record for the proposal.\n                        return [2 /*return*/, null];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the (existing) proposal dequeue as list of proposal IDs.\n     */\n    GovernanceWrapper.prototype.getDequeue = function (filterZeroes) {\n        if (filterZeroes === void 0) { filterZeroes = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var dequeue, dequeueIds;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.contract.methods.getDequeue().call()\n                        // filter non-zero as dequeued indices are reused and `deleteDequeuedProposal` zeroes\n                    ];\n                    case 1:\n                        dequeue = _a.sent();\n                        dequeueIds = dequeue.map(BaseWrapper_1.valueToBigNumber);\n                        return [2 /*return*/, filterZeroes ? dequeueIds.filter(function (id) { return !id.isZero(); }) : dequeueIds];\n                }\n            });\n        });\n    };\n    /*\n     * Returns the vote records for a given voter.\n     */\n    GovernanceWrapper.prototype.getVoteRecords = function (voter) {\n        return __awaiter(this, void 0, void 0, function () {\n            var dequeue, voteRecords;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getDequeue()];\n                    case 1:\n                        dequeue = _a.sent();\n                        return [4 /*yield*/, Promise.all(dequeue.map(function (id) { return _this.getVoteRecord(voter, id); }))];\n                    case 2:\n                        voteRecords = _a.sent();\n                        return [2 /*return*/, voteRecords.filter(function (record) { return record != null; })];\n                }\n            });\n        });\n    };\n    /*\n     * Returns information pertaining to a voter in governance.\n     */\n    GovernanceWrapper.prototype.getVoter = function (account) {\n        return __awaiter(this, void 0, void 0, function () {\n            var res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Promise.all([\n                            this.getUpvoteRecord(account),\n                            this.getVoteRecords(account),\n                            this.getRefundedDeposits(account),\n                        ])];\n                    case 1:\n                        res = _a.sent();\n                        return [2 /*return*/, {\n                                upvote: res[0],\n                                votes: res[1],\n                                refundedDeposits: res[2],\n                            }];\n                }\n            });\n        });\n    };\n    /**\n     * Returns the number of votes that will be applied to a proposal for a given voter.\n     * @param voter Address of voter\n     */\n    GovernanceWrapper.prototype.getVoteWeight = function (voter) {\n        return __awaiter(this, void 0, void 0, function () {\n            var lockedGoldContract;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.kit.contracts.getLockedGold()];\n                    case 1:\n                        lockedGoldContract = _a.sent();\n                        return [2 /*return*/, lockedGoldContract.getAccountTotalLockedGold(voter)];\n                }\n            });\n        });\n    };\n    GovernanceWrapper.prototype.getIndex = function (id, array) {\n        var index = array.findIndex(function (bn) { return bn.isEqualTo(id); });\n        if (index === -1) {\n            throw new Error(\"ID \" + id + \" not found in array \" + array);\n        }\n        return index;\n    };\n    GovernanceWrapper.prototype.getDequeueIndex = function (proposalID, dequeue) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!dequeue) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.getDequeue()];\n                    case 1:\n                        dequeue = _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, this.getIndex(proposalID, dequeue)];\n                }\n            });\n        });\n    };\n    GovernanceWrapper.prototype.getQueueIndex = function (proposalID, queue) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!queue) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.getQueue()];\n                    case 1:\n                        queue = _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, {\n                            index: this.getIndex(proposalID, queue.map(function (record) { return record.proposalID; })),\n                            queue: queue,\n                        }];\n                }\n            });\n        });\n    };\n    GovernanceWrapper.prototype.lesserAndGreater = function (proposalID, _queue) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, index, queue;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.getQueueIndex(proposalID, _queue)];\n                    case 1:\n                        _a = _b.sent(), index = _a.index, queue = _a.queue;\n                        return [2 /*return*/, {\n                                lesserID: index === 0 ? ZERO_BN : queue[index - 1].proposalID,\n                                greaterID: index === queue.length - 1 ? ZERO_BN : queue[index + 1].proposalID,\n                            }];\n                }\n            });\n        });\n    };\n    GovernanceWrapper.prototype.sortedQueue = function (queue) {\n        return queue.sort(function (a, b) { return a.upvotes.comparedTo(b.upvotes); });\n    };\n    GovernanceWrapper.prototype.withUpvoteRevoked = function (upvoter, _queue) {\n        return __awaiter(this, void 0, void 0, function () {\n            var upvoteRecord, _a, index, queue;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.getUpvoteRecord(upvoter)];\n                    case 1:\n                        upvoteRecord = _b.sent();\n                        return [4 /*yield*/, this.getQueueIndex(upvoteRecord.proposalID, _queue)];\n                    case 2:\n                        _a = _b.sent(), index = _a.index, queue = _a.queue;\n                        queue[index].upvotes = queue[index].upvotes.minus(upvoteRecord.upvotes);\n                        return [2 /*return*/, {\n                                queue: this.sortedQueue(queue),\n                                upvoteRecord: upvoteRecord,\n                            }];\n                }\n            });\n        });\n    };\n    GovernanceWrapper.prototype.withUpvoteApplied = function (upvoter, proposalID, _queue) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, index, queue, weight;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.getQueueIndex(proposalID, _queue)];\n                    case 1:\n                        _a = _b.sent(), index = _a.index, queue = _a.queue;\n                        return [4 /*yield*/, this.getVoteWeight(upvoter)];\n                    case 2:\n                        weight = _b.sent();\n                        queue[index].upvotes = queue[index].upvotes.plus(weight);\n                        return [2 /*return*/, this.sortedQueue(queue)];\n                }\n            });\n        });\n    };\n    GovernanceWrapper.prototype.lesserAndGreaterAfterRevoke = function (upvoter) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, queue, upvoteRecord;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.withUpvoteRevoked(upvoter)];\n                    case 1:\n                        _a = _b.sent(), queue = _a.queue, upvoteRecord = _a.upvoteRecord;\n                        return [2 /*return*/, this.lesserAndGreater(upvoteRecord.proposalID, queue)];\n                }\n            });\n        });\n    };\n    GovernanceWrapper.prototype.lesserAndGreaterAfterUpvote = function (upvoter, proposalID) {\n        return __awaiter(this, void 0, void 0, function () {\n            var upvoteRecord, recordQueued, queue, _a, upvoteQueue;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.getUpvoteRecord(upvoter)];\n                    case 1:\n                        upvoteRecord = _b.sent();\n                        return [4 /*yield*/, this.isQueued(upvoteRecord.proposalID)\n                            // if existing upvote exists in queue, revoke it before applying new upvote\n                        ];\n                    case 2:\n                        recordQueued = _b.sent();\n                        if (!recordQueued) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.withUpvoteRevoked(upvoter)];\n                    case 3:\n                        _a = (_b.sent()).queue;\n                        return [3 /*break*/, 6];\n                    case 4: return [4 /*yield*/, this.getQueue()];\n                    case 5:\n                        _a = _b.sent();\n                        _b.label = 6;\n                    case 6:\n                        queue = _a;\n                        return [4 /*yield*/, this.withUpvoteApplied(upvoter, proposalID, queue)];\n                    case 7:\n                        upvoteQueue = _b.sent();\n                        return [2 /*return*/, this.lesserAndGreater(proposalID, upvoteQueue)];\n                }\n            });\n        });\n    };\n    /**\n     * Applies provided upvoter's upvote to given proposal.\n     * @param proposalID Governance proposal UUID\n     * @param upvoter Address of upvoter\n     */\n    GovernanceWrapper.prototype.upvote = function (proposalID, upvoter) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, lesserID, greaterID;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.lesserAndGreaterAfterUpvote(upvoter, proposalID)];\n                    case 1:\n                        _a = _b.sent(), lesserID = _a.lesserID, greaterID = _a.greaterID;\n                        return [2 /*return*/, connect_1.toTransactionObject(this.kit.connection, this.contract.methods.upvote(BaseWrapper_1.valueToString(proposalID), BaseWrapper_1.valueToString(lesserID), BaseWrapper_1.valueToString(greaterID)))];\n                }\n            });\n        });\n    };\n    /**\n     * Revokes provided upvoter's upvote.\n     * @param upvoter Address of upvoter\n     */\n    GovernanceWrapper.prototype.revokeUpvote = function (upvoter) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, lesserID, greaterID;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.lesserAndGreaterAfterRevoke(upvoter)];\n                    case 1:\n                        _a = _b.sent(), lesserID = _a.lesserID, greaterID = _a.greaterID;\n                        return [2 /*return*/, connect_1.toTransactionObject(this.kit.connection, this.contract.methods.revokeUpvote(BaseWrapper_1.valueToString(lesserID), BaseWrapper_1.valueToString(greaterID)))];\n                }\n            });\n        });\n    };\n    /**\n     * Approves given proposal, allowing it to later move to `referendum`.\n     * @param proposalID Governance proposal UUID\n     * @notice Only the `approver` address will succeed in sending this transaction\n     */\n    GovernanceWrapper.prototype.approve = function (proposalID) {\n        return __awaiter(this, void 0, void 0, function () {\n            var proposalIndex;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getDequeueIndex(proposalID)];\n                    case 1:\n                        proposalIndex = _a.sent();\n                        return [2 /*return*/, connect_1.toTransactionObject(this.kit.connection, this.contract.methods.approve(BaseWrapper_1.valueToString(proposalID), proposalIndex))];\n                }\n            });\n        });\n    };\n    /**\n     * Applies `sender`'s vote choice to a given proposal.\n     * @param proposalID Governance proposal UUID\n     * @param vote Choice to apply (yes, no, abstain)\n     */\n    GovernanceWrapper.prototype.vote = function (proposalID, vote) {\n        return __awaiter(this, void 0, void 0, function () {\n            var proposalIndex, voteNum;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getDequeueIndex(proposalID)];\n                    case 1:\n                        proposalIndex = _a.sent();\n                        voteNum = Object.keys(VoteValue).indexOf(vote);\n                        return [2 /*return*/, connect_1.toTransactionObject(this.kit.connection, this.contract.methods.vote(BaseWrapper_1.valueToString(proposalID), proposalIndex, voteNum))];\n                }\n            });\n        });\n    };\n    /**\n     * Returns `voter`'s vote choice on a given proposal.\n     * @param proposalID Governance proposal UUID\n     * @param voter Address of voter\n     */\n    GovernanceWrapper.prototype.getVoteValue = function (proposalID, voter) {\n        return __awaiter(this, void 0, void 0, function () {\n            var proposalIndex, res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getDequeueIndex(proposalID)];\n                    case 1:\n                        proposalIndex = _a.sent();\n                        return [4 /*yield*/, this.contract.methods.getVoteRecord(voter, proposalIndex).call()];\n                    case 2:\n                        res = _a.sent();\n                        return [2 /*return*/, Object.keys(VoteValue)[BaseWrapper_1.valueToInt(res[1])]];\n                }\n            });\n        });\n    };\n    /**\n     * Executes a given proposal's associated transactions.\n     * @param proposalID Governance proposal UUID\n     */\n    GovernanceWrapper.prototype.execute = function (proposalID) {\n        return __awaiter(this, void 0, void 0, function () {\n            var proposalIndex;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.getDequeueIndex(proposalID)];\n                    case 1:\n                        proposalIndex = _a.sent();\n                        return [2 /*return*/, connect_1.toTransactionObject(this.kit.connection, this.contract.methods.execute(BaseWrapper_1.valueToString(proposalID), proposalIndex))];\n                }\n            });\n        });\n    };\n    /**\n     * Returns approved, executed, and prepared status associated with a given hotfix.\n     * @param hash keccak256 hash of hotfix's associated abi encoded transactions\n     */\n    GovernanceWrapper.prototype.getHotfixRecord = function (hash) {\n        return __awaiter(this, void 0, void 0, function () {\n            var res;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.contract.methods.getHotfixRecord(address_1.bufferToHex(hash)).call()];\n                    case 1:\n                        res = _a.sent();\n                        return [2 /*return*/, {\n                                approved: res[0],\n                                executed: res[1],\n                                preparedEpoch: BaseWrapper_1.valueToBigNumber(res[2]),\n                            }];\n                }\n            });\n        });\n    };\n    return GovernanceWrapper;\n}(BaseWrapper_1.BaseWrapper));\nexports.GovernanceWrapper = GovernanceWrapper;\n//# sourceMappingURL=Governance.js.map"]},"metadata":{},"sourceType":"script"}