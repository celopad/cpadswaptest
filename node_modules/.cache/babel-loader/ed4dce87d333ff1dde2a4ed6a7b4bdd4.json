{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar t = __importStar(require(\"io-ts\"));\n\nexports.SignatureType = t.string;\nexports.TimestampType = t.number;\n\nexports.now = function () {\n  return Math.round(new Date().getTime() / 1000);\n};\n\nvar ClaimTypes;\n\n(function (ClaimTypes) {\n  ClaimTypes[\"ATTESTATION_SERVICE_URL\"] = \"ATTESTATION_SERVICE_URL\";\n  ClaimTypes[\"ACCOUNT\"] = \"ACCOUNT\";\n  ClaimTypes[\"DOMAIN\"] = \"DOMAIN\";\n  ClaimTypes[\"KEYBASE\"] = \"KEYBASE\";\n  ClaimTypes[\"NAME\"] = \"NAME\";\n  ClaimTypes[\"PROFILE_PICTURE\"] = \"PROFILE_PICTURE\";\n  ClaimTypes[\"STORAGE\"] = \"STORAGE\";\n  ClaimTypes[\"TWITTER\"] = \"TWITTER\";\n})(ClaimTypes = exports.ClaimTypes || (exports.ClaimTypes = {}));\n\nexports.VERIFIABLE_CLAIM_TYPES = [ClaimTypes.KEYBASE, ClaimTypes.ACCOUNT, ClaimTypes.DOMAIN]; // Claims whose status can be validated\n\nexports.VALIDATABLE_CLAIM_TYPES = [ClaimTypes.ATTESTATION_SERVICE_URL];\nexports.SINGULAR_CLAIM_TYPES = [ClaimTypes.NAME, ClaimTypes.ATTESTATION_SERVICE_URL];","map":{"version":3,"sources":["../../../src/identity/claims/types.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,IAAA,CAAA,GAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEa,OAAA,CAAA,aAAA,GAAgB,CAAC,CAAC,MAAlB;AACA,OAAA,CAAA,aAAA,GAAgB,CAAC,CAAC,MAAlB;;AAEA,OAAA,CAAA,GAAA,GAAM,YAAA;AAAM,SAAA,IAAI,CAAC,KAAL,CAAW,IAAI,IAAJ,GAAW,OAAX,KAAX,IAAA,CAAA;AAAuC,CAAnD;;AAEb,IAAY,UAAZ;;AAAA,CAAA,UAAY,UAAZ,EAAsB;AACpB,EAAA,UAAA,CAAA,yBAAA,CAAA,GAAA,yBAAA;AACA,EAAA,UAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,UAAA,CAAA,QAAA,CAAA,GAAA,QAAA;AACA,EAAA,UAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,UAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,UAAA,CAAA,iBAAA,CAAA,GAAA,iBAAA;AACA,EAAA,UAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACA,EAAA,UAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AACD,CATD,EAAY,UAAU,GAAV,OAAA,CAAA,UAAA,KAAA,OAAA,CAAA,UAAA,GAAU,EAAV,CAAZ;;AAWa,OAAA,CAAA,sBAAA,GAAyB,CAAC,UAAU,CAAC,OAAZ,EAAqB,UAAU,CAAC,OAAhC,EAAyC,UAAU,CAAC,MAApD,CAAzB,C,CAEb;;AACa,OAAA,CAAA,uBAAA,GAA0B,CAAC,UAAU,CAAC,uBAAZ,CAA1B;AAEA,OAAA,CAAA,oBAAA,GAAuB,CAAC,UAAU,CAAC,IAAZ,EAAkB,UAAU,CAAC,uBAA7B,CAAvB","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar t = __importStar(require(\"io-ts\"));\nexports.SignatureType = t.string;\nexports.TimestampType = t.number;\nexports.now = function () { return Math.round(new Date().getTime() / 1000); };\nvar ClaimTypes;\n(function (ClaimTypes) {\n    ClaimTypes[\"ATTESTATION_SERVICE_URL\"] = \"ATTESTATION_SERVICE_URL\";\n    ClaimTypes[\"ACCOUNT\"] = \"ACCOUNT\";\n    ClaimTypes[\"DOMAIN\"] = \"DOMAIN\";\n    ClaimTypes[\"KEYBASE\"] = \"KEYBASE\";\n    ClaimTypes[\"NAME\"] = \"NAME\";\n    ClaimTypes[\"PROFILE_PICTURE\"] = \"PROFILE_PICTURE\";\n    ClaimTypes[\"STORAGE\"] = \"STORAGE\";\n    ClaimTypes[\"TWITTER\"] = \"TWITTER\";\n})(ClaimTypes = exports.ClaimTypes || (exports.ClaimTypes = {}));\nexports.VERIFIABLE_CLAIM_TYPES = [ClaimTypes.KEYBASE, ClaimTypes.ACCOUNT, ClaimTypes.DOMAIN];\n// Claims whose status can be validated\nexports.VALIDATABLE_CLAIM_TYPES = [ClaimTypes.ATTESTATION_SERVICE_URL];\nexports.SINGULAR_CLAIM_TYPES = [ClaimTypes.NAME, ClaimTypes.ATTESTATION_SERVICE_URL];\n//# sourceMappingURL=types.js.map"]},"metadata":{},"sourceType":"script"}