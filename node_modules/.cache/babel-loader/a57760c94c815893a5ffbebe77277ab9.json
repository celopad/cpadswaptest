{"ast":null,"code":"var _jsxFileName = \"/Users/khoiplus/Desktop/celopad/cpadswaptest/src/components/WalletModal/LedgerWalletSelector/LedgerAddress.tsx\";\nimport { cUSD } from '@ubeswap/sdk';\nimport { NETWORK_CHAIN_ID } from 'connectors';\nimport { LedgerConnector } from 'connectors/ledger/LedgerConnector';\nimport React from 'react';\nimport { useTokenBalance } from 'state/wallet/hooks';\nimport { shortenAddress } from 'utils';\nimport { InfoCard } from '.';\nexport const LedgerAddress = ({\n  address,\n  kit,\n  tryActivation,\n  index\n}) => {\n  var _cusdBalance$toFixed;\n\n  const cusdBalance = useTokenBalance(address, cUSD[NETWORK_CHAIN_ID]);\n  return /*#__PURE__*/React.createElement(InfoCard, {\n    onClick: () => {\n      const connector = new LedgerConnector({\n        kit,\n        index\n      });\n      tryActivation(connector);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, shortenAddress(address)), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, (_cusdBalance$toFixed = cusdBalance === null || cusdBalance === void 0 ? void 0 : cusdBalance.toFixed(2)) !== null && _cusdBalance$toFixed !== void 0 ? _cusdBalance$toFixed : '0.00', \" cUSD\"));\n};","map":{"version":3,"sources":["/Users/khoiplus/Desktop/celopad/cpadswaptest/src/components/WalletModal/LedgerWalletSelector/LedgerAddress.tsx"],"names":["cUSD","NETWORK_CHAIN_ID","LedgerConnector","React","useTokenBalance","shortenAddress","InfoCard","LedgerAddress","address","kit","tryActivation","index","cusdBalance","connector","toFixed"],"mappings":";AAAA,SAASA,IAAT,QAAqB,cAArB;AAEA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,eAAT,QAA2C,mCAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,GAAzB;AASA,OAAO,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,GAAX;AAAgBC,EAAAA,aAAhB;AAA+BC,EAAAA;AAA/B,CAAD,KAAmD;AAAA;;AAC9E,QAAMC,WAAW,GAAGR,eAAe,CAACI,OAAD,EAAUR,IAAI,CAACC,gBAAD,CAAd,CAAnC;AACA,sBACE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACb,YAAMY,SAAS,GAAG,IAAIX,eAAJ,CAAoB;AAAEO,QAAAA,GAAF;AAAOE,QAAAA;AAAP,OAApB,CAAlB;AACAD,MAAAA,aAAa,CAACG,SAAD,CAAb;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOR,cAAc,CAACG,OAAD,CAArB,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAOI,WAAP,aAAOA,WAAP,uBAAOA,WAAW,CAAEE,OAAb,CAAqB,CAArB,CAAP,uEAAkC,MAAlC,UAPF,CADF;AAWD,CAbM","sourcesContent":["import { cUSD } from '@ubeswap/sdk'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { NETWORK_CHAIN_ID } from 'connectors'\nimport { LedgerConnector, LedgerKit } from 'connectors/ledger/LedgerConnector'\nimport React from 'react'\nimport { useTokenBalance } from 'state/wallet/hooks'\nimport { shortenAddress } from 'utils'\nimport { InfoCard } from '.'\n\ninterface Props {\n  index: number\n  address: string\n  kit: LedgerKit\n  tryActivation: (connector: AbstractConnector | undefined) => Promise<void>\n}\n\nexport const LedgerAddress = ({ address, kit, tryActivation, index }: Props) => {\n  const cusdBalance = useTokenBalance(address, cUSD[NETWORK_CHAIN_ID])\n  return (\n    <InfoCard\n      onClick={() => {\n        const connector = new LedgerConnector({ kit, index })\n        tryActivation(connector)\n      }}\n    >\n      <span>{shortenAddress(address)}</span>\n      <span>{cusdBalance?.toFixed(2) ?? '0.00'} cUSD</span>\n    </InfoCard>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}