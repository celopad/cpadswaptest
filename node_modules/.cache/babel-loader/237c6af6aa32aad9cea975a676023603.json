{"ast":null,"code":"var _jsxFileName = \"/Users/khoiplus/Desktop/celopad/cpadswaptest/src/components/WalletModal/LedgerWalletSelector/index.tsx\";\nimport Loader from 'components/Loader';\nimport { NETWORK_CHAIN_ID } from 'connectors';\nimport { LedgerKit } from 'connectors/ledger/LedgerConnector';\nimport { darken } from 'polished';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { LedgerAddress } from './LedgerAddress';\nconst ADDRESSES_PER_PAGE = 5;\nexport const LedgerWalletSelector = ({\n  tryActivation\n}) => {\n  const [addresses, setAddresses] = useState(null);\n  const [kit, setKit] = useState(null);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const connectToLedger = useCallback(async () => {\n    setError(null);\n    const idxs = Array(ADDRESSES_PER_PAGE).fill(null).map((_, i) => page * ADDRESSES_PER_PAGE + i);\n\n    try {\n      const ledgerKit = await LedgerKit.init(NETWORK_CHAIN_ID, idxs);\n      setAddresses(ledgerKit.wallet.getAccounts());\n      setKit(ledgerKit);\n    } catch (e) {\n      setError(e.message);\n    }\n  }, [page]);\n  useEffect(() => {\n    ;\n\n    (async () => {\n      await connectToLedger();\n    })();\n  }, [connectToLedger]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Connect to Ledger\"), error ? /*#__PURE__*/React.createElement(ErrorGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, error), /*#__PURE__*/React.createElement(ErrorButton, {\n    onClick: () => {\n      void connectToLedger();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Try Again\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Please select a wallet below.\"), addresses === null || kit === null ? /*#__PURE__*/React.createElement(InfoCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"Loading wallets... \", /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 36\n    }\n  }))) : /*#__PURE__*/React.createElement(OptionsGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, addresses.map((address, i) => /*#__PURE__*/React.createElement(LedgerAddress, {\n    key: address,\n    address: address,\n    kit: kit,\n    tryActivation: tryActivation,\n    index: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(InfoCard, {\n    onClick: () => {\n      setAddresses(null);\n      setKit(null);\n      setPage(page + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Load more\"))));\n};\nconst OptionsGrid = styled.div`\n  display: grid;\n  grid-row-gap: 10px;\n`;\nconst Heading = styled.h3`\n  margin-top: 0;\n`;\nexport const InfoCard = styled.button`\n  background-color: ${({\n  theme\n}) => theme.bg2};\n  padding: 1rem;\n  outline: none;\n  border: 1px solid;\n  border-radius: 12px;\n  width: 100% !important;\n  color: #fff;\n  &:focus {\n    box-shadow: 0 0 0 1px ${({\n  theme\n}) => theme.primary1};\n  }\n  border-color: ${({\n  theme\n}) => theme.bg3};\n\n  margin-top: 0;\n  &:hover {\n    cursor: pointer;\n    border: ${({\n  theme\n}) => `1px solid ${theme.primary1}`};\n  }\n  opacity: ${({\n  disabled\n}) => disabled ? '0.5' : '1'};\n\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nconst ErrorGroup = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: flex-start;\n`;\nconst ErrorButton = styled.div`\n  border-radius: 8px;\n  font-size: 12px;\n  color: ${({\n  theme\n}) => theme.text1};\n  background-color: ${({\n  theme\n}) => theme.bg4};\n  margin-left: 1rem;\n  padding: 0.5rem;\n  font-weight: 600;\n  user-select: none;\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${({\n  theme\n}) => darken(0.1, theme.text4)};\n  }\n`;","map":{"version":3,"sources":["/Users/khoiplus/Desktop/celopad/cpadswaptest/src/components/WalletModal/LedgerWalletSelector/index.tsx"],"names":["Loader","NETWORK_CHAIN_ID","LedgerKit","darken","React","useCallback","useEffect","useState","styled","LedgerAddress","ADDRESSES_PER_PAGE","LedgerWalletSelector","tryActivation","addresses","setAddresses","kit","setKit","error","setError","page","setPage","connectToLedger","idxs","Array","fill","map","_","i","ledgerKit","init","wallet","getAccounts","e","message","address","OptionsGrid","div","Heading","h3","InfoCard","button","theme","bg2","primary1","bg3","disabled","ErrorGroup","flexRowNoWrap","ErrorButton","text1","bg4","text4"],"mappings":"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","sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector'\nimport Loader from 'components/Loader'\nimport { NETWORK_CHAIN_ID } from 'connectors'\nimport { LedgerKit } from 'connectors/ledger/LedgerConnector'\nimport { darken } from 'polished'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { LedgerAddress } from './LedgerAddress'\n\ninterface Props {\n  tryActivation: (connector: AbstractConnector | undefined) => Promise<void>\n}\n\nconst ADDRESSES_PER_PAGE = 5\n\nexport const LedgerWalletSelector: React.FC<Props> = ({ tryActivation }: Props) => {\n  const [addresses, setAddresses] = useState<readonly string[] | null>(null)\n  const [kit, setKit] = useState<LedgerKit | null>(null)\n  const [error, setError] = useState<string | null>(null)\n  const [page, setPage] = useState<number>(0)\n\n  const connectToLedger = useCallback(async () => {\n    setError(null)\n    const idxs = Array(ADDRESSES_PER_PAGE)\n      .fill(null)\n      .map((_, i) => page * ADDRESSES_PER_PAGE + i)\n    try {\n      const ledgerKit = await LedgerKit.init(NETWORK_CHAIN_ID, idxs)\n      setAddresses(ledgerKit.wallet.getAccounts())\n      setKit(ledgerKit)\n    } catch (e) {\n      setError(e.message)\n    }\n  }, [page])\n\n  useEffect(() => {\n    ;(async () => {\n      await connectToLedger()\n    })()\n  }, [connectToLedger])\n\n  return (\n    <>\n      <Heading>Connect to Ledger</Heading>\n      {error ? (\n        <ErrorGroup>\n          <div>{error}</div>\n          <ErrorButton\n            onClick={() => {\n              void connectToLedger()\n            }}\n          >\n            Try Again\n          </ErrorButton>\n        </ErrorGroup>\n      ) : (\n        <>\n          <p>Please select a wallet below.</p>\n          {addresses === null || kit === null ? (\n            <InfoCard>\n              <span>\n                Loading wallets... <Loader />\n              </span>\n            </InfoCard>\n          ) : (\n            <OptionsGrid>\n              {addresses.map((address, i) => (\n                <LedgerAddress key={address} address={address} kit={kit} tryActivation={tryActivation} index={i} />\n              ))}\n              <InfoCard\n                onClick={() => {\n                  setAddresses(null)\n                  setKit(null)\n                  setPage(page + 1)\n                }}\n              >\n                Load more\n              </InfoCard>\n            </OptionsGrid>\n          )}\n        </>\n      )}\n    </>\n  )\n}\n\nconst OptionsGrid = styled.div`\n  display: grid;\n  grid-row-gap: 10px;\n`\n\nconst Heading = styled.h3`\n  margin-top: 0;\n`\n\nexport const InfoCard = styled.button`\n  background-color: ${({ theme }) => theme.bg2};\n  padding: 1rem;\n  outline: none;\n  border: 1px solid;\n  border-radius: 12px;\n  width: 100% !important;\n  color: #fff;\n  &:focus {\n    box-shadow: 0 0 0 1px ${({ theme }) => theme.primary1};\n  }\n  border-color: ${({ theme }) => theme.bg3};\n\n  margin-top: 0;\n  &:hover {\n    cursor: pointer;\n    border: ${({ theme }) => `1px solid ${theme.primary1}`};\n  }\n  opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\n\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`\n\nconst ErrorGroup = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  justify-content: flex-start;\n`\n\nconst ErrorButton = styled.div`\n  border-radius: 8px;\n  font-size: 12px;\n  color: ${({ theme }) => theme.text1};\n  background-color: ${({ theme }) => theme.bg4};\n  margin-left: 1rem;\n  padding: 0.5rem;\n  font-weight: 600;\n  user-select: none;\n\n  &:hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => darken(0.1, theme.text4)};\n  }\n`\n"]},"metadata":{},"sourceType":"module"}