{"ast":null,"code":"import { useWeb3React } from '@web3-react/core';\nimport { valora } from 'connectors';\nimport { useEffect } from 'react';\nimport { useValoraAccount } from 'state/user/hooks';\nimport { ValoraConnector } from './ValoraConnector';\n/**\n * useValora handles incoming valora requests\n */\n\nexport const useValora = () => {\n  const {\n    activate,\n    account: injectedAccount,\n    connector\n  } = useWeb3React();\n  const {\n    account: savedValoraAccount\n  } = useValoraAccount();\n  useEffect(() => {\n    if (!(connector instanceof ValoraConnector)) {\n      return;\n    }\n\n    if (!injectedAccount && savedValoraAccount) {\n      valora.setSavedValoraAccount(savedValoraAccount);\n      activate(valora, undefined, true);\n    }\n  }, [connector, injectedAccount, savedValoraAccount, activate]);\n};","map":{"version":3,"sources":["/Users/khoiplus/Desktop/celopad/cpadswaptest/src/connectors/valora/useValora.ts"],"names":["useWeb3React","valora","useEffect","useValoraAccount","ValoraConnector","useValora","activate","account","injectedAccount","connector","savedValoraAccount","setSavedValoraAccount","undefined"],"mappings":"AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA;;;;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAO,EAAEC,eAArB;AAAsCC,IAAAA;AAAtC,MAAoDT,YAAY,EAAtE;AACA,QAAM;AAAEO,IAAAA,OAAO,EAAEG;AAAX,MAAkCP,gBAAgB,EAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,EAAEO,SAAS,YAAYL,eAAvB,CAAJ,EAA6C;AAC3C;AACD;;AACD,QAAI,CAACI,eAAD,IAAoBE,kBAAxB,EAA4C;AAC1CT,MAAAA,MAAM,CAACU,qBAAP,CAA6BD,kBAA7B;AACAJ,MAAAA,QAAQ,CAACL,MAAD,EAASW,SAAT,EAAoB,IAApB,CAAR;AACD;AACF,GARQ,EAQN,CAACH,SAAD,EAAYD,eAAZ,EAA6BE,kBAA7B,EAAiDJ,QAAjD,CARM,CAAT;AASD,CAbM","sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport { valora } from 'connectors'\nimport { useEffect } from 'react'\nimport { useValoraAccount } from 'state/user/hooks'\nimport { ValoraConnector } from './ValoraConnector'\n\n/**\n * useValora handles incoming valora requests\n */\nexport const useValora = () => {\n  const { activate, account: injectedAccount, connector } = useWeb3React()\n  const { account: savedValoraAccount } = useValoraAccount()\n\n  useEffect(() => {\n    if (!(connector instanceof ValoraConnector)) {\n      return\n    }\n    if (!injectedAccount && savedValoraAccount) {\n      valora.setSavedValoraAccount(savedValoraAccount)\n      activate(valora, undefined, true)\n    }\n  }, [connector, injectedAccount, savedValoraAccount, activate])\n}\n"]},"metadata":{},"sourceType":"module"}