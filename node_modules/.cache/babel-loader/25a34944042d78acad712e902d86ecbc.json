{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar address_1 = require(\"@celo/base/lib/address\");\n\nvar collections_1 = require(\"@celo/base/lib/collections\");\n\nvar connect_1 = require(\"@celo/connect\");\n\nvar fixidity_1 = require(\"@celo/utils/lib/fixidity\");\n\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\n\nvar moment_1 = __importDefault(require(\"moment\"));\n/** Base ContractWrapper */\n\n\nvar BaseWrapper =\n/** @class */\nfunction () {\n  function BaseWrapper(kit, contract) {\n    var _this = this;\n\n    this.kit = kit;\n    this.contract = contract;\n    this.events = this.contract.events;\n    this.eventTypes = Object.keys(this.events).reduce(function (acc, key) {\n      var _a;\n\n      return __assign(__assign({}, acc), (_a = {}, _a[key] = key, _a));\n    }, {});\n    this.methodIds = Object.keys(this.contract.methods).reduce(function (acc, method) {\n      var methodABI = _this.contract.options.jsonInterface.find(function (item) {\n        return item.name === method;\n      });\n\n      acc[method] = methodABI === undefined ? '0x' : _this.kit.connection.getAbiCoder().encodeFunctionSignature(methodABI);\n      return acc;\n    }, {});\n  }\n\n  Object.defineProperty(BaseWrapper.prototype, \"address\", {\n    /** Contract address */\n    get: function () {\n      return this.contract.options.address;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /** Contract getPastEvents */\n\n  BaseWrapper.prototype.getPastEvents = function (event, options) {\n    return this.contract.getPastEvents(event, options);\n  };\n\n  return BaseWrapper;\n}();\n\nexports.BaseWrapper = BaseWrapper;\n\nexports.valueToBigNumber = function (input) {\n  return new bignumber_js_1.default(input);\n};\n\nexports.fixidityValueToBigNumber = function (input) {\n  return fixidity_1.fromFixed(new bignumber_js_1.default(input));\n};\n\nexports.valueToString = function (input) {\n  return exports.valueToBigNumber(input).toFixed();\n};\n\nexports.valueToFixidityString = function (input) {\n  return fixidity_1.toFixed(exports.valueToBigNumber(input)).toFixed();\n};\n\nexports.valueToInt = function (input) {\n  return exports.valueToBigNumber(input).integerValue().toNumber();\n};\n\nexports.valueToFrac = function (numerator, denominator) {\n  return exports.valueToBigNumber(numerator).div(exports.valueToBigNumber(denominator));\n};\n\nvar TimeDurations;\n\n(function (TimeDurations) {\n  TimeDurations[TimeDurations[\"millennium\"] = 31536000000000] = \"millennium\";\n  TimeDurations[TimeDurations[\"century\"] = 3153600000000] = \"century\";\n  TimeDurations[TimeDurations[\"decade\"] = 315360000000] = \"decade\";\n  TimeDurations[TimeDurations[\"year\"] = 31536000000] = \"year\";\n  TimeDurations[TimeDurations[\"quarter\"] = 7776000000] = \"quarter\";\n  TimeDurations[TimeDurations[\"month\"] = 2592000000] = \"month\";\n  TimeDurations[TimeDurations[\"week\"] = 604800000] = \"week\";\n  TimeDurations[TimeDurations[\"day\"] = 86400000] = \"day\";\n  TimeDurations[TimeDurations[\"hour\"] = 3600000] = \"hour\";\n  TimeDurations[TimeDurations[\"minute\"] = 60000] = \"minute\";\n  TimeDurations[TimeDurations[\"second\"] = 1000] = \"second\";\n  TimeDurations[TimeDurations[\"millisecond\"] = 1] = \"millisecond\";\n})(TimeDurations || (TimeDurations = {})); // taken mostly from https://gist.github.com/RienNeVaPlus/024de3431ae95546d60f2acce128a7e2\n\n\nfunction secondsToDurationString(durationSeconds, outputUnits) {\n  if (outputUnits === void 0) {\n    outputUnits = ['year', 'month', 'week', 'day', 'hour', 'minute', 'second'];\n  }\n\n  var durationMilliseconds = exports.valueToBigNumber(durationSeconds).times(TimeDurations.second).toNumber();\n\n  if (durationMilliseconds <= 0) {\n    return 'past';\n  }\n\n  var durations = outputUnits.reduce(function (res, key) {\n    var unitDuration = TimeDurations[key];\n    var value = Math.floor(durationMilliseconds / unitDuration);\n    durationMilliseconds -= value * unitDuration;\n    return res.set(key, value);\n  }, new Map());\n  var s = '';\n  durations.forEach(function (value, unit) {\n    if (value > 0) {\n      s += s !== '' ? ', ' : '';\n      s += value + \" \" + unit + (value > 1 ? 's' : '');\n    }\n  });\n  return s;\n}\n\nexports.secondsToDurationString = secondsToDurationString;\n\nexports.blocksToDurationString = function (input) {\n  return secondsToDurationString(exports.valueToBigNumber(input).times(5));\n}; // TODO: fetch blocktime\n\n\nexports.unixSecondsTimestampToDateString = function (input) {\n  return moment_1.default.unix(exports.valueToInt(input)).toString();\n};\n\nexports.stringToSolidityBytes = function (input) {\n  return address_1.ensureLeading0x(input);\n};\n\nexports.bufferToSolidityBytes = function (input) {\n  return exports.stringToSolidityBytes(address_1.bufferToHex(input));\n};\n\nexports.solidityBytesToString = function (input) {\n  if (input === null || input === undefined || typeof input === 'string') {\n    return input;\n  } else if (Array.isArray(input)) {\n    var hexString = input.reduce(function (acc, num) {\n      return acc + num.toString(16).padStart(2, '0');\n    }, '');\n    return address_1.ensureLeading0x(hexString);\n  } else {\n    throw new Error('Unexpected input type for solidity bytes');\n  }\n};\n/** Identity Parser */\n\n\nexports.identity = function (a) {\n  return a;\n};\n\nexports.stringIdentity = function (x) {\n  return x;\n};\n\nfunction tupleParser() {\n  var parsers = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    parsers[_i] = arguments[_i];\n  }\n\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    return collections_1.zip(function (parser, input) {\n      return parser(input);\n    }, parsers, args);\n  };\n}\n\nexports.tupleParser = tupleParser;\n\nfunction proxyCall() {\n  var callArgs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    callArgs[_i] = arguments[_i];\n  }\n\n  if (callArgs.length === 3 && callArgs[1] != null) {\n    var methodFn_1 = callArgs[0];\n    var parseInputArgs_1 = callArgs[1];\n    var parseOutput_1 = callArgs[2];\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return methodFn_1.apply(void 0, parseInputArgs_1.apply(void 0, args)).call().then(parseOutput_1);\n    };\n  } else if (callArgs.length === 3) {\n    var methodFn_2 = callArgs[0];\n    var parseOutput_2 = callArgs[2];\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return methodFn_2.apply(void 0, args).call().then(parseOutput_2);\n    };\n  } else if (callArgs.length === 2) {\n    var methodFn_3 = callArgs[0];\n    var parseInputArgs_2 = callArgs[1];\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return methodFn_3.apply(void 0, parseInputArgs_2.apply(void 0, args)).call();\n    };\n  } else {\n    var methodFn_4 = callArgs[0];\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return methodFn_4.apply(void 0, args).call();\n    };\n  }\n}\n\nexports.proxyCall = proxyCall;\n/**\n * Creates a proxy to send a tx on a web3 native contract method.\n *\n * There are 2 cases:\n *  - call methodFn (no pre or post parsing)\n *  - preParse arguments & call methodFn\n *\n * @param methodFn Web3 methods function\n * @param preParse [optional] preParse function, tranforms arguments into `methodFn` expected inputs\n */\n\nfunction proxySend(kit) {\n  var sendArgs = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    sendArgs[_i - 1] = arguments[_i];\n  }\n\n  if (sendArgs.length === 2) {\n    var methodFn_5 = sendArgs[0];\n    var preParse_1 = sendArgs[1];\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return connect_1.toTransactionObject(kit.connection, methodFn_5.apply(void 0, preParse_1.apply(void 0, args)));\n    };\n  } else {\n    var methodFn_6 = sendArgs[0];\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      return connect_1.toTransactionObject(kit.connection, methodFn_6.apply(void 0, args));\n    };\n  }\n}\n\nexports.proxySend = proxySend;","map":{"version":3,"sources":["../../src/wrappers/BaseWrapper.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar address_1 = require(\"@celo/base/lib/address\");\nvar collections_1 = require(\"@celo/base/lib/collections\");\nvar connect_1 = require(\"@celo/connect\");\nvar fixidity_1 = require(\"@celo/utils/lib/fixidity\");\nvar bignumber_js_1 = __importDefault(require(\"bignumber.js\"));\nvar moment_1 = __importDefault(require(\"moment\"));\n/** Base ContractWrapper */\nvar BaseWrapper = /** @class */ (function () {\n    function BaseWrapper(kit, contract) {\n        var _this = this;\n        this.kit = kit;\n        this.contract = contract;\n        this.events = this.contract.events;\n        this.eventTypes = Object.keys(this.events).reduce(function (acc, key) {\n            var _a;\n            return (__assign(__assign({}, acc), (_a = {}, _a[key] = key, _a)));\n        }, {});\n        this.methodIds = Object.keys(this.contract.methods).reduce(function (acc, method) {\n            var methodABI = _this.contract.options.jsonInterface.find(function (item) { return item.name === method; });\n            acc[method] =\n                methodABI === undefined\n                    ? '0x'\n                    : _this.kit.connection.getAbiCoder().encodeFunctionSignature(methodABI);\n            return acc;\n        }, {});\n    }\n    Object.defineProperty(BaseWrapper.prototype, \"address\", {\n        /** Contract address */\n        get: function () {\n            return this.contract.options.address;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** Contract getPastEvents */\n    BaseWrapper.prototype.getPastEvents = function (event, options) {\n        return this.contract.getPastEvents(event, options);\n    };\n    return BaseWrapper;\n}());\nexports.BaseWrapper = BaseWrapper;\nexports.valueToBigNumber = function (input) { return new bignumber_js_1.default(input); };\nexports.fixidityValueToBigNumber = function (input) { return fixidity_1.fromFixed(new bignumber_js_1.default(input)); };\nexports.valueToString = function (input) { return exports.valueToBigNumber(input).toFixed(); };\nexports.valueToFixidityString = function (input) {\n    return fixidity_1.toFixed(exports.valueToBigNumber(input)).toFixed();\n};\nexports.valueToInt = function (input) {\n    return exports.valueToBigNumber(input)\n        .integerValue()\n        .toNumber();\n};\nexports.valueToFrac = function (numerator, denominator) {\n    return exports.valueToBigNumber(numerator).div(exports.valueToBigNumber(denominator));\n};\nvar TimeDurations;\n(function (TimeDurations) {\n    TimeDurations[TimeDurations[\"millennium\"] = 31536000000000] = \"millennium\";\n    TimeDurations[TimeDurations[\"century\"] = 3153600000000] = \"century\";\n    TimeDurations[TimeDurations[\"decade\"] = 315360000000] = \"decade\";\n    TimeDurations[TimeDurations[\"year\"] = 31536000000] = \"year\";\n    TimeDurations[TimeDurations[\"quarter\"] = 7776000000] = \"quarter\";\n    TimeDurations[TimeDurations[\"month\"] = 2592000000] = \"month\";\n    TimeDurations[TimeDurations[\"week\"] = 604800000] = \"week\";\n    TimeDurations[TimeDurations[\"day\"] = 86400000] = \"day\";\n    TimeDurations[TimeDurations[\"hour\"] = 3600000] = \"hour\";\n    TimeDurations[TimeDurations[\"minute\"] = 60000] = \"minute\";\n    TimeDurations[TimeDurations[\"second\"] = 1000] = \"second\";\n    TimeDurations[TimeDurations[\"millisecond\"] = 1] = \"millisecond\";\n})(TimeDurations || (TimeDurations = {}));\n// taken mostly from https://gist.github.com/RienNeVaPlus/024de3431ae95546d60f2acce128a7e2\nfunction secondsToDurationString(durationSeconds, outputUnits) {\n    if (outputUnits === void 0) { outputUnits = ['year', 'month', 'week', 'day', 'hour', 'minute', 'second']; }\n    var durationMilliseconds = exports.valueToBigNumber(durationSeconds)\n        .times(TimeDurations.second)\n        .toNumber();\n    if (durationMilliseconds <= 0) {\n        return 'past';\n    }\n    var durations = outputUnits.reduce(function (res, key) {\n        var unitDuration = TimeDurations[key];\n        var value = Math.floor(durationMilliseconds / unitDuration);\n        durationMilliseconds -= value * unitDuration;\n        return res.set(key, value);\n    }, new Map());\n    var s = '';\n    durations.forEach(function (value, unit) {\n        if (value > 0) {\n            s += s !== '' ? ', ' : '';\n            s += value + \" \" + unit + (value > 1 ? 's' : '');\n        }\n    });\n    return s;\n}\nexports.secondsToDurationString = secondsToDurationString;\nexports.blocksToDurationString = function (input) {\n    return secondsToDurationString(exports.valueToBigNumber(input).times(5));\n}; // TODO: fetch blocktime\nexports.unixSecondsTimestampToDateString = function (input) {\n    return moment_1.default.unix(exports.valueToInt(input)).toString();\n};\nexports.stringToSolidityBytes = function (input) { return address_1.ensureLeading0x(input); };\nexports.bufferToSolidityBytes = function (input) { return exports.stringToSolidityBytes(address_1.bufferToHex(input)); };\nexports.solidityBytesToString = function (input) {\n    if (input === null || input === undefined || typeof input === 'string') {\n        return input;\n    }\n    else if (Array.isArray(input)) {\n        var hexString = input.reduce(function (acc, num) { return acc + num.toString(16).padStart(2, '0'); }, '');\n        return address_1.ensureLeading0x(hexString);\n    }\n    else {\n        throw new Error('Unexpected input type for solidity bytes');\n    }\n};\n/** Identity Parser */\nexports.identity = function (a) { return a; };\nexports.stringIdentity = function (x) { return x; };\nfunction tupleParser() {\n    var parsers = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        parsers[_i] = arguments[_i];\n    }\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return collections_1.zip(function (parser, input) { return parser(input); }, parsers, args);\n    };\n}\nexports.tupleParser = tupleParser;\nfunction proxyCall() {\n    var callArgs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        callArgs[_i] = arguments[_i];\n    }\n    if (callArgs.length === 3 && callArgs[1] != null) {\n        var methodFn_1 = callArgs[0];\n        var parseInputArgs_1 = callArgs[1];\n        var parseOutput_1 = callArgs[2];\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return methodFn_1.apply(void 0, parseInputArgs_1.apply(void 0, args)).call()\n                .then(parseOutput_1);\n        };\n    }\n    else if (callArgs.length === 3) {\n        var methodFn_2 = callArgs[0];\n        var parseOutput_2 = callArgs[2];\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return methodFn_2.apply(void 0, args).call()\n                .then(parseOutput_2);\n        };\n    }\n    else if (callArgs.length === 2) {\n        var methodFn_3 = callArgs[0];\n        var parseInputArgs_2 = callArgs[1];\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return methodFn_3.apply(void 0, parseInputArgs_2.apply(void 0, args)).call();\n        };\n    }\n    else {\n        var methodFn_4 = callArgs[0];\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return methodFn_4.apply(void 0, args).call();\n        };\n    }\n}\nexports.proxyCall = proxyCall;\n/**\n * Creates a proxy to send a tx on a web3 native contract method.\n *\n * There are 2 cases:\n *  - call methodFn (no pre or post parsing)\n *  - preParse arguments & call methodFn\n *\n * @param methodFn Web3 methods function\n * @param preParse [optional] preParse function, tranforms arguments into `methodFn` expected inputs\n */\nfunction proxySend(kit) {\n    var sendArgs = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sendArgs[_i - 1] = arguments[_i];\n    }\n    if (sendArgs.length === 2) {\n        var methodFn_5 = sendArgs[0];\n        var preParse_1 = sendArgs[1];\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return connect_1.toTransactionObject(kit.connection, methodFn_5.apply(void 0, preParse_1.apply(void 0, args)));\n        };\n    }\n    else {\n        var methodFn_6 = sendArgs[0];\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return connect_1.toTransactionObject(kit.connection, methodFn_6.apply(void 0, args));\n        };\n    }\n}\nexports.proxySend = proxySend;\n//# sourceMappingURL=BaseWrapper.js.map"]},"metadata":{},"sourceType":"script"}