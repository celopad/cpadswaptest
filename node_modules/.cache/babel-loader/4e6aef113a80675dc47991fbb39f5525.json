{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Web3Utils = __importStar(require(\"web3-utils\")); // Exports moved to @celo/base, forwarding them\n// here for backwards compatibility\n\n\nvar contacts_1 = require(\"@celo/base/lib/contacts\");\n\nexports.getContactPhoneNumber = contacts_1.getContactPhoneNumber;\nexports.isContact = contacts_1.isContact;\n\nexports.getContactNameHash = function (contact) {\n  if (!contact) {\n    throw new Error('Invalid contact');\n  }\n\n  return Web3Utils.keccak256(contact.displayName || '');\n};","map":{"version":3,"sources":["../src/contacts.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,IAAA,SAAA,GAAA,YAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA,C,CAEA;AACA;;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAEE,OAAA,CAAA,qBAAA,GAAA,UAAA,CAAA,qBAAA;AACA,OAAA,CAAA,SAAA,GAAA,UAAA,CAAA,SAAA;;AAIW,OAAA,CAAA,kBAAA,GAAqB,UAAC,OAAD,EAAwB;AACxD,MAAI,CAAC,OAAL,EAAc;AACZ,UAAM,IAAI,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,SAAO,SAAS,CAAC,SAAV,CAAoB,OAAO,CAAC,WAAR,IAAuB,EAA3C,CAAP;AACD,CANY","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Web3Utils = __importStar(require(\"web3-utils\"));\n// Exports moved to @celo/base, forwarding them\n// here for backwards compatibility\nvar contacts_1 = require(\"@celo/base/lib/contacts\");\nexports.getContactPhoneNumber = contacts_1.getContactPhoneNumber;\nexports.isContact = contacts_1.isContact;\nexports.getContactNameHash = function (contact) {\n    if (!contact) {\n        throw new Error('Invalid contact');\n    }\n    return Web3Utils.keccak256(contact.displayName || '');\n};\n//# sourceMappingURL=contacts.js.map"]},"metadata":{},"sourceType":"script"}