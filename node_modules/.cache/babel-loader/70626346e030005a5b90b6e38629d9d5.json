{"ast":null,"code":"var _jsxFileName = \"/Users/khoiplus/Desktop/celopad/cpadswaptest/src/components/WalletModal/index.tsx\";\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\nimport { ValoraConnector } from 'connectors/valora/ValoraConnector';\nimport { removeQueryParams, requestValoraAuth } from 'connectors/valora/valoraUtils';\nimport React, { useEffect, useState } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport ReactGA from 'react-ga';\nimport { useValoraAccount } from 'state/user/hooks';\nimport styled from 'styled-components';\nimport CeloLogo from '../../assets/images/celo_logo.png';\nimport { ReactComponent as Close } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/x.svg\";\nimport { injected } from '../../connectors';\nimport { SUPPORTED_WALLETS } from '../../constants';\nimport usePrevious from '../../hooks/usePrevious';\nimport { ApplicationModal } from '../../state/application/actions';\nimport { useModalOpen, useWalletModalToggle } from '../../state/application/hooks';\nimport { ExternalLink } from '../../theme';\nimport AccountDetails from '../AccountDetails';\nimport Modal from '../Modal';\nimport { LedgerWalletSelector } from './LedgerWalletSelector';\nimport Option from './Option';\nimport PendingView from './PendingView';\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`;\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({\n  theme\n}) => theme.text4};\n  }\n`;\nconst Wrapper = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap}\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`;\nconst HeaderRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${props => props.color === 'blue' ? ({\n  theme\n}) => theme.primary1 : 'inherit'};\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`;\nconst ContentWrapper = styled.div`\n  background-color: ${({\n  theme\n}) => theme.bg2};\n  padding: 2rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`padding: 1rem`};\n`;\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`;\nconst Blurb = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-top: 2rem;\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    margin: 1rem;\n    font-size: 12px;\n  `};\n`;\nconst OptionGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`;\nconst HoverText = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`;\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  OPTIONS_SECONDARY: 'options_secondary',\n  ACCOUNT: 'account',\n  PENDING: 'pending',\n  LEDGER: 'ledger'\n};\nexport default function WalletModal({\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName\n}) {\n  // important that these are destructed from the account-specific web3-react context\n  const {\n    active,\n    account,\n    connector,\n    activate,\n    error\n  } = useWeb3React();\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\n  const [pendingWallet, setPendingWallet] = useState();\n  const [pendingError, setPendingError] = useState();\n  const [activateError, setActivateError] = useState(null);\n  const {\n    setValoraAccount\n  } = useValoraAccount();\n  const walletModalOpen = useModalOpen(ApplicationModal.WALLET);\n  const toggleWalletModal = useWalletModalToggle();\n  const previousAccount = usePrevious(account); // close on connection, when logged out before\n\n  useEffect(() => {\n    if (account && !previousAccount && walletModalOpen) {\n      toggleWalletModal();\n    }\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen]); // always reset to account view\n\n  useEffect(() => {\n    if (walletModalOpen) {\n      setPendingError(false);\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [walletModalOpen]); // close modal when a connection is successful\n\n  const activePrevious = usePrevious(active);\n  const connectorPrevious = usePrevious(connector);\n  useEffect(() => {\n    if (walletModalOpen && (active && !activePrevious || connector && connector !== connectorPrevious && !error)) {\n      setWalletView(WALLET_VIEWS.ACCOUNT);\n    }\n  }, [setWalletView, active, error, connector, walletModalOpen, activePrevious, connectorPrevious]);\n\n  const tryActivation = async connector => {\n    let name = '';\n    Object.keys(SUPPORTED_WALLETS).map(key => {\n      if (connector === SUPPORTED_WALLETS[key].connector) {\n        return name = SUPPORTED_WALLETS[key].name;\n      }\n\n      return true;\n    }); // log selected wallet\n\n    ReactGA.event({\n      category: 'Wallet',\n      action: 'Change Wallet',\n      label: name\n    });\n    setPendingWallet(connector); // set wallet for pending view\n\n    setWalletView(WALLET_VIEWS.PENDING);\n\n    if (connector instanceof ValoraConnector) {\n      // valora should connect by deep linking\n      const resp = await requestValoraAuth();\n      setValoraAccount(resp);\n      await activate(connector, undefined, true).catch(() => {\n        setPendingError(true);\n      }); // clear dappkit response from href\n\n      window.location.href = removeQueryParams(window.location.href, [...Object.keys(resp), 'account']);\n      return;\n    }\n\n    connector && (await activate(connector, undefined, true).catch(error => {\n      console.log('[Activation error]', error);\n\n      if (error instanceof UnsupportedChainIdError) {\n        activate(connector); // a little janky...can't use setError because the connector isn't set\n      } else {\n        setActivateError(error.message);\n        setPendingError(true);\n      }\n    }));\n  }; // get wallets user can switch too, depending on device/browser\n\n\n  function getOptions() {\n    const isCEW = window.celo && window.celo;\n    return Object.keys(SUPPORTED_WALLETS).map(key => {\n      const option = SUPPORTED_WALLETS[key]; // check for mobile options\n\n      if (isMobile) {\n        if (!window.web3 && !window.celo && option.mobile) {\n          return /*#__PURE__*/React.createElement(Option, {\n            onClick: () => {\n              option.connector !== connector && !option.href && tryActivation(option.connector);\n            },\n            id: `connect-${key}`,\n            key: key,\n            active: option.connector && option.connector === connector,\n            color: option.color,\n            link: option.href,\n            header: option.name,\n            subheader: null,\n            icon: require('../../assets/images/' + option.iconName),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 13\n            }\n          });\n        }\n\n        return null;\n      } // overwrite injected when needed\n\n\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!window.celo) {\n          if (option.name === 'Celo Extension Wallet') {\n            return /*#__PURE__*/React.createElement(Option, {\n              id: `connect-${key}`,\n              key: key,\n              color: \"#35D07F\",\n              header: 'Install Celo Extension Wallet',\n              subheader: null,\n              link: 'https://chrome.google.com/webstore/detail/celoextensionwallet/kkilomkmpmkbdnfelcpgckmpcaemjcdh/related',\n              icon: CeloLogo,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 15\n              }\n            });\n          } else {\n            return null; //dont want to return install twice\n          }\n        } // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'Celo Extension Wallet' && !isCEW) {\n            return null;\n          } // likewise for generic\n          else if (option.name === 'Injected' && isCEW) {\n              return null;\n            }\n      } // return rest of options\n\n\n      return !isMobile && !option.mobileOnly && /*#__PURE__*/React.createElement(Option, {\n        id: `connect-${key}`,\n        onClick: () => {\n          if (option.name === 'Ledger') {\n            setWalletView(WALLET_VIEWS.LEDGER);\n            return;\n          }\n\n          option.connector === connector ? setWalletView(WALLET_VIEWS.ACCOUNT) : !option.href && tryActivation(option.connector);\n        },\n        key: key,\n        active: option.connector === connector,\n        color: option.color,\n        link: option.href,\n        header: option.name,\n        subheader: null //use option.descriptio to bring back multi-line\n        ,\n        icon: require('../../assets/images/' + option.iconName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }\n      });\n    });\n  }\n\n  function getModalContent() {\n    if (error) {\n      return /*#__PURE__*/React.createElement(UpperSection, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        onClick: toggleWalletModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(CloseColor, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(HeaderRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }\n      }, error instanceof UnsupportedChainIdError ? 'Wrong Network' : activateError !== null && activateError !== void 0 ? activateError : 'Error connecting'), /*#__PURE__*/React.createElement(ContentWrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }\n      }, error instanceof UnsupportedChainIdError ? /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 15\n        }\n      }, \"Please connect to the appropriate Celo network.\") : 'Error connecting. Try refreshing the page.'));\n    }\n\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return /*#__PURE__*/React.createElement(AccountDetails, {\n        toggleWalletModal: toggleWalletModal,\n        pendingTransactions: pendingTransactions,\n        confirmedTransactions: confirmedTransactions,\n        ENSName: ENSName,\n        openOptions: () => setWalletView(WALLET_VIEWS.OPTIONS),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(UpperSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      onClick: toggleWalletModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(CloseColor, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }\n    })), walletView !== WALLET_VIEWS.ACCOUNT ? /*#__PURE__*/React.createElement(HeaderRow, {\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(HoverText, {\n      onClick: () => {\n        setPendingError(false);\n        setWalletView(WALLET_VIEWS.ACCOUNT);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 13\n      }\n    }, \"Back\")) : /*#__PURE__*/React.createElement(HeaderRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(HoverText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 13\n      }\n    }, \"Connect to a wallet\")), /*#__PURE__*/React.createElement(ContentWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }\n    }, walletView === WALLET_VIEWS.PENDING ? /*#__PURE__*/React.createElement(PendingView, {\n      connector: pendingWallet,\n      error: pendingError,\n      setPendingError: setPendingError,\n      activateError: activateError,\n      tryActivation: tryActivation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 13\n      }\n    }) : walletView === WALLET_VIEWS.LEDGER ? /*#__PURE__*/React.createElement(LedgerWalletSelector, {\n      tryActivation: tryActivation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(OptionGrid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 13\n      }\n    }, getOptions()), walletView !== WALLET_VIEWS.PENDING && walletView !== WALLET_VIEWS.LEDGER && /*#__PURE__*/React.createElement(React.Fragment, null, !isMobile && /*#__PURE__*/React.createElement(Blurb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 19\n      }\n    }, \"Looking for MetaMask? Celo currently don't support it.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(ExternalLink, {\n      href: \"https://docs.ubeswap.org/wallet-support/wallets\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 19\n      }\n    }, \"Learn more about Celo wallets\")), isMobile && /*#__PURE__*/React.createElement(Blurb, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 19\n      }\n    }, \"New to Celo? \\xA0\"), /*#__PURE__*/React.createElement(ExternalLink, {\n      href: \"https://docs.ubeswap.org/wallet-support/wallets\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 19\n      }\n    }, \"Learn more about wallets\")))));\n  }\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    isOpen: walletModalOpen,\n    onDismiss: toggleWalletModal,\n    minHeight: false,\n    maxHeight: 90,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }\n  }, getModalContent()));\n}","map":{"version":3,"sources":["/Users/khoiplus/Desktop/celopad/cpadswaptest/src/components/WalletModal/index.tsx"],"names":["UnsupportedChainIdError","useWeb3React","ValoraConnector","removeQueryParams","requestValoraAuth","React","useEffect","useState","isMobile","ReactGA","useValoraAccount","styled","CeloLogo","injected","SUPPORTED_WALLETS","usePrevious","ApplicationModal","useModalOpen","useWalletModalToggle","ExternalLink","AccountDetails","Modal","LedgerWalletSelector","Option","PendingView","CloseIcon","div","CloseColor","Close","theme","text4","Wrapper","flexColumnNoWrap","HeaderRow","flexRowNoWrap","props","color","primary1","mediaWidth","upToMedium","ContentWrapper","bg2","UpperSection","Blurb","OptionGrid","HoverText","WALLET_VIEWS","OPTIONS","OPTIONS_SECONDARY","ACCOUNT","PENDING","LEDGER","WalletModal","pendingTransactions","confirmedTransactions","ENSName","active","account","connector","activate","error","walletView","setWalletView","pendingWallet","setPendingWallet","pendingError","setPendingError","activateError","setActivateError","setValoraAccount","walletModalOpen","WALLET","toggleWalletModal","previousAccount","activePrevious","connectorPrevious","tryActivation","name","Object","keys","map","key","event","category","action","label","resp","undefined","catch","window","location","href","console","log","message","getOptions","isCEW","celo","option","web3","mobile","require","iconName","mobileOnly","getModalContent"],"mappings":"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","sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { ValoraConnector } from 'connectors/valora/ValoraConnector'\nimport { removeQueryParams, requestValoraAuth } from 'connectors/valora/valoraUtils'\nimport React, { useEffect, useState } from 'react'\nimport { isMobile } from 'react-device-detect'\nimport ReactGA from 'react-ga'\nimport { useValoraAccount } from 'state/user/hooks'\nimport styled from 'styled-components'\nimport CeloLogo from '../../assets/images/celo_logo.png'\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\nimport { injected } from '../../connectors'\nimport { SUPPORTED_WALLETS } from '../../constants'\nimport usePrevious from '../../hooks/usePrevious'\nimport { ApplicationModal } from '../../state/application/actions'\nimport { useModalOpen, useWalletModalToggle } from '../../state/application/hooks'\nimport { ExternalLink } from '../../theme'\nimport AccountDetails from '../AccountDetails'\nimport Modal from '../Modal'\nimport { LedgerWalletSelector } from './LedgerWalletSelector'\nimport Option from './Option'\nimport PendingView from './PendingView'\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.text4};\n  }\n`\n\nconst Wrapper = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`\n\nconst HeaderRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${props => (props.color === 'blue' ? ({ theme }) => theme.primary1 : 'inherit')};\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`\n\nconst ContentWrapper = styled.div`\n  background-color: ${({ theme }) => theme.bg2};\n  padding: 2rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 1rem`};\n`\n\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`\n\nconst Blurb = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin-top: 2rem;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    margin: 1rem;\n    font-size: 12px;\n  `};\n`\n\nconst OptionGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`\n\nconst HoverText = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  OPTIONS_SECONDARY: 'options_secondary',\n  ACCOUNT: 'account',\n  PENDING: 'pending',\n  LEDGER: 'ledger'\n}\n\nexport default function WalletModal({\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName\n}: {\n  pendingTransactions: string[] // hashes of pending\n  confirmedTransactions: string[] // hashes of confirmed\n  ENSName?: string\n}) {\n  // important that these are destructed from the account-specific web3-react context\n  const { active, account, connector, activate, error } = useWeb3React()\n\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT)\n\n  const [pendingWallet, setPendingWallet] = useState<AbstractConnector | undefined>()\n\n  const [pendingError, setPendingError] = useState<boolean>()\n  const [activateError, setActivateError] = useState<string | null>(null)\n  const { setValoraAccount } = useValoraAccount()\n\n  const walletModalOpen = useModalOpen(ApplicationModal.WALLET)\n  const toggleWalletModal = useWalletModalToggle()\n\n  const previousAccount = usePrevious(account)\n\n  // close on connection, when logged out before\n  useEffect(() => {\n    if (account && !previousAccount && walletModalOpen) {\n      toggleWalletModal()\n    }\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen])\n\n  // always reset to account view\n  useEffect(() => {\n    if (walletModalOpen) {\n      setPendingError(false)\n      setWalletView(WALLET_VIEWS.ACCOUNT)\n    }\n  }, [walletModalOpen])\n\n  // close modal when a connection is successful\n  const activePrevious = usePrevious(active)\n  const connectorPrevious = usePrevious(connector)\n  useEffect(() => {\n    if (walletModalOpen && ((active && !activePrevious) || (connector && connector !== connectorPrevious && !error))) {\n      setWalletView(WALLET_VIEWS.ACCOUNT)\n    }\n  }, [setWalletView, active, error, connector, walletModalOpen, activePrevious, connectorPrevious])\n\n  const tryActivation = async (connector: AbstractConnector | undefined) => {\n    let name = ''\n    Object.keys(SUPPORTED_WALLETS).map(key => {\n      if (connector === SUPPORTED_WALLETS[key].connector) {\n        return (name = SUPPORTED_WALLETS[key].name)\n      }\n      return true\n    })\n    // log selected wallet\n    ReactGA.event({\n      category: 'Wallet',\n      action: 'Change Wallet',\n      label: name\n    })\n    setPendingWallet(connector) // set wallet for pending view\n    setWalletView(WALLET_VIEWS.PENDING)\n\n    if (connector instanceof ValoraConnector) {\n      // valora should connect by deep linking\n      const resp = await requestValoraAuth()\n      setValoraAccount(resp)\n\n      await activate(connector, undefined, true).catch(() => {\n        setPendingError(true)\n      })\n\n      // clear dappkit response from href\n      window.location.href = removeQueryParams(window.location.href, [...Object.keys(resp), 'account'])\n      return\n    }\n\n    connector &&\n      (await activate(connector, undefined, true).catch(error => {\n        console.log('[Activation error]', error)\n        if (error instanceof UnsupportedChainIdError) {\n          activate(connector) // a little janky...can't use setError because the connector isn't set\n        } else {\n          setActivateError(error.message)\n          setPendingError(true)\n        }\n      }))\n  }\n\n  // get wallets user can switch too, depending on device/browser\n  function getOptions() {\n    const isCEW = window.celo && window.celo\n    return Object.keys(SUPPORTED_WALLETS).map(key => {\n      const option = SUPPORTED_WALLETS[key]\n      // check for mobile options\n      if (isMobile) {\n        if (!window.web3 && !window.celo && option.mobile) {\n          return (\n            <Option\n              onClick={() => {\n                option.connector !== connector && !option.href && tryActivation(option.connector)\n              }}\n              id={`connect-${key}`}\n              key={key}\n              active={option.connector && option.connector === connector}\n              color={option.color}\n              link={option.href}\n              header={option.name}\n              subheader={null}\n              icon={require('../../assets/images/' + option.iconName)}\n            />\n          )\n        }\n        return null\n      }\n\n      // overwrite injected when needed\n      if (option.connector === injected) {\n        // don't show injected if there's no injected provider\n        if (!window.celo) {\n          if (option.name === 'Celo Extension Wallet') {\n            return (\n              <Option\n                id={`connect-${key}`}\n                key={key}\n                color=\"#35D07F\"\n                header={'Install Celo Extension Wallet'}\n                subheader={null}\n                link={\n                  'https://chrome.google.com/webstore/detail/celoextensionwallet/kkilomkmpmkbdnfelcpgckmpcaemjcdh/related'\n                }\n                icon={CeloLogo}\n              />\n            )\n          } else {\n            return null //dont want to return install twice\n          }\n        }\n        // don't return metamask if injected provider isn't metamask\n        else if (option.name === 'Celo Extension Wallet' && !isCEW) {\n          return null\n        }\n        // likewise for generic\n        else if (option.name === 'Injected' && isCEW) {\n          return null\n        }\n      }\n\n      // return rest of options\n      return (\n        !isMobile &&\n        !option.mobileOnly && (\n          <Option\n            id={`connect-${key}`}\n            onClick={() => {\n              if (option.name === 'Ledger') {\n                setWalletView(WALLET_VIEWS.LEDGER)\n                return\n              }\n\n              option.connector === connector\n                ? setWalletView(WALLET_VIEWS.ACCOUNT)\n                : !option.href && tryActivation(option.connector)\n            }}\n            key={key}\n            active={option.connector === connector}\n            color={option.color}\n            link={option.href}\n            header={option.name}\n            subheader={null} //use option.descriptio to bring back multi-line\n            icon={require('../../assets/images/' + option.iconName)}\n          />\n        )\n      )\n    })\n  }\n\n  function getModalContent() {\n    if (error) {\n      return (\n        <UpperSection>\n          <CloseIcon onClick={toggleWalletModal}>\n            <CloseColor />\n          </CloseIcon>\n          <HeaderRow>\n            {error instanceof UnsupportedChainIdError ? 'Wrong Network' : activateError ?? 'Error connecting'}\n          </HeaderRow>\n          <ContentWrapper>\n            {error instanceof UnsupportedChainIdError ? (\n              <h5>Please connect to the appropriate Celo network.</h5>\n            ) : (\n              'Error connecting. Try refreshing the page.'\n            )}\n          </ContentWrapper>\n        </UpperSection>\n      )\n    }\n    if (account && walletView === WALLET_VIEWS.ACCOUNT) {\n      return (\n        <AccountDetails\n          toggleWalletModal={toggleWalletModal}\n          pendingTransactions={pendingTransactions}\n          confirmedTransactions={confirmedTransactions}\n          ENSName={ENSName}\n          openOptions={() => setWalletView(WALLET_VIEWS.OPTIONS)}\n        />\n      )\n    }\n    return (\n      <UpperSection>\n        <CloseIcon onClick={toggleWalletModal}>\n          <CloseColor />\n        </CloseIcon>\n        {walletView !== WALLET_VIEWS.ACCOUNT ? (\n          <HeaderRow color=\"blue\">\n            <HoverText\n              onClick={() => {\n                setPendingError(false)\n                setWalletView(WALLET_VIEWS.ACCOUNT)\n              }}\n            >\n              Back\n            </HoverText>\n          </HeaderRow>\n        ) : (\n          <HeaderRow>\n            <HoverText>Connect to a wallet</HoverText>\n          </HeaderRow>\n        )}\n        <ContentWrapper>\n          {walletView === WALLET_VIEWS.PENDING ? (\n            <PendingView\n              connector={pendingWallet}\n              error={pendingError}\n              setPendingError={setPendingError}\n              activateError={activateError}\n              tryActivation={tryActivation}\n            />\n          ) : walletView === WALLET_VIEWS.LEDGER ? (\n            <LedgerWalletSelector tryActivation={tryActivation} />\n          ) : (\n            <OptionGrid>{getOptions()}</OptionGrid>\n          )}\n          {walletView !== WALLET_VIEWS.PENDING && walletView !== WALLET_VIEWS.LEDGER && (\n            <>\n              {!isMobile && (\n                <Blurb>\n                  <span>\n                    Looking for MetaMask? Celo currently don&apos;t support it.\n                    <br />\n                    <br />\n                  </span>\n                  <ExternalLink href=\"https://docs.ubeswap.org/wallet-support/wallets\">\n                    Learn more about Celo wallets\n                  </ExternalLink>\n                </Blurb>\n              )}\n              {isMobile && (\n                <Blurb>\n                  <span>New to Celo? &nbsp;</span>\n                  <ExternalLink href=\"https://docs.ubeswap.org/wallet-support/wallets\">\n                    Learn more about wallets\n                  </ExternalLink>\n                </Blurb>\n              )}\n            </>\n          )}\n        </ContentWrapper>\n      </UpperSection>\n    )\n  }\n\n  return (\n    <Modal isOpen={walletModalOpen} onDismiss={toggleWalletModal} minHeight={false} maxHeight={90}>\n      <Wrapper>{getModalContent()}</Wrapper>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}