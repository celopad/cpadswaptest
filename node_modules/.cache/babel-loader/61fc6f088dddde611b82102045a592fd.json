{"ast":null,"code":"var _jsxFileName = \"/Users/khoiplus/Desktop/celopad/cpadswaptest/src/components/SearchModal/CurrencyList.tsx\";\nimport { currencyEquals, Token } from '@ubeswap/sdk';\nimport React, { useCallback } from 'react';\nimport { FixedSizeList } from 'react-window';\nimport { Text } from 'rebass';\nimport styled from 'styled-components';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useAllInactiveTokens, useIsUserAddedToken } from '../../hooks/Tokens';\nimport { useCombinedActiveList, WrappedTokenInfo } from '../../state/lists/hooks';\nimport { useCurrencyBalance } from '../../state/wallet/hooks';\nimport { TYPE } from '../../theme';\nimport { isTokenOnList } from '../../utils';\nimport Column from '../Column';\nimport CurrencyLogo from '../CurrencyLogo';\nimport Loader from '../Loader';\nimport { RowFixed } from '../Row';\nimport { MouseoverTooltip } from '../Tooltip';\nimport ImportRow from './ImportRow';\nimport { MenuItem } from './styleds';\n\nfunction currencyKey(currency) {\n  return currency instanceof Token ? currency.address : '';\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`;\nconst Tag = styled.div`\n  background-color: ${({\n  theme\n}) => theme.bg3};\n  color: ${({\n  theme\n}) => theme.text2};\n  font-size: 14px;\n  border-radius: 4px;\n  padding: 0.25rem 0.3rem 0.25rem 0.3rem;\n  max-width: 6rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  justify-self: flex-end;\n  margin-right: 4px;\n`;\n\nfunction Balance({\n  balance\n}) {\n  return /*#__PURE__*/React.createElement(StyledBalanceText, {\n    title: balance.toExact(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }\n  }, balance.toSignificant(4));\n}\n\nconst TagContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nfunction TokenTags({\n  currency\n}) {\n  if (!(currency instanceof WrappedTokenInfo)) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    });\n  }\n\n  const tags = currency.tags;\n  if (!tags || tags.length === 0) return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 42\n    }\n  });\n  const tag = tags[0];\n  return /*#__PURE__*/React.createElement(TagContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MouseoverTooltip, {\n    text: tag.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tag, {\n    key: tag.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, tag.name)), tags.length > 1 ? /*#__PURE__*/React.createElement(MouseoverTooltip, {\n    text: tags.slice(1).map(({\n      name,\n      description\n    }) => `${name}: ${description}`).join('; \\n'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tag, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"...\")) : null);\n}\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style\n}) {\n  const {\n    account\n  } = useActiveWeb3React();\n  const key = currencyKey(currency);\n  const selectedTokenList = useCombinedActiveList();\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency);\n  const customAdded = useIsUserAddedToken(currency);\n  const balance = useCurrencyBalance(account !== null && account !== void 0 ? account : undefined, currency); // only show add or remove buttons if not on selected list\n\n  return /*#__PURE__*/React.createElement(MenuItem, {\n    style: style,\n    className: `token-item-${key}`,\n    onClick: () => isSelected ? null : onSelect(),\n    disabled: isSelected,\n    selected: otherSelected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CurrencyLogo, {\n    currency: currency,\n    size: '24px',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    title: currency.name,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, currency.symbol), /*#__PURE__*/React.createElement(TYPE.darkGray, {\n    ml: \"0px\",\n    fontSize: '12px',\n    fontWeight: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, currency.name, \" \", !isOnSelectedList && customAdded && 'â€¢ Added by user')), /*#__PURE__*/React.createElement(TokenTags, {\n    currency: currency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(RowFixed, {\n    style: {\n      justifySelf: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, balance ? /*#__PURE__*/React.createElement(Balance, {\n    balance: balance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 20\n    }\n  }) : account ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 62\n    }\n  }) : null));\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showImportView,\n  setImportToken\n}) {\n  const itemData = currencies;\n  const inactiveTokens = useAllInactiveTokens();\n  const Row = useCallback(({\n    data,\n    index,\n    style\n  }) => {\n    const currency = data[index];\n    const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency));\n    const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency));\n\n    const handleSelect = () => onCurrencySelect(currency);\n\n    const token = currency;\n    const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address);\n\n    if (showImport && token) {\n      return /*#__PURE__*/React.createElement(ImportRow, {\n        style: style,\n        token: token,\n        showImportView: showImportView,\n        setImportToken: setImportToken,\n        dim: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(CurrencyRow, {\n        style: style,\n        currency: currency,\n        isSelected: isSelected,\n        onSelect: handleSelect,\n        otherSelected: otherSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      });\n    }\n  }, [inactiveTokens, onCurrencySelect, otherCurrency, selectedCurrency, setImportToken, showImportView]);\n  const itemKey = useCallback((index, data) => currencyKey(data[index]), []);\n  return /*#__PURE__*/React.createElement(FixedSizeList, {\n    height: height,\n    ref: fixedListRef,\n    width: \"100%\",\n    itemData: itemData,\n    itemCount: itemData.length,\n    itemSize: 56,\n    itemKey: itemKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }\n  }, Row);\n}","map":{"version":3,"sources":["/Users/khoiplus/Desktop/celopad/cpadswaptest/src/components/SearchModal/CurrencyList.tsx"],"names":["currencyEquals","Token","React","useCallback","FixedSizeList","Text","styled","useActiveWeb3React","useAllInactiveTokens","useIsUserAddedToken","useCombinedActiveList","WrappedTokenInfo","useCurrencyBalance","TYPE","isTokenOnList","Column","CurrencyLogo","Loader","RowFixed","MouseoverTooltip","ImportRow","MenuItem","currencyKey","currency","address","StyledBalanceText","Tag","div","theme","bg3","text2","Balance","balance","toExact","toSignificant","TagContainer","TokenTags","tags","length","tag","description","id","name","slice","map","join","CurrencyRow","onSelect","isSelected","otherSelected","style","account","key","selectedTokenList","isOnSelectedList","customAdded","undefined","symbol","justifySelf","CurrencyList","height","currencies","selectedCurrency","onCurrencySelect","otherCurrency","fixedListRef","showImportView","setImportToken","itemData","inactiveTokens","Row","data","index","Boolean","handleSelect","token","showImport","Object","keys","includes","itemKey"],"mappings":"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","sourcesContent":["import { currencyEquals, Token, TokenAmount } from '@ubeswap/sdk'\nimport React, { CSSProperties, MutableRefObject, useCallback } from 'react'\nimport { FixedSizeList } from 'react-window'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAllInactiveTokens, useIsUserAddedToken } from '../../hooks/Tokens'\nimport { useCombinedActiveList, WrappedTokenInfo } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { TYPE } from '../../theme'\nimport { isTokenOnList } from '../../utils'\nimport Column from '../Column'\nimport CurrencyLogo from '../CurrencyLogo'\nimport Loader from '../Loader'\nimport { RowFixed } from '../Row'\nimport { MouseoverTooltip } from '../Tooltip'\nimport ImportRow from './ImportRow'\nimport { MenuItem } from './styleds'\n\nfunction currencyKey(currency: Token): string {\n  return currency instanceof Token ? currency.address : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst Tag = styled.div`\n  background-color: ${({ theme }) => theme.bg3};\n  color: ${({ theme }) => theme.text2};\n  font-size: 14px;\n  border-radius: 4px;\n  padding: 0.25rem 0.3rem 0.25rem 0.3rem;\n  max-width: 6rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  justify-self: flex-end;\n  margin-right: 4px;\n`\n\nfunction Balance({ balance }: { balance: TokenAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst TagContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`\n\nfunction TokenTags({ currency }: { currency: Token }) {\n  if (!(currency instanceof WrappedTokenInfo)) {\n    return <span />\n  }\n\n  const tags = currency.tags\n  if (!tags || tags.length === 0) return <span />\n\n  const tag = tags[0]\n\n  return (\n    <TagContainer>\n      <MouseoverTooltip text={tag.description}>\n        <Tag key={tag.id}>{tag.name}</Tag>\n      </MouseoverTooltip>\n      {tags.length > 1 ? (\n        <MouseoverTooltip\n          text={tags\n            .slice(1)\n            .map(({ name, description }) => `${name}: ${description}`)\n            .join('; \\n')}\n        >\n          <Tag>...</Tag>\n        </MouseoverTooltip>\n      ) : null}\n    </TagContainer>\n  )\n}\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style\n}: {\n  currency: Token\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size={'24px'} />\n      <Column>\n        <Text title={currency.name} fontWeight={500}>\n          {currency.symbol}\n        </Text>\n        <TYPE.darkGray ml=\"0px\" fontSize={'12px'} fontWeight={300}>\n          {currency.name} {!isOnSelectedList && customAdded && 'â€¢ Added by user'}\n        </TYPE.darkGray>\n      </Column>\n      <TokenTags currency={currency} />\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <Loader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showImportView,\n  setImportToken\n}: {\n  height: number\n  currencies: Token[]\n  selectedCurrency?: Token | null\n  onCurrencySelect: (currency: Token) => void\n  otherCurrency?: Token | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  const itemData = currencies\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Token = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = currency\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (showImport && token) {\n        return (\n          <ImportRow\n            style={style}\n            token={token}\n            showImportView={showImportView}\n            setImportToken={setImportToken}\n            dim={true}\n          />\n        )\n      } else {\n        return (\n          <CurrencyRow\n            style={style}\n            currency={currency}\n            isSelected={isSelected}\n            onSelect={handleSelect}\n            otherSelected={otherSelected}\n          />\n        )\n      }\n    },\n    [inactiveTokens, onCurrencySelect, otherCurrency, selectedCurrency, setImportToken, showImportView]\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}