{"ast":null,"code":"import { CELO, ChainId, cUSD, JSBI, Percent } from '@ubeswap/sdk';\nimport { injected, ledger, valora } from '../connectors';\nimport { UBE } from './tokens';\nexport const ROUTER_ADDRESS = '0x1dAC7e86903Fd55483C3D05A31B4A3e92DBBb80E';\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'; // a list of tokens by chain\n\n// Block time here is slightly higher (~1s) than average in order to avoid ongoing proposals past the displayed time\nexport const AVERAGE_BLOCK_TIME_IN_SECS = 13;\nexport const PROPOSAL_LENGTH_IN_BLOCKS = 40320;\nexport const PROPOSAL_LENGTH_IN_SECS = AVERAGE_BLOCK_TIME_IN_SECS * PROPOSAL_LENGTH_IN_BLOCKS; // TODO(igm): rename\n\nexport const UNI = UBE; // used to construct intermediary pairs for trading\n\nexport const BASES_TO_CHECK_TRADES_AGAINST = {\n  [ChainId.MAINNET]: [cUSD[ChainId.MAINNET], CELO[ChainId.MAINNET]],\n  [ChainId.ALFAJORES]: [cUSD[ChainId.ALFAJORES], CELO[ChainId.ALFAJORES]],\n  [ChainId.BAKLAVA]: [cUSD[ChainId.BAKLAVA], CELO[ChainId.BAKLAVA]]\n}; // used for display in the default list when adding liquidity\n\nexport const SUGGESTED_BASES = BASES_TO_CHECK_TRADES_AGAINST; // used to construct the list of all pairs we consider by default in the frontend\n\nexport const BASES_TO_TRACK_LIQUIDITY_FOR = BASES_TO_CHECK_TRADES_AGAINST;\nexport const PINNED_PAIRS = {\n  [ChainId.MAINNET]: [[cUSD[ChainId.MAINNET], CELO[ChainId.MAINNET]]],\n  [ChainId.ALFAJORES]: [[cUSD[ChainId.ALFAJORES], CELO[ChainId.ALFAJORES]]],\n  [ChainId.BAKLAVA]: [[cUSD[ChainId.BAKLAVA], CELO[ChainId.BAKLAVA]]]\n};\nexport const SUPPORTED_WALLETS = {\n  // INJECTED: {\n  //   connector: injected,\n  //   name: 'Injected',\n  //   iconName: 'arrow-right.svg',\n  //   description: 'Injected web3 provider.',\n  //   href: null,\n  //   color: '#010101',\n  //   primary: true\n  // },\n  CELO_EXTENSION_WALLET: {\n    connector: injected,\n    name: 'Celo Extension Wallet',\n    iconName: 'celo_logo.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#35D07F'\n  },\n  LEDGER: {\n    connector: ledger,\n    name: 'Ledger',\n    iconName: 'ledger.svg',\n    description: 'Connect to Ledger device',\n    href: null,\n    color: '#fff'\n  },\n  VALORA_LINK: {\n    connector: valora,\n    name: 'Valora',\n    iconName: 'valoraIcon.png',\n    description: 'Connect to the Valora app.',\n    href: null,\n    color: '#315CF5',\n    mobile: true,\n    mobileOnly: true\n  }\n};\nexport const NetworkContextName = 'NETWORK'; // default allowed slippage, in bips\n\nexport const INITIAL_ALLOWED_SLIPPAGE = 50; // 20 minutes, denominated in seconds\n\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20; // used for rewards deadlines\n\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7);\nexport const BIG_INT_ZERO = JSBI.BigInt(0); // one basis point\n\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000));\nexport const BIPS_BASE = JSBI.BigInt(10000); // used for warning states\n\nexport const ALLOWED_PRICE_IMPACT_LOW = new Percent(JSBI.BigInt(100), BIPS_BASE); // 1%\n\nexport const ALLOWED_PRICE_IMPACT_MEDIUM = new Percent(JSBI.BigInt(300), BIPS_BASE); // 3%\n\nexport const ALLOWED_PRICE_IMPACT_HIGH = new Percent(JSBI.BigInt(500), BIPS_BASE); // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\n\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN = new Percent(JSBI.BigInt(1000), BIPS_BASE); // 10%\n// for non expert mode disable swaps above this\n\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT = new Percent(JSBI.BigInt(1500), BIPS_BASE); // 15%\n// used to ensure the user doesn't send so much ETH so they end up with <.01\n\nexport const MIN_ETH = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)); // .01 ETH\n\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000));\nexport const ZERO_PERCENT = new Percent('0');\nexport const ONE_HUNDRED_PERCENT = new Percent('1');","map":{"version":3,"sources":["/Users/khoiplus/Desktop/celopad/cpadswaptest/src/constants/index.ts"],"names":["CELO","ChainId","cUSD","JSBI","Percent","injected","ledger","valora","UBE","ROUTER_ADDRESS","ZERO_ADDRESS","AVERAGE_BLOCK_TIME_IN_SECS","PROPOSAL_LENGTH_IN_BLOCKS","PROPOSAL_LENGTH_IN_SECS","UNI","BASES_TO_CHECK_TRADES_AGAINST","MAINNET","ALFAJORES","BAKLAVA","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","SUPPORTED_WALLETS","CELO_EXTENSION_WALLET","connector","name","iconName","description","href","color","LEDGER","VALORA_LINK","mobile","mobileOnly","NetworkContextName","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_SECONDS_IN_WEEK","BigInt","BIG_INT_ZERO","ONE_BIPS","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_ETH","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT"],"mappings":"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","sourcesContent":["import { CELO, ChainId, cUSD, JSBI, Percent, Token } from '@ubeswap/sdk'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport { injected, ledger, valora } from '../connectors'\nimport { UBE } from './tokens'\n\nexport const ROUTER_ADDRESS = '0x1dAC7e86903Fd55483C3D05A31B4A3e92DBBb80E'\n\nexport const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  // readonly [chainId in ChainId]: Token[]\n  readonly [chainId: number]: Token[]\n}\n\n// Block time here is slightly higher (~1s) than average in order to avoid ongoing proposals past the displayed time\nexport const AVERAGE_BLOCK_TIME_IN_SECS = 13\nexport const PROPOSAL_LENGTH_IN_BLOCKS = 40_320\nexport const PROPOSAL_LENGTH_IN_SECS = AVERAGE_BLOCK_TIME_IN_SECS * PROPOSAL_LENGTH_IN_BLOCKS\n\n// TODO(igm): rename\nexport const UNI = UBE\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [cUSD[ChainId.MAINNET], CELO[ChainId.MAINNET]],\n  [ChainId.ALFAJORES]: [cUSD[ChainId.ALFAJORES], CELO[ChainId.ALFAJORES]],\n  [ChainId.BAKLAVA]: [cUSD[ChainId.BAKLAVA], CELO[ChainId.BAKLAVA]]\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = BASES_TO_CHECK_TRADES_AGAINST\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = BASES_TO_CHECK_TRADES_AGAINST\n\nexport const PINNED_PAIRS: { [chainId: number]: [Token, Token][] } = {\n  [ChainId.MAINNET]: [[cUSD[ChainId.MAINNET], CELO[ChainId.MAINNET]]],\n  [ChainId.ALFAJORES]: [[cUSD[ChainId.ALFAJORES], CELO[ChainId.ALFAJORES]]],\n  [ChainId.BAKLAVA]: [[cUSD[ChainId.BAKLAVA], CELO[ChainId.BAKLAVA]]]\n}\n\nexport interface WalletInfo {\n  connector?: AbstractConnector\n  name: string\n  iconName: string\n  description: string\n  href: string | null\n  color: string\n  primary?: true\n  mobile?: true\n  mobileOnly?: true\n}\n\nexport const SUPPORTED_WALLETS: { [key: string]: WalletInfo } = {\n  // INJECTED: {\n  //   connector: injected,\n  //   name: 'Injected',\n  //   iconName: 'arrow-right.svg',\n  //   description: 'Injected web3 provider.',\n  //   href: null,\n  //   color: '#010101',\n  //   primary: true\n  // },\n  CELO_EXTENSION_WALLET: {\n    connector: injected,\n    name: 'Celo Extension Wallet',\n    iconName: 'celo_logo.png',\n    description: 'Easy-to-use browser extension.',\n    href: null,\n    color: '#35D07F'\n  },\n  LEDGER: {\n    connector: ledger,\n    name: 'Ledger',\n    iconName: 'ledger.svg',\n    description: 'Connect to Ledger device',\n    href: null,\n    color: '#fff'\n  },\n  VALORA_LINK: {\n    connector: valora,\n    name: 'Valora',\n    iconName: 'valoraIcon.png',\n    description: 'Connect to the Valora app.',\n    href: null,\n    color: '#315CF5',\n    mobile: true,\n    mobileOnly: true\n  }\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\n// used for rewards deadlines\nexport const BIG_INT_SECONDS_IN_WEEK = JSBI.BigInt(60 * 60 * 24 * 7)\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much ETH so they end up with <.01\nexport const MIN_ETH: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 ETH\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n"]},"metadata":{},"sourceType":"module"}