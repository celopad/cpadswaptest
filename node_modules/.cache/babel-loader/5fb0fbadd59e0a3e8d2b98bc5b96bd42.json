{"ast":null,"code":"import { network } from 'connectors';\nimport { useEffect, useState } from 'react';\n\n/**\n * Fetches the account summary of a Celo account.\n */\nexport default function useAccountSummary(address) {\n  const [summary, setSummary] = useState(null);\n  useEffect(() => {\n    ;\n\n    (async () => {\n      if (!address) {\n        return;\n      }\n\n      const provider = await network.getProvider();\n\n      if (!provider) {\n        return;\n      }\n\n      const {\n        kit\n      } = provider;\n      const accounts = await kit.contracts.getAccounts();\n\n      try {\n        const account = await accounts.signerToAccount(address);\n        setSummary(await accounts.getAccountSummary(account));\n      } catch (e) {\n        console.error('Could not fetch account summary', e);\n      }\n    })();\n  }, [address]);\n  return {\n    summary,\n    loading: summary === null\n  };\n}","map":{"version":3,"sources":["/Users/khoiplus/Desktop/celopad/cpadswaptest/src/hooks/useAccountSummary.ts"],"names":["network","useEffect","useState","useAccountSummary","address","summary","setSummary","provider","getProvider","kit","accounts","contracts","getAccounts","account","signerToAccount","getAccountSummary","e","console","error","loading"],"mappings":"AACA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAUA;;;AAGA,eAAe,SAASC,iBAAT,CAA2BC,OAA3B,EAAmG;AAChH,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAwB,IAAxB,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;;AAAC,KAAC,YAAY;AACZ,UAAI,CAACG,OAAL,EAAc;AACZ;AACD;;AACD,YAAMG,QAAQ,GAAG,MAAMP,OAAO,CAACQ,WAAR,EAAvB;;AACA,UAAI,CAACD,QAAL,EAAe;AACb;AACD;;AACD,YAAM;AAAEE,QAAAA;AAAF,UAAUF,QAAhB;AACA,YAAMG,QAAQ,GAAG,MAAMD,GAAG,CAACE,SAAJ,CAAcC,WAAd,EAAvB;;AACA,UAAI;AACF,cAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,eAAT,CAAyBV,OAAzB,CAAtB;AACAE,QAAAA,UAAU,CAAC,MAAMI,QAAQ,CAACK,iBAAT,CAA2BF,OAA3B,CAAP,CAAV;AACD,OAHD,CAGE,OAAOG,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAc,iCAAd,EAAiDF,CAAjD;AACD;AACF,KAhBA;AAiBF,GAlBQ,EAkBN,CAACZ,OAAD,CAlBM,CAAT;AAoBA,SAAO;AAAEC,IAAAA,OAAF;AAAWc,IAAAA,OAAO,EAAEd,OAAO,KAAK;AAAhC,GAAP;AACD","sourcesContent":["import { AccountsWrapper } from '@celo/contractkit/lib/wrappers/Accounts'\nimport { network } from 'connectors'\nimport { useEffect, useState } from 'react'\n\ntype AsyncReturnType<T extends (...args: any) => any> = T extends (...args: any) => Promise<infer U>\n  ? U\n  : T extends (...args: any) => infer U\n  ? U\n  : any\n\ntype AccountSummary = AsyncReturnType<AccountsWrapper['getAccountSummary']>\n\n/**\n * Fetches the account summary of a Celo account.\n */\nexport default function useAccountSummary(address?: string): { summary: AccountSummary | null; loading: boolean } {\n  const [summary, setSummary] = useState<AccountSummary | null>(null)\n\n  useEffect(() => {\n    ;(async () => {\n      if (!address) {\n        return\n      }\n      const provider = await network.getProvider()\n      if (!provider) {\n        return\n      }\n      const { kit } = provider\n      const accounts = await kit.contracts.getAccounts()\n      try {\n        const account = await accounts.signerToAccount(address)\n        setSummary(await accounts.getAccountSummary(account))\n      } catch (e) {\n        console.error('Could not fetch account summary', e)\n      }\n    })()\n  }, [address])\n\n  return { summary, loading: summary === null }\n}\n"]},"metadata":{},"sourceType":"module"}