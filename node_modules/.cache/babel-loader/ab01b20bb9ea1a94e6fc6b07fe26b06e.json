{"ast":null,"code":"var _jsxFileName = \"/Users/khoiplus/Desktop/celopad/cpadswaptest/src/components/AccountDetails/index.tsx\";\nimport { getBlockscoutLink } from '@ubeswap/sdk';\nimport { LedgerConnector } from 'connectors/ledger/LedgerConnector';\nimport { ValoraConnector } from 'connectors/valora/ValoraConnector';\nimport React, { useCallback, useContext } from 'react';\nimport { ExternalLink as LinkIcon } from 'react-feather';\nimport { useDispatch } from 'react-redux';\nimport { useValoraAccount } from 'state/user/hooks';\nimport styled, { ThemeContext } from 'styled-components';\nimport { ReactComponent as Close } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/x.svg\";\nimport { injected } from '../../connectors';\nimport { SUPPORTED_WALLETS } from '../../constants';\nimport { useActiveWeb3React } from '../../hooks';\nimport { clearAllTransactions } from '../../state/transactions/actions';\nimport { ExternalLink, LinkStyledButton, TYPE } from '../../theme';\nimport { shortenAddress } from '../../utils';\nimport { ButtonSecondary } from '../Button';\nimport Identicon from '../Identicon';\nimport { AutoRow } from '../Row';\nimport Copy from './Copy';\nimport Transaction from './Transaction';\nconst HeaderRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${props => props.color === 'blue' ? ({\n  theme\n}) => theme.primary1 : 'inherit'};\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`;\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`;\nconst InfoCard = styled.div`\n  padding: 1rem;\n  border: 1px solid ${({\n  theme\n}) => theme.bg3};\n  border-radius: 20px;\n  position: relative;\n  display: grid;\n  grid-row-gap: 12px;\n  margin-bottom: 20px;\n`;\nconst AccountGroupingRow = styled.div`\n  ${({\n  theme\n}) => theme.flexRowNoWrap};\n  justify-content: space-between;\n  align-items: center;\n  font-weight: 400;\n  color: ${({\n  theme\n}) => theme.text1};\n\n  div {\n    ${({\n  theme\n}) => theme.flexRowNoWrap}\n    align-items: center;\n  }\n`;\nconst AccountSection = styled.div`\n  background-color: ${({\n  theme\n}) => theme.bg1};\n  padding: 0rem 1rem;\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`padding: 0rem 1rem 1.5rem 1rem;`};\n`;\nconst YourAccount = styled.div`\n  h5 {\n    margin: 0 0 1rem 0;\n    font-weight: 400;\n  }\n\n  h4 {\n    margin: 0;\n    font-weight: 500;\n  }\n`;\nconst LowerSection = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap}\n  padding: 1.5rem;\n  flex-grow: 1;\n  overflow: auto;\n  background-color: ${({\n  theme\n}) => theme.bg2};\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  h5 {\n    margin: 0;\n    font-weight: 400;\n    color: ${({\n  theme\n}) => theme.text3};\n  }\n`;\nconst AccountControl = styled.div`\n  display: flex;\n  justify-content: space-between;\n  min-width: 0;\n  width: 100%;\n\n  font-weight: 500;\n  font-size: 1.25rem;\n\n  a:hover {\n    text-decoration: underline;\n  }\n\n  p {\n    min-width: 0;\n    margin: 0;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n`;\nconst AddressLink = styled(ExternalLink)`\n  font-size: 0.825rem;\n  color: ${({\n  theme\n}) => theme.text3};\n  margin-left: 1rem;\n  font-size: 0.825rem;\n  display: flex;\n  :hover {\n    color: ${({\n  theme\n}) => theme.text2};\n  }\n`;\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`;\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({\n  theme\n}) => theme.text4};\n  }\n`;\nconst WalletName = styled.div`\n  width: initial;\n  font-size: 0.825rem;\n  font-weight: 500;\n  color: ${({\n  theme\n}) => theme.text3};\n`;\nconst IconWrapper = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  margin-right: 8px;\n  & > img,\n  span {\n    height: ${({\n  size\n}) => size ? size + 'px' : '32px'};\n    width: ${({\n  size\n}) => size ? size + 'px' : '32px'};\n  }\n  ${({\n  theme\n}) => theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `};\n`;\nconst TransactionListWrapper = styled.div`\n  ${({\n  theme\n}) => theme.flexColumnNoWrap};\n`;\nconst WalletAction = styled(ButtonSecondary)`\n  width: fit-content;\n  font-weight: 400;\n  margin-left: 8px;\n  font-size: 0.825rem;\n  padding: 4px 6px;\n  :hover {\n    cursor: pointer;\n    text-decoration: underline;\n  }\n`;\n\nfunction renderTransactions(transactions) {\n  return /*#__PURE__*/React.createElement(TransactionListWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }\n  }, transactions.map((hash, i) => {\n    return /*#__PURE__*/React.createElement(Transaction, {\n      key: i,\n      hash: hash,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 16\n      }\n    });\n  }));\n}\n\nexport default function AccountDetails({\n  toggleWalletModal,\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName,\n  openOptions\n}) {\n  const {\n    chainId,\n    account,\n    connector\n  } = useActiveWeb3React();\n  const theme = useContext(ThemeContext);\n  const dispatch = useDispatch();\n  const {\n    clearValoraAccount,\n    account: valoraAccount\n  } = useValoraAccount();\n\n  function formatConnectorName() {\n    const {\n      celo\n    } = window;\n    const isCEW = !!celo;\n    const name = connector instanceof LedgerConnector ? 'Ledger' : Object.keys(SUPPORTED_WALLETS).filter(k => SUPPORTED_WALLETS[k].connector === connector && (connector !== injected || isCEW === (k === 'CELO_EXTENSION_WALLET'))).map(k => SUPPORTED_WALLETS[k].name)[0];\n    return /*#__PURE__*/React.createElement(WalletName, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 12\n      }\n    }, \"Connected with \", name);\n  }\n\n  function getStatusIcon() {\n    if (connector === injected) {\n      return /*#__PURE__*/React.createElement(IconWrapper, {\n        size: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Identicon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    return null;\n  }\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({\n      chainId\n    }));\n  }, [dispatch, chainId]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UpperSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    onClick: toggleWalletModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseColor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(HeaderRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }\n  }, \"Account\"), /*#__PURE__*/React.createElement(AccountSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(YourAccount, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InfoCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AccountGroupingRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 15\n    }\n  }, formatConnectorName(), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  }, connector !== injected && /*#__PURE__*/React.createElement(WalletAction, {\n    style: {\n      fontSize: '.825rem',\n      fontWeight: 400,\n      marginRight: '8px'\n    },\n    onClick: () => {\n      ;\n      connector.close();\n      clearValoraAccount();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 21\n    }\n  }, \"Disconnect\"), /*#__PURE__*/React.createElement(WalletAction, {\n    style: {\n      fontSize: '.825rem',\n      fontWeight: 400\n    },\n    onClick: () => {\n      openOptions();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 19\n    }\n  }, \"Change\"))), /*#__PURE__*/React.createElement(AccountGroupingRow, {\n    id: \"web3-account-identifier-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AccountControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, ENSName ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 23\n    }\n  }, getStatusIcon(), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 25\n    }\n  }, \" \", ENSName))) : connector instanceof ValoraConnector && connector.valoraAccount ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 25\n    }\n  }, \" \", valoraAccount === null || valoraAccount === void 0 ? void 0 : valoraAccount.phoneNumber))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 23\n    }\n  }, getStatusIcon(), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 25\n    }\n  }, \" \", account && shortenAddress(account)))))), /*#__PURE__*/React.createElement(AccountGroupingRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 15\n    }\n  }, ENSName ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AccountControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 23\n    }\n  }, account && /*#__PURE__*/React.createElement(Copy, {\n    toCopy: account,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: '4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 29\n    }\n  }, \"Copy Address\")), chainId && account && /*#__PURE__*/React.createElement(AddressLink, {\n    hasENS: !!ENSName,\n    isENS: true,\n    href: chainId ? getBlockscoutLink(chainId, ENSName, 'address') : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(LinkIcon, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: '4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 29\n    }\n  }, \"View on Celo Explorer\"))))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AccountControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 23\n    }\n  }, account && /*#__PURE__*/React.createElement(Copy, {\n    toCopy: account,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: '4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 29\n    }\n  }, \"Copy Address\")), chainId && account && /*#__PURE__*/React.createElement(AddressLink, {\n    hasENS: !!ENSName,\n    isENS: false,\n    href: getBlockscoutLink(chainId, account, 'address'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(LinkIcon, {\n    size: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: '4px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 29\n    }\n  }, \"View on Celo Explorer\")))))))))), !!pendingTransactions.length || !!confirmedTransactions.length ? /*#__PURE__*/React.createElement(LowerSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AutoRow, {\n    mb: '1rem',\n    style: {\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 13\n    }\n  }, \"Recent Transactions\"), /*#__PURE__*/React.createElement(LinkStyledButton, {\n    onClick: clearAllTransactionsCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }\n  }, \"(clear all)\")), renderTransactions(pendingTransactions), renderTransactions(confirmedTransactions)) : /*#__PURE__*/React.createElement(LowerSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TYPE.body, {\n    color: theme.text1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 11\n    }\n  }, \"Your transactions will appear here...\")));\n}","map":{"version":3,"sources":["/Users/khoiplus/Desktop/celopad/cpadswaptest/src/components/AccountDetails/index.tsx"],"names":["getBlockscoutLink","LedgerConnector","ValoraConnector","React","useCallback","useContext","ExternalLink","LinkIcon","useDispatch","useValoraAccount","styled","ThemeContext","injected","SUPPORTED_WALLETS","useActiveWeb3React","clearAllTransactions","LinkStyledButton","TYPE","shortenAddress","ButtonSecondary","Identicon","AutoRow","Copy","Transaction","HeaderRow","div","theme","flexRowNoWrap","props","color","primary1","mediaWidth","upToMedium","UpperSection","InfoCard","bg3","AccountGroupingRow","text1","AccountSection","bg1","YourAccount","LowerSection","flexColumnNoWrap","bg2","text3","AccountControl","AddressLink","text2","CloseIcon","CloseColor","Close","text4","WalletName","IconWrapper","size","TransactionListWrapper","WalletAction","renderTransactions","transactions","map","hash","i","AccountDetails","toggleWalletModal","pendingTransactions","confirmedTransactions","ENSName","openOptions","chainId","account","connector","dispatch","clearValoraAccount","valoraAccount","formatConnectorName","celo","window","isCEW","name","Object","keys","filter","k","getStatusIcon","clearAllTransactionsCallback","fontSize","fontWeight","marginRight","close","phoneNumber","marginLeft","length","justifyContent"],"mappings":"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","sourcesContent":["import { getBlockscoutLink } from '@ubeswap/sdk'\nimport { LedgerConnector } from 'connectors/ledger/LedgerConnector'\nimport { ValoraConnector } from 'connectors/valora/ValoraConnector'\nimport React, { useCallback, useContext } from 'react'\nimport { ExternalLink as LinkIcon } from 'react-feather'\nimport { useDispatch } from 'react-redux'\nimport { useValoraAccount } from 'state/user/hooks'\nimport styled, { ThemeContext } from 'styled-components'\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\nimport { injected } from '../../connectors'\nimport { SUPPORTED_WALLETS } from '../../constants'\nimport { useActiveWeb3React } from '../../hooks'\nimport { AppDispatch } from '../../state'\nimport { clearAllTransactions } from '../../state/transactions/actions'\nimport { ExternalLink, LinkStyledButton, TYPE } from '../../theme'\nimport { shortenAddress } from '../../utils'\nimport { ButtonSecondary } from '../Button'\nimport Identicon from '../Identicon'\nimport { AutoRow } from '../Row'\nimport Copy from './Copy'\nimport Transaction from './Transaction'\n\nconst HeaderRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 500;\n  color: ${props => (props.color === 'blue' ? ({ theme }) => theme.primary1 : 'inherit')};\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    padding: 1rem;\n  `};\n`\n\nconst UpperSection = styled.div`\n  position: relative;\n\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`\n\nconst InfoCard = styled.div`\n  padding: 1rem;\n  border: 1px solid ${({ theme }) => theme.bg3};\n  border-radius: 20px;\n  position: relative;\n  display: grid;\n  grid-row-gap: 12px;\n  margin-bottom: 20px;\n`\n\nconst AccountGroupingRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  justify-content: space-between;\n  align-items: center;\n  font-weight: 400;\n  color: ${({ theme }) => theme.text1};\n\n  div {\n    ${({ theme }) => theme.flexRowNoWrap}\n    align-items: center;\n  }\n`\n\nconst AccountSection = styled.div`\n  background-color: ${({ theme }) => theme.bg1};\n  padding: 0rem 1rem;\n  ${({ theme }) => theme.mediaWidth.upToMedium`padding: 0rem 1rem 1.5rem 1rem;`};\n`\n\nconst YourAccount = styled.div`\n  h5 {\n    margin: 0 0 1rem 0;\n    font-weight: 400;\n  }\n\n  h4 {\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst LowerSection = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  padding: 1.5rem;\n  flex-grow: 1;\n  overflow: auto;\n  background-color: ${({ theme }) => theme.bg2};\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n\n  h5 {\n    margin: 0;\n    font-weight: 400;\n    color: ${({ theme }) => theme.text3};\n  }\n`\n\nconst AccountControl = styled.div`\n  display: flex;\n  justify-content: space-between;\n  min-width: 0;\n  width: 100%;\n\n  font-weight: 500;\n  font-size: 1.25rem;\n\n  a:hover {\n    text-decoration: underline;\n  }\n\n  p {\n    min-width: 0;\n    margin: 0;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n`\n\nconst AddressLink = styled(ExternalLink)<{ hasENS: boolean; isENS: boolean }>`\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.text3};\n  margin-left: 1rem;\n  font-size: 0.825rem;\n  display: flex;\n  :hover {\n    color: ${({ theme }) => theme.text2};\n  }\n`\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n`\n\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.text4};\n  }\n`\n\nconst WalletName = styled.div`\n  width: initial;\n  font-size: 0.825rem;\n  font-weight: 500;\n  color: ${({ theme }) => theme.text3};\n`\n\nconst IconWrapper = styled.div<{ size?: number }>`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  align-items: center;\n  justify-content: center;\n  margin-right: 8px;\n  & > img,\n  span {\n    height: ${({ size }) => (size ? size + 'px' : '32px')};\n    width: ${({ size }) => (size ? size + 'px' : '32px')};\n  }\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `};\n`\n\nconst TransactionListWrapper = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap};\n`\n\nconst WalletAction = styled(ButtonSecondary)`\n  width: fit-content;\n  font-weight: 400;\n  margin-left: 8px;\n  font-size: 0.825rem;\n  padding: 4px 6px;\n  :hover {\n    cursor: pointer;\n    text-decoration: underline;\n  }\n`\n\nfunction renderTransactions(transactions: string[]) {\n  return (\n    <TransactionListWrapper>\n      {transactions.map((hash, i) => {\n        return <Transaction key={i} hash={hash} />\n      })}\n    </TransactionListWrapper>\n  )\n}\n\ninterface AccountDetailsProps {\n  toggleWalletModal: () => void\n  pendingTransactions: string[]\n  confirmedTransactions: string[]\n  ENSName?: string\n  openOptions: () => void\n}\n\nexport default function AccountDetails({\n  toggleWalletModal,\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName,\n  openOptions\n}: AccountDetailsProps) {\n  const { chainId, account, connector } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n  const dispatch = useDispatch<AppDispatch>()\n  const { clearValoraAccount, account: valoraAccount } = useValoraAccount()\n\n  function formatConnectorName() {\n    const { celo } = window\n    const isCEW = !!celo\n    const name =\n      connector instanceof LedgerConnector\n        ? 'Ledger'\n        : Object.keys(SUPPORTED_WALLETS)\n            .filter(\n              k =>\n                SUPPORTED_WALLETS[k].connector === connector &&\n                (connector !== injected || isCEW === (k === 'CELO_EXTENSION_WALLET'))\n            )\n            .map(k => SUPPORTED_WALLETS[k].name)[0]\n    return <WalletName>Connected with {name}</WalletName>\n  }\n\n  function getStatusIcon() {\n    if (connector === injected) {\n      return (\n        <IconWrapper size={16}>\n          <Identicon />\n        </IconWrapper>\n      )\n    }\n    return null\n  }\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <>\n      <UpperSection>\n        <CloseIcon onClick={toggleWalletModal}>\n          <CloseColor />\n        </CloseIcon>\n        <HeaderRow>Account</HeaderRow>\n        <AccountSection>\n          <YourAccount>\n            <InfoCard>\n              <AccountGroupingRow>\n                {formatConnectorName()}\n                <div>\n                  {connector !== injected && (\n                    <WalletAction\n                      style={{ fontSize: '.825rem', fontWeight: 400, marginRight: '8px' }}\n                      onClick={() => {\n                        ;(connector as any).close()\n                        clearValoraAccount()\n                      }}\n                    >\n                      Disconnect\n                    </WalletAction>\n                  )}\n                  <WalletAction\n                    style={{ fontSize: '.825rem', fontWeight: 400 }}\n                    onClick={() => {\n                      openOptions()\n                    }}\n                  >\n                    Change\n                  </WalletAction>\n                </div>\n              </AccountGroupingRow>\n              <AccountGroupingRow id=\"web3-account-identifier-row\">\n                <AccountControl>\n                  {ENSName ? (\n                    <>\n                      <div>\n                        {getStatusIcon()}\n                        <p> {ENSName}</p>\n                      </div>\n                    </>\n                  ) : connector instanceof ValoraConnector && connector.valoraAccount ? (\n                    <>\n                      <div>\n                        <p> {valoraAccount?.phoneNumber}</p>\n                      </div>\n                    </>\n                  ) : (\n                    <>\n                      <div>\n                        {getStatusIcon()}\n                        <p> {account && shortenAddress(account)}</p>\n                      </div>\n                    </>\n                  )}\n                </AccountControl>\n              </AccountGroupingRow>\n              <AccountGroupingRow>\n                {ENSName ? (\n                  <>\n                    <AccountControl>\n                      <div>\n                        {account && (\n                          <Copy toCopy={account}>\n                            <span style={{ marginLeft: '4px' }}>Copy Address</span>\n                          </Copy>\n                        )}\n                        {chainId && account && (\n                          <AddressLink\n                            hasENS={!!ENSName}\n                            isENS={true}\n                            href={chainId ? getBlockscoutLink(chainId, ENSName, 'address') : ''}\n                          >\n                            <LinkIcon size={16} />\n                            <span style={{ marginLeft: '4px' }}>View on Celo Explorer</span>\n                          </AddressLink>\n                        )}\n                      </div>\n                    </AccountControl>\n                  </>\n                ) : (\n                  <>\n                    <AccountControl>\n                      <div>\n                        {account && (\n                          <Copy toCopy={account}>\n                            <span style={{ marginLeft: '4px' }}>Copy Address</span>\n                          </Copy>\n                        )}\n                        {chainId && account && (\n                          <AddressLink\n                            hasENS={!!ENSName}\n                            isENS={false}\n                            href={getBlockscoutLink(chainId, account, 'address')}\n                          >\n                            <LinkIcon size={16} />\n                            <span style={{ marginLeft: '4px' }}>View on Celo Explorer</span>\n                          </AddressLink>\n                        )}\n                      </div>\n                    </AccountControl>\n                  </>\n                )}\n              </AccountGroupingRow>\n            </InfoCard>\n          </YourAccount>\n        </AccountSection>\n      </UpperSection>\n      {!!pendingTransactions.length || !!confirmedTransactions.length ? (\n        <LowerSection>\n          <AutoRow mb={'1rem'} style={{ justifyContent: 'space-between' }}>\n            <TYPE.body>Recent Transactions</TYPE.body>\n            <LinkStyledButton onClick={clearAllTransactionsCallback}>(clear all)</LinkStyledButton>\n          </AutoRow>\n          {renderTransactions(pendingTransactions)}\n          {renderTransactions(confirmedTransactions)}\n        </LowerSection>\n      ) : (\n        <LowerSection>\n          <TYPE.body color={theme.text1}>Your transactions will appear here...</TYPE.body>\n        </LowerSection>\n      )}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}