{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar signatureUtils_1 = require(\"@celo/base/lib/signatureUtils\");\n\nvar Web3Utils = __importStar(require(\"web3-utils\"));\n\nvar address_1 = require(\"./address\");\n\nvar sign_typed_data_utils_1 = require(\"./sign-typed-data-utils\"); // Exports moved to @celo/base, forwarding them\n// here for backwards compatibility\n\n\nvar signatureUtils_2 = require(\"@celo/base/lib/signatureUtils\");\n\nexports.NativeSigner = signatureUtils_2.NativeSigner;\nexports.POP_SIZE = signatureUtils_2.POP_SIZE;\nexports.serializeSignature = signatureUtils_2.serializeSignature;\n\nvar ethjsutil = require('ethereumjs-util'); // If messages is a hex, the length of it should be the number of bytes\n\n\nfunction messageLength(message) {\n  if (Web3Utils.isHexStrict(message)) {\n    return (message.length - 2) / 2;\n  }\n\n  return message.length;\n} // Ethereum has a special signature format that requires a prefix\n// https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\n\n\nfunction hashMessageWithPrefix(message) {\n  var prefix = '\\x19Ethereum Signed Message:\\n' + messageLength(message);\n  return Web3Utils.soliditySha3(prefix, message);\n}\n\nexports.hashMessageWithPrefix = hashMessageWithPrefix;\n\nfunction hashMessage(message) {\n  return Web3Utils.soliditySha3({\n    type: 'string',\n    value: message\n  });\n}\n\nexports.hashMessage = hashMessage;\n\nfunction addressToPublicKey(signer, signFn) {\n  return __awaiter(this, void 0, void 0, function () {\n    var msg, data, sig, rawsig, prefixedMsg, pubKey, computedAddr;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          msg = Buffer.from('dummy_msg_data');\n          data = '0x' + msg.toString('hex');\n          return [4\n          /*yield*/\n          , signFn(data, signer)];\n\n        case 1:\n          sig = _a.sent();\n          rawsig = ethjsutil.fromRpcSig(sig);\n          prefixedMsg = hashMessageWithPrefix(data);\n          pubKey = ethjsutil.ecrecover(Buffer.from(prefixedMsg.slice(2), 'hex'), rawsig.v, rawsig.r, rawsig.s);\n          computedAddr = ethjsutil.pubToAddress(pubKey).toString('hex');\n\n          if (!address_1.eqAddress(computedAddr, signer)) {\n            throw new Error('computed address !== signer');\n          }\n\n          return [2\n          /*return*/\n          , '0x' + pubKey.toString('hex')];\n      }\n    });\n  });\n}\n\nexports.addressToPublicKey = addressToPublicKey;\n\nfunction LocalSigner(privateKey) {\n  var _this = this;\n\n  return {\n    sign: function (message) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          return [2\n          /*return*/\n          , Promise.resolve(signatureUtils_1.serializeSignature(signMessage(message, privateKey, address_1.privateKeyToAddress(privateKey))))];\n        });\n      });\n    }\n  };\n}\n\nexports.LocalSigner = LocalSigner;\n\nfunction signedMessageToPublicKey(message, v, r, s) {\n  var pubKeyBuf = ethjsutil.ecrecover(Buffer.from(message.slice(2), 'hex'), v, Buffer.from(r.slice(2), 'hex'), Buffer.from(s.slice(2), 'hex'));\n  return '0x' + pubKeyBuf.toString('hex');\n}\n\nexports.signedMessageToPublicKey = signedMessageToPublicKey;\n\nfunction signMessage(message, privateKey, address) {\n  return signMessageWithoutPrefix(hashMessageWithPrefix(message), privateKey, address);\n}\n\nexports.signMessage = signMessage;\n\nfunction signMessageWithoutPrefix(messageHash, privateKey, address) {\n  var publicKey = ethjsutil.privateToPublic(ethjsutil.toBuffer(privateKey));\n  var derivedAddress = ethjsutil.bufferToHex(ethjsutil.pubToAddress(publicKey));\n\n  if (derivedAddress.toLowerCase() !== address.toLowerCase()) {\n    throw new Error('Provided private key does not match address of intended signer');\n  }\n\n  var _a = ethjsutil.ecsign(ethjsutil.toBuffer(messageHash), ethjsutil.toBuffer(privateKey)),\n      r = _a.r,\n      s = _a.s,\n      v = _a.v;\n\n  if (!isValidSignature(address, messageHash, v, ethjsutil.bufferToHex(r), ethjsutil.bufferToHex(s))) {\n    throw new Error('Unable to validate signature');\n  }\n\n  return {\n    v: v,\n    r: ethjsutil.bufferToHex(r),\n    s: ethjsutil.bufferToHex(s)\n  };\n}\n\nexports.signMessageWithoutPrefix = signMessageWithoutPrefix;\n\nfunction verifySignature(message, signature, signer) {\n  try {\n    parseSignature(message, signature, signer);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nexports.verifySignature = verifySignature;\n\nfunction parseSignature(message, signature, signer) {\n  return parseSignatureWithoutPrefix(hashMessageWithPrefix(message), signature, signer);\n}\n\nexports.parseSignature = parseSignature;\n\nfunction parseSignatureWithoutPrefix(messageHash, signature, signer) {\n  var _a;\n\n  var _b = parseSignatureAsRsv(signature.slice(2)),\n      r = _b.r,\n      s = _b.s,\n      v = _b.v;\n\n  if (isValidSignature(signer, messageHash, v, r, s)) {\n    return {\n      v: v,\n      r: r,\n      s: s\n    };\n  }\n\n  ;\n  _a = parseSignatureAsVrs(signature.slice(2)), r = _a.r, s = _a.s, v = _a.v;\n\n  if (isValidSignature(signer, messageHash, v, r, s)) {\n    return {\n      v: v,\n      r: r,\n      s: s\n    };\n  }\n\n  throw new Error(\"Unable to parse signature (expected signer \" + signer + \")\");\n}\n\nexports.parseSignatureWithoutPrefix = parseSignatureWithoutPrefix;\n\nfunction recoverEIP712TypedDataSigner(typedData, signature) {\n  var dataBuff = sign_typed_data_utils_1.generateTypedDataHash(typedData);\n\n  for (var _i = 0, _a = [parseSignatureAsRsv, parseSignatureAsVrs]; _i < _a.length; _i++) {\n    var parse = _a[_i];\n\n    try {\n      var _b = parse(signature.slice(2)),\n          r = _b.r,\n          s = _b.s,\n          v = _b.v;\n\n      var publicKey = ethjsutil.ecrecover(ethjsutil.toBuffer(dataBuff), v, ethjsutil.toBuffer(r), ethjsutil.toBuffer(s));\n      return ethjsutil.bufferToHex(ethjsutil.pubToAddress(publicKey));\n    } catch (e) {// try both serialization formats before throwing\n    }\n  }\n\n  throw new Error('Unable to recover signature');\n}\n\nexports.recoverEIP712TypedDataSigner = recoverEIP712TypedDataSigner;\n\nfunction verifyEIP712TypedDataSigner(typedData, signature, signer) {\n  var recoveredSigner = recoverEIP712TypedDataSigner(typedData, signature);\n  return address_1.eqAddress(signer, recoveredSigner);\n}\n\nexports.verifyEIP712TypedDataSigner = verifyEIP712TypedDataSigner;\n\nfunction guessSigner(message, signature) {\n  var messageHash = hashMessageWithPrefix(message);\n\n  var _a = parseSignatureAsRsv(signature.slice(2)),\n      r = _a.r,\n      s = _a.s,\n      v = _a.v;\n\n  var publicKey = ethjsutil.ecrecover(ethjsutil.toBuffer(messageHash), v, ethjsutil.toBuffer(r), ethjsutil.toBuffer(s));\n  return ethjsutil.bufferToHex(ethjsutil.pubToAddress(publicKey));\n}\n\nexports.guessSigner = guessSigner;\n\nfunction parseSignatureAsVrs(signature) {\n  var v = parseInt(signature.slice(0, 2), 16);\n  var r = \"0x\" + signature.slice(2, 66);\n  var s = \"0x\" + signature.slice(66, 130);\n\n  if (v < 27) {\n    v += 27;\n  }\n\n  return {\n    v: v,\n    r: r,\n    s: s\n  };\n}\n\nfunction parseSignatureAsRsv(signature) {\n  var r = \"0x\" + signature.slice(0, 64);\n  var s = \"0x\" + signature.slice(64, 128);\n  var v = parseInt(signature.slice(128, 130), 16);\n\n  if (v < 27) {\n    v += 27;\n  }\n\n  return {\n    r: r,\n    s: s,\n    v: v\n  };\n}\n\nfunction isValidSignature(signer, message, v, r, s) {\n  try {\n    var publicKey = ethjsutil.ecrecover(ethjsutil.toBuffer(message), v, ethjsutil.toBuffer(r), ethjsutil.toBuffer(s));\n    var retrievedAddress = ethjsutil.bufferToHex(ethjsutil.pubToAddress(publicKey));\n    return address_1.eqAddress(retrievedAddress, signer);\n  } catch (err) {\n    return false;\n  }\n}\n\nexports.SignatureUtils = {\n  NativeSigner: signatureUtils_1.NativeSigner,\n  LocalSigner: LocalSigner,\n  signMessage: signMessage,\n  signMessageWithoutPrefix: signMessageWithoutPrefix,\n  parseSignature: parseSignature,\n  parseSignatureWithoutPrefix: parseSignatureWithoutPrefix,\n  serializeSignature: signatureUtils_1.serializeSignature,\n  recoverEIP712TypedDataSigner: recoverEIP712TypedDataSigner,\n  verifyEIP712TypedDataSigner: verifyEIP712TypedDataSigner\n};","map":{"version":3,"sources":["../src/signatureUtils.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,gBAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AACA,IAAA,SAAA,GAAA,YAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,uBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA,C,CAEA;AACA;;;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,+BAAA,CAAA;;AACE,OAAA,CAAA,YAAA,GAAA,gBAAA,CAAA,YAAA;AACA,OAAA,CAAA,QAAA,GAAA,gBAAA,CAAA,QAAA;AACA,OAAA,CAAA,kBAAA,GAAA,gBAAA,CAAA,kBAAA;;AAIF,IAAM,SAAS,GAAG,OAAO,CAAC,iBAAD,CAAzB,C,CAEA;;;AACA,SAAS,aAAT,CAAuB,OAAvB,EAAsC;AACpC,MAAI,SAAS,CAAC,WAAV,CAAsB,OAAtB,CAAJ,EAAoC;AAClC,WAAO,CAAC,OAAO,CAAC,MAAR,GAAiB,CAAlB,IAAuB,CAA9B;AACD;;AACD,SAAO,OAAO,CAAC,MAAf;AACD,C,CACD;AACA;;;AACA,SAAgB,qBAAhB,CAAsC,OAAtC,EAAqD;AACnD,MAAM,MAAM,GAAG,mCAAmC,aAAa,CAAC,OAAD,CAA/D;AACA,SAAO,SAAS,CAAC,YAAV,CAAuB,MAAvB,EAA+B,OAA/B,CAAP;AACD;;AAHD,OAAA,CAAA,qBAAA,GAAA,qBAAA;;AAKA,SAAgB,WAAhB,CAA4B,OAA5B,EAA2C;AACzC,SAAO,SAAS,CAAC,YAAV,CAAuB;AAAE,IAAA,IAAI,EAAE,QAAR;AAAkB,IAAA,KAAK,EAAE;AAAzB,GAAvB,CAAP;AACD;;AAFD,OAAA,CAAA,WAAA,GAAA,WAAA;;AAIA,SAAsB,kBAAtB,CACE,MADF,EAEE,MAFF,EAE8D;;;;;;AAEtD,UAAA,GAAG,GAAG,MAAM,CAAC,IAAP,CAAY,gBAAZ,CAAN;AACA,UAAA,IAAI,GAAG,OAAO,GAAG,CAAC,QAAJ,CAAa,KAAb,CAAd;AAEM,iBAAA,CAAA;AAAA;AAAA,YAAM,MAAM,CAAC,IAAD,EAAO,MAAP,CAAZ,CAAA;;;AAAN,UAAA,GAAG,GAAG,EAAA,CAAA,IAAA,EAAN;AAEA,UAAA,MAAM,GAAG,SAAS,CAAC,UAAV,CAAqB,GAArB,CAAT;AACA,UAAA,WAAW,GAAG,qBAAqB,CAAC,IAAD,CAAnC;AACA,UAAA,MAAM,GAAG,SAAS,CAAC,SAAV,CACb,MAAM,CAAC,IAAP,CAAY,WAAW,CAAC,KAAZ,CAAkB,CAAlB,CAAZ,EAAkC,KAAlC,CADa,EAEb,MAAM,CAAC,CAFM,EAGb,MAAM,CAAC,CAHM,EAIb,MAAM,CAAC,CAJM,CAAT;AAOA,UAAA,YAAY,GAAG,SAAS,CAAC,YAAV,CAAuB,MAAvB,EAA+B,QAA/B,CAAwC,KAAxC,CAAf;;AACN,cAAI,CAAC,SAAA,CAAA,SAAA,CAAU,YAAV,EAAwB,MAAxB,CAAL,EAAsC;AACpC,kBAAM,IAAI,KAAJ,CAAU,6BAAV,CAAN;AACD;;AAED,iBAAA,CAAA;AAAA;AAAA,YAAO,OAAO,MAAM,CAAC,QAAP,CAAgB,KAAhB,CAAd,CAAA;;;;AACD;;AAxBD,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AA0BA,SAAgB,WAAhB,CAA4B,UAA5B,EAA8C;AAA9C,MAAA,KAAA,GAAA,IAAA;;AACE,SAAO;AACL,IAAA,IAAI,EAAE,UAAO,OAAP,EAAsB;AAAA,aAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;AAC1B,iBAAA,CAAA;AAAA;AAAA,YAAA,OAAO,CAAC,OAAR,CACE,gBAAA,CAAA,kBAAA,CAAmB,WAAW,CAAC,OAAD,EAAU,UAAV,EAAsB,SAAA,CAAA,mBAAA,CAAoB,UAApB,CAAtB,CAA9B,CADF,CAAA,CAAA;;OAD0B,CAAA;AAGzB;AAJE,GAAP;AAMD;;AAPD,OAAA,CAAA,WAAA,GAAA,WAAA;;AASA,SAAgB,wBAAhB,CAAyC,OAAzC,EAA0D,CAA1D,EAAqE,CAArE,EAAgF,CAAhF,EAAyF;AACvF,MAAM,SAAS,GAAG,SAAS,CAAC,SAAV,CAChB,MAAM,CAAC,IAAP,CAAY,OAAO,CAAC,KAAR,CAAc,CAAd,CAAZ,EAA8B,KAA9B,CADgB,EAEhB,CAFgB,EAGhB,MAAM,CAAC,IAAP,CAAY,CAAC,CAAC,KAAF,CAAQ,CAAR,CAAZ,EAAwB,KAAxB,CAHgB,EAIhB,MAAM,CAAC,IAAP,CAAY,CAAC,CAAC,KAAF,CAAQ,CAAR,CAAZ,EAAwB,KAAxB,CAJgB,CAAlB;AAMA,SAAO,OAAO,SAAS,CAAC,QAAV,CAAmB,KAAnB,CAAd;AACD;;AARD,OAAA,CAAA,wBAAA,GAAA,wBAAA;;AAUA,SAAgB,WAAhB,CAA4B,OAA5B,EAA6C,UAA7C,EAAiE,OAAjE,EAAgF;AAC9E,SAAO,wBAAwB,CAAC,qBAAqB,CAAC,OAAD,CAAtB,EAAiC,UAAjC,EAA6C,OAA7C,CAA/B;AACD;;AAFD,OAAA,CAAA,WAAA,GAAA,WAAA;;AAIA,SAAgB,wBAAhB,CAAyC,WAAzC,EAA8D,UAA9D,EAAkF,OAAlF,EAAiG;AAC/F,MAAM,SAAS,GAAG,SAAS,CAAC,eAAV,CAA0B,SAAS,CAAC,QAAV,CAAmB,UAAnB,CAA1B,CAAlB;AACA,MAAM,cAAc,GAAW,SAAS,CAAC,WAAV,CAAsB,SAAS,CAAC,YAAV,CAAuB,SAAvB,CAAtB,CAA/B;;AACA,MAAI,cAAc,CAAC,WAAf,OAAiC,OAAO,CAAC,WAAR,EAArC,EAA4D;AAC1D,UAAM,IAAI,KAAJ,CAAU,gEAAV,CAAN;AACD;;AACK,MAAA,EAAA,GAAA,SAAA,CAAA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA,WAAA,CAAA,EAAA,SAAA,CAAA,QAAA,CAAA,UAAA,CAAA,CAAA;AAAA,MAAE,CAAA,GAAA,EAAA,CAAA,CAAF;AAAA,MAAK,CAAA,GAAA,EAAA,CAAA,CAAL;AAAA,MAAQ,CAAA,GAAA,EAAA,CAAA,CAAR;;AAIN,MACE,CAAC,gBAAgB,CAAC,OAAD,EAAU,WAAV,EAAuB,CAAvB,EAA0B,SAAS,CAAC,WAAV,CAAsB,CAAtB,CAA1B,EAAoD,SAAS,CAAC,WAAV,CAAsB,CAAtB,CAApD,CADnB,EAEE;AACA,UAAM,IAAI,KAAJ,CAAU,8BAAV,CAAN;AACD;;AACD,SAAO;AAAE,IAAA,CAAC,EAAA,CAAH;AAAK,IAAA,CAAC,EAAE,SAAS,CAAC,WAAV,CAAsB,CAAtB,CAAR;AAAkC,IAAA,CAAC,EAAE,SAAS,CAAC,WAAV,CAAsB,CAAtB;AAArC,GAAP;AACD;;AAhBD,OAAA,CAAA,wBAAA,GAAA,wBAAA;;AAkBA,SAAgB,eAAhB,CAAgC,OAAhC,EAAiD,SAAjD,EAAoE,MAApE,EAAkF;AAChF,MAAI;AACF,IAAA,cAAc,CAAC,OAAD,EAAU,SAAV,EAAqB,MAArB,CAAd;AACA,WAAO,IAAP;AACD,GAHD,CAGE,OAAO,KAAP,EAAc;AACd,WAAO,KAAP;AACD;AACF;;AAPD,OAAA,CAAA,eAAA,GAAA,eAAA;;AASA,SAAgB,cAAhB,CAA+B,OAA/B,EAAgD,SAAhD,EAAmE,MAAnE,EAAiF;AAC/E,SAAO,2BAA2B,CAAC,qBAAqB,CAAC,OAAD,CAAtB,EAAiC,SAAjC,EAA4C,MAA5C,CAAlC;AACD;;AAFD,OAAA,CAAA,cAAA,GAAA,cAAA;;AAIA,SAAgB,2BAAhB,CACE,WADF,EAEE,SAFF,EAGE,MAHF,EAGgB;;;AAEV,MAAA,EAAA,GAAA,mBAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AAAA,MAAE,CAAA,GAAA,EAAA,CAAA,CAAF;AAAA,MAAK,CAAA,GAAA,EAAA,CAAA,CAAL;AAAA,MAAQ,CAAA,GAAA,EAAA,CAAA,CAAR;;AACJ,MAAI,gBAAgB,CAAC,MAAD,EAAS,WAAT,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAApB,EAAoD;AAClD,WAAO;AAAE,MAAA,CAAC,EAAA,CAAH;AAAK,MAAA,CAAC,EAAA,CAAN;AAAQ,MAAA,CAAC,EAAA;AAAT,KAAP;AACD;;AAED;AAAE,EAAA,EAAA,GAAA,mBAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,EAAE,CAAA,GAAA,EAAA,CAAA,CAAF,EAAK,CAAA,GAAA,EAAA,CAAA,CAAL,EAAQ,CAAA,GAAA,EAAA,CAAA,CAAT;;AACD,MAAI,gBAAgB,CAAC,MAAD,EAAS,WAAT,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAApB,EAAoD;AAClD,WAAO;AAAE,MAAA,CAAC,EAAA,CAAH;AAAK,MAAA,CAAC,EAAA,CAAN;AAAQ,MAAA,CAAC,EAAA;AAAT,KAAP;AACD;;AAED,QAAM,IAAI,KAAJ,CAAU,gDAA8C,MAA9C,GAAoD,GAA9D,CAAN;AACD;;AAhBD,OAAA,CAAA,2BAAA,GAAA,2BAAA;;AAkBA,SAAgB,4BAAhB,CACE,SADF,EAEE,SAFF,EAEmB;AAEjB,MAAM,QAAQ,GAAG,uBAAA,CAAA,qBAAA,CAAsB,SAAtB,CAAjB;;AAEA,OAAoB,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CAAC,mBAAD,EAAsB,mBAAtB,CAApB,EAAoB,EAAA,GAAA,EAAA,CAAA,MAApB,EAAoB,EAAA,EAApB,EAAgE;AAA3D,QAAM,KAAK,GAAA,EAAA,CAAA,EAAA,CAAX;;AACH,QAAI;AACI,UAAA,EAAA,GAAA,KAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AAAA,UAAE,CAAA,GAAA,EAAA,CAAA,CAAF;AAAA,UAAK,CAAA,GAAA,EAAA,CAAA,CAAL;AAAA,UAAQ,CAAA,GAAA,EAAA,CAAA,CAAR;;AACN,UAAM,SAAS,GAAG,SAAS,CAAC,SAAV,CAChB,SAAS,CAAC,QAAV,CAAmB,QAAnB,CADgB,EAEhB,CAFgB,EAGhB,SAAS,CAAC,QAAV,CAAmB,CAAnB,CAHgB,EAIhB,SAAS,CAAC,QAAV,CAAmB,CAAnB,CAJgB,CAAlB;AAMA,aAAO,SAAS,CAAC,WAAV,CAAsB,SAAS,CAAC,YAAV,CAAuB,SAAvB,CAAtB,CAAP;AACD,KATD,CASE,OAAO,CAAP,EAAU,CACV;AACD;AACF;;AAED,QAAM,IAAI,KAAJ,CAAU,6BAAV,CAAN;AACD;;AAtBD,OAAA,CAAA,4BAAA,GAAA,4BAAA;;AAwBA,SAAgB,2BAAhB,CACE,SADF,EAEE,SAFF,EAGE,MAHF,EAGgB;AAEd,MAAM,eAAe,GAAG,4BAA4B,CAAC,SAAD,EAAY,SAAZ,CAApD;AACA,SAAO,SAAA,CAAA,SAAA,CAAU,MAAV,EAAkB,eAAlB,CAAP;AACD;;AAPD,OAAA,CAAA,2BAAA,GAAA,2BAAA;;AASA,SAAgB,WAAhB,CAA4B,OAA5B,EAA6C,SAA7C,EAA8D;AAC5D,MAAM,WAAW,GAAG,qBAAqB,CAAC,OAAD,CAAzC;;AACM,MAAA,EAAA,GAAA,mBAAA,CAAA,SAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AAAA,MAAE,CAAA,GAAA,EAAA,CAAA,CAAF;AAAA,MAAK,CAAA,GAAA,EAAA,CAAA,CAAL;AAAA,MAAQ,CAAA,GAAA,EAAA,CAAA,CAAR;;AACN,MAAM,SAAS,GAAG,SAAS,CAAC,SAAV,CAChB,SAAS,CAAC,QAAV,CAAmB,WAAnB,CADgB,EAEhB,CAFgB,EAGhB,SAAS,CAAC,QAAV,CAAmB,CAAnB,CAHgB,EAIhB,SAAS,CAAC,QAAV,CAAmB,CAAnB,CAJgB,CAAlB;AAMA,SAAO,SAAS,CAAC,WAAV,CAAsB,SAAS,CAAC,YAAV,CAAuB,SAAvB,CAAtB,CAAP;AACD;;AAVD,OAAA,CAAA,WAAA,GAAA,WAAA;;AAYA,SAAS,mBAAT,CAA6B,SAA7B,EAA8C;AAC5C,MAAI,CAAC,GAAW,QAAQ,CAAC,SAAS,CAAC,KAAV,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,EAAwB,EAAxB,CAAxB;AACA,MAAM,CAAC,GAAW,OAAK,SAAS,CAAC,KAAV,CAAgB,CAAhB,EAAmB,EAAnB,CAAvB;AACA,MAAM,CAAC,GAAW,OAAK,SAAS,CAAC,KAAV,CAAgB,EAAhB,EAAoB,GAApB,CAAvB;;AACA,MAAI,CAAC,GAAG,EAAR,EAAY;AACV,IAAA,CAAC,IAAI,EAAL;AACD;;AACD,SAAO;AAAE,IAAA,CAAC,EAAA,CAAH;AAAK,IAAA,CAAC,EAAA,CAAN;AAAQ,IAAA,CAAC,EAAA;AAAT,GAAP;AACD;;AAED,SAAS,mBAAT,CAA6B,SAA7B,EAA8C;AAC5C,MAAM,CAAC,GAAW,OAAK,SAAS,CAAC,KAAV,CAAgB,CAAhB,EAAmB,EAAnB,CAAvB;AACA,MAAM,CAAC,GAAW,OAAK,SAAS,CAAC,KAAV,CAAgB,EAAhB,EAAoB,GAApB,CAAvB;AACA,MAAI,CAAC,GAAW,QAAQ,CAAC,SAAS,CAAC,KAAV,CAAgB,GAAhB,EAAqB,GAArB,CAAD,EAA4B,EAA5B,CAAxB;;AACA,MAAI,CAAC,GAAG,EAAR,EAAY;AACV,IAAA,CAAC,IAAI,EAAL;AACD;;AACD,SAAO;AAAE,IAAA,CAAC,EAAA,CAAH;AAAK,IAAA,CAAC,EAAA,CAAN;AAAQ,IAAA,CAAC,EAAA;AAAT,GAAP;AACD;;AAED,SAAS,gBAAT,CAA0B,MAA1B,EAA0C,OAA1C,EAA2D,CAA3D,EAAsE,CAAtE,EAAiF,CAAjF,EAA0F;AACxF,MAAI;AACF,QAAM,SAAS,GAAG,SAAS,CAAC,SAAV,CAChB,SAAS,CAAC,QAAV,CAAmB,OAAnB,CADgB,EAEhB,CAFgB,EAGhB,SAAS,CAAC,QAAV,CAAmB,CAAnB,CAHgB,EAIhB,SAAS,CAAC,QAAV,CAAmB,CAAnB,CAJgB,CAAlB;AAMA,QAAM,gBAAgB,GAAW,SAAS,CAAC,WAAV,CAAsB,SAAS,CAAC,YAAV,CAAuB,SAAvB,CAAtB,CAAjC;AACA,WAAO,SAAA,CAAA,SAAA,CAAU,gBAAV,EAA4B,MAA5B,CAAP;AACD,GATD,CASE,OAAO,GAAP,EAAY;AACZ,WAAO,KAAP;AACD;AACF;;AAEY,OAAA,CAAA,cAAA,GAAiB;AAC5B,EAAA,YAAY,EAAA,gBAAA,CAAA,YADgB;AAE5B,EAAA,WAAW,EAAA,WAFiB;AAG5B,EAAA,WAAW,EAAA,WAHiB;AAI5B,EAAA,wBAAwB,EAAA,wBAJI;AAK5B,EAAA,cAAc,EAAA,cALc;AAM5B,EAAA,2BAA2B,EAAA,2BANC;AAO5B,EAAA,kBAAkB,EAAA,gBAAA,CAAA,kBAPU;AAQ5B,EAAA,4BAA4B,EAAA,4BARA;AAS5B,EAAA,2BAA2B,EAAA;AATC,CAAjB","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar signatureUtils_1 = require(\"@celo/base/lib/signatureUtils\");\nvar Web3Utils = __importStar(require(\"web3-utils\"));\nvar address_1 = require(\"./address\");\nvar sign_typed_data_utils_1 = require(\"./sign-typed-data-utils\");\n// Exports moved to @celo/base, forwarding them\n// here for backwards compatibility\nvar signatureUtils_2 = require(\"@celo/base/lib/signatureUtils\");\nexports.NativeSigner = signatureUtils_2.NativeSigner;\nexports.POP_SIZE = signatureUtils_2.POP_SIZE;\nexports.serializeSignature = signatureUtils_2.serializeSignature;\nvar ethjsutil = require('ethereumjs-util');\n// If messages is a hex, the length of it should be the number of bytes\nfunction messageLength(message) {\n    if (Web3Utils.isHexStrict(message)) {\n        return (message.length - 2) / 2;\n    }\n    return message.length;\n}\n// Ethereum has a special signature format that requires a prefix\n// https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign\nfunction hashMessageWithPrefix(message) {\n    var prefix = '\\x19Ethereum Signed Message:\\n' + messageLength(message);\n    return Web3Utils.soliditySha3(prefix, message);\n}\nexports.hashMessageWithPrefix = hashMessageWithPrefix;\nfunction hashMessage(message) {\n    return Web3Utils.soliditySha3({ type: 'string', value: message });\n}\nexports.hashMessage = hashMessage;\nfunction addressToPublicKey(signer, signFn) {\n    return __awaiter(this, void 0, void 0, function () {\n        var msg, data, sig, rawsig, prefixedMsg, pubKey, computedAddr;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    msg = Buffer.from('dummy_msg_data');\n                    data = '0x' + msg.toString('hex');\n                    return [4 /*yield*/, signFn(data, signer)];\n                case 1:\n                    sig = _a.sent();\n                    rawsig = ethjsutil.fromRpcSig(sig);\n                    prefixedMsg = hashMessageWithPrefix(data);\n                    pubKey = ethjsutil.ecrecover(Buffer.from(prefixedMsg.slice(2), 'hex'), rawsig.v, rawsig.r, rawsig.s);\n                    computedAddr = ethjsutil.pubToAddress(pubKey).toString('hex');\n                    if (!address_1.eqAddress(computedAddr, signer)) {\n                        throw new Error('computed address !== signer');\n                    }\n                    return [2 /*return*/, '0x' + pubKey.toString('hex')];\n            }\n        });\n    });\n}\nexports.addressToPublicKey = addressToPublicKey;\nfunction LocalSigner(privateKey) {\n    var _this = this;\n    return {\n        sign: function (message) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Promise.resolve(signatureUtils_1.serializeSignature(signMessage(message, privateKey, address_1.privateKeyToAddress(privateKey))))];\n            });\n        }); },\n    };\n}\nexports.LocalSigner = LocalSigner;\nfunction signedMessageToPublicKey(message, v, r, s) {\n    var pubKeyBuf = ethjsutil.ecrecover(Buffer.from(message.slice(2), 'hex'), v, Buffer.from(r.slice(2), 'hex'), Buffer.from(s.slice(2), 'hex'));\n    return '0x' + pubKeyBuf.toString('hex');\n}\nexports.signedMessageToPublicKey = signedMessageToPublicKey;\nfunction signMessage(message, privateKey, address) {\n    return signMessageWithoutPrefix(hashMessageWithPrefix(message), privateKey, address);\n}\nexports.signMessage = signMessage;\nfunction signMessageWithoutPrefix(messageHash, privateKey, address) {\n    var publicKey = ethjsutil.privateToPublic(ethjsutil.toBuffer(privateKey));\n    var derivedAddress = ethjsutil.bufferToHex(ethjsutil.pubToAddress(publicKey));\n    if (derivedAddress.toLowerCase() !== address.toLowerCase()) {\n        throw new Error('Provided private key does not match address of intended signer');\n    }\n    var _a = ethjsutil.ecsign(ethjsutil.toBuffer(messageHash), ethjsutil.toBuffer(privateKey)), r = _a.r, s = _a.s, v = _a.v;\n    if (!isValidSignature(address, messageHash, v, ethjsutil.bufferToHex(r), ethjsutil.bufferToHex(s))) {\n        throw new Error('Unable to validate signature');\n    }\n    return { v: v, r: ethjsutil.bufferToHex(r), s: ethjsutil.bufferToHex(s) };\n}\nexports.signMessageWithoutPrefix = signMessageWithoutPrefix;\nfunction verifySignature(message, signature, signer) {\n    try {\n        parseSignature(message, signature, signer);\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\nexports.verifySignature = verifySignature;\nfunction parseSignature(message, signature, signer) {\n    return parseSignatureWithoutPrefix(hashMessageWithPrefix(message), signature, signer);\n}\nexports.parseSignature = parseSignature;\nfunction parseSignatureWithoutPrefix(messageHash, signature, signer) {\n    var _a;\n    var _b = parseSignatureAsRsv(signature.slice(2)), r = _b.r, s = _b.s, v = _b.v;\n    if (isValidSignature(signer, messageHash, v, r, s)) {\n        return { v: v, r: r, s: s };\n    }\n    ;\n    (_a = parseSignatureAsVrs(signature.slice(2)), r = _a.r, s = _a.s, v = _a.v);\n    if (isValidSignature(signer, messageHash, v, r, s)) {\n        return { v: v, r: r, s: s };\n    }\n    throw new Error(\"Unable to parse signature (expected signer \" + signer + \")\");\n}\nexports.parseSignatureWithoutPrefix = parseSignatureWithoutPrefix;\nfunction recoverEIP712TypedDataSigner(typedData, signature) {\n    var dataBuff = sign_typed_data_utils_1.generateTypedDataHash(typedData);\n    for (var _i = 0, _a = [parseSignatureAsRsv, parseSignatureAsVrs]; _i < _a.length; _i++) {\n        var parse = _a[_i];\n        try {\n            var _b = parse(signature.slice(2)), r = _b.r, s = _b.s, v = _b.v;\n            var publicKey = ethjsutil.ecrecover(ethjsutil.toBuffer(dataBuff), v, ethjsutil.toBuffer(r), ethjsutil.toBuffer(s));\n            return ethjsutil.bufferToHex(ethjsutil.pubToAddress(publicKey));\n        }\n        catch (e) {\n            // try both serialization formats before throwing\n        }\n    }\n    throw new Error('Unable to recover signature');\n}\nexports.recoverEIP712TypedDataSigner = recoverEIP712TypedDataSigner;\nfunction verifyEIP712TypedDataSigner(typedData, signature, signer) {\n    var recoveredSigner = recoverEIP712TypedDataSigner(typedData, signature);\n    return address_1.eqAddress(signer, recoveredSigner);\n}\nexports.verifyEIP712TypedDataSigner = verifyEIP712TypedDataSigner;\nfunction guessSigner(message, signature) {\n    var messageHash = hashMessageWithPrefix(message);\n    var _a = parseSignatureAsRsv(signature.slice(2)), r = _a.r, s = _a.s, v = _a.v;\n    var publicKey = ethjsutil.ecrecover(ethjsutil.toBuffer(messageHash), v, ethjsutil.toBuffer(r), ethjsutil.toBuffer(s));\n    return ethjsutil.bufferToHex(ethjsutil.pubToAddress(publicKey));\n}\nexports.guessSigner = guessSigner;\nfunction parseSignatureAsVrs(signature) {\n    var v = parseInt(signature.slice(0, 2), 16);\n    var r = \"0x\" + signature.slice(2, 66);\n    var s = \"0x\" + signature.slice(66, 130);\n    if (v < 27) {\n        v += 27;\n    }\n    return { v: v, r: r, s: s };\n}\nfunction parseSignatureAsRsv(signature) {\n    var r = \"0x\" + signature.slice(0, 64);\n    var s = \"0x\" + signature.slice(64, 128);\n    var v = parseInt(signature.slice(128, 130), 16);\n    if (v < 27) {\n        v += 27;\n    }\n    return { r: r, s: s, v: v };\n}\nfunction isValidSignature(signer, message, v, r, s) {\n    try {\n        var publicKey = ethjsutil.ecrecover(ethjsutil.toBuffer(message), v, ethjsutil.toBuffer(r), ethjsutil.toBuffer(s));\n        var retrievedAddress = ethjsutil.bufferToHex(ethjsutil.pubToAddress(publicKey));\n        return address_1.eqAddress(retrievedAddress, signer);\n    }\n    catch (err) {\n        return false;\n    }\n}\nexports.SignatureUtils = {\n    NativeSigner: signatureUtils_1.NativeSigner,\n    LocalSigner: LocalSigner,\n    signMessage: signMessage,\n    signMessageWithoutPrefix: signMessageWithoutPrefix,\n    parseSignature: parseSignature,\n    parseSignatureWithoutPrefix: parseSignatureWithoutPrefix,\n    serializeSignature: signatureUtils_1.serializeSignature,\n    recoverEIP712TypedDataSigner: recoverEIP712TypedDataSigner,\n    verifyEIP712TypedDataSigner: verifyEIP712TypedDataSigner,\n};\n//# sourceMappingURL=signatureUtils.js.map"]},"metadata":{},"sourceType":"script"}