{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nrequire(\"bignumber.js\");\n\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\n/**\n * ERC-20 contract for Celo native currency.\n */\n\n\nvar GoldTokenWrapper =\n/** @class */\nfunction (_super) {\n  __extends(GoldTokenWrapper, _super);\n\n  function GoldTokenWrapper() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * Querying allowance.\n     * @param from Account who has given the allowance.\n     * @param to Address of account to whom the allowance was given.\n     * @returns Amount of allowance.\n     */\n\n\n    _this.allowance = BaseWrapper_1.proxyCall(_this.contract.methods.allowance, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Returns the name of the token.\n     * @returns Name of the token.\n     */\n\n    _this.name = BaseWrapper_1.proxyCall(_this.contract.methods.name, undefined, function (a) {\n      return a.toString();\n    });\n    /**\n     * Returns the three letter symbol of the token.\n     * @returns Symbol of the token.\n     */\n\n    _this.symbol = BaseWrapper_1.proxyCall(_this.contract.methods.symbol, undefined, function (a) {\n      return a.toString();\n    });\n    /**\n     * Returns the number of decimals used in the token.\n     * @returns Number of decimals.\n     */\n\n    _this.decimals = BaseWrapper_1.proxyCall(_this.contract.methods.decimals, undefined, BaseWrapper_1.valueToInt);\n    /**\n     * Returns the total supply of the token, that is, the amount of tokens currently minted.\n     * @returns Total supply.\n     */\n\n    _this.totalSupply = BaseWrapper_1.proxyCall(_this.contract.methods.totalSupply, undefined, BaseWrapper_1.valueToBigNumber);\n    /**\n     * Approve a user to transfer CELO on behalf of another user.\n     * @param spender The address which is being approved to spend CELO.\n     * @param value The amount of CELO approved to the spender.\n     * @return True if the transaction succeeds.\n     */\n\n    _this.approve = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.approve);\n    /**\n     * Increases the allowance of another user.\n     * @param spender The address which is being approved to spend CELO.\n     * @param value The increment of the amount of CELO approved to the spender.\n     * @returns true if success.\n     */\n\n    _this.increaseAllowance = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.increaseAllowance, BaseWrapper_1.tupleParser(BaseWrapper_1.stringIdentity, BaseWrapper_1.valueToString));\n    /**\n     * Decreases the allowance of another user.\n     * @param spender The address which is being approved to spend CELO.\n     * @param value The decrement of the amount of CELO approved to the spender.\n     * @returns true if success.\n     */\n\n    _this.decreaseAllowance = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.decreaseAllowance);\n    /**\n     * Transfers CELO from one address to another with a comment.\n     * @param to The address to transfer CELO to.\n     * @param value The amount of CELO to transfer.\n     * @param comment The transfer comment\n     * @return True if the transaction succeeds.\n     */\n\n    _this.transferWithComment = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.transferWithComment);\n    /**\n     * Transfers CELO from one address to another.\n     * @param to The address to transfer CELO to.\n     * @param value The amount of CELO to transfer.\n     * @return True if the transaction succeeds.\n     */\n\n    _this.transfer = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.transfer);\n    /**\n     * Transfers CELO from one address to another on behalf of a user.\n     * @param from The address to transfer CELO from.\n     * @param to The address to transfer CELO to.\n     * @param value The amount of CELO to transfer.\n     * @return True if the transaction succeeds.\n     */\n\n    _this.transferFrom = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.transferFrom);\n    /**\n     * Gets the balance of the specified address.\n     * @param owner The address to query the balance of.\n     * @return The balance of the specified address.\n     */\n\n    _this.balanceOf = function (account) {\n      return _this.kit.web3.eth.getBalance(account).then(BaseWrapper_1.valueToBigNumber);\n    };\n\n    return _this;\n    /* WARNING: The actual call to the Gold contract of the balanceOf:\n     * `balanceOf = proxyCall(this.contract.methods.balanceOf, undefined, valueToBigNumber)`\n     * has issues with web3. Keep the one calling getBalance\n     */\n  }\n\n  return GoldTokenWrapper;\n}(BaseWrapper_1.BaseWrapper);\n\nexports.GoldTokenWrapper = GoldTokenWrapper;","map":{"version":3,"sources":["../../src/wrappers/GoldTokenWrapper.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"bignumber.js\");\nvar BaseWrapper_1 = require(\"./BaseWrapper\");\n/**\n * ERC-20 contract for Celo native currency.\n */\nvar GoldTokenWrapper = /** @class */ (function (_super) {\n    __extends(GoldTokenWrapper, _super);\n    function GoldTokenWrapper() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Querying allowance.\n         * @param from Account who has given the allowance.\n         * @param to Address of account to whom the allowance was given.\n         * @returns Amount of allowance.\n         */\n        _this.allowance = BaseWrapper_1.proxyCall(_this.contract.methods.allowance, undefined, BaseWrapper_1.valueToBigNumber);\n        /**\n         * Returns the name of the token.\n         * @returns Name of the token.\n         */\n        _this.name = BaseWrapper_1.proxyCall(_this.contract.methods.name, undefined, function (a) { return a.toString(); });\n        /**\n         * Returns the three letter symbol of the token.\n         * @returns Symbol of the token.\n         */\n        _this.symbol = BaseWrapper_1.proxyCall(_this.contract.methods.symbol, undefined, function (a) { return a.toString(); });\n        /**\n         * Returns the number of decimals used in the token.\n         * @returns Number of decimals.\n         */\n        _this.decimals = BaseWrapper_1.proxyCall(_this.contract.methods.decimals, undefined, BaseWrapper_1.valueToInt);\n        /**\n         * Returns the total supply of the token, that is, the amount of tokens currently minted.\n         * @returns Total supply.\n         */\n        _this.totalSupply = BaseWrapper_1.proxyCall(_this.contract.methods.totalSupply, undefined, BaseWrapper_1.valueToBigNumber);\n        /**\n         * Approve a user to transfer CELO on behalf of another user.\n         * @param spender The address which is being approved to spend CELO.\n         * @param value The amount of CELO approved to the spender.\n         * @return True if the transaction succeeds.\n         */\n        _this.approve = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.approve);\n        /**\n         * Increases the allowance of another user.\n         * @param spender The address which is being approved to spend CELO.\n         * @param value The increment of the amount of CELO approved to the spender.\n         * @returns true if success.\n         */\n        _this.increaseAllowance = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.increaseAllowance, BaseWrapper_1.tupleParser(BaseWrapper_1.stringIdentity, BaseWrapper_1.valueToString));\n        /**\n         * Decreases the allowance of another user.\n         * @param spender The address which is being approved to spend CELO.\n         * @param value The decrement of the amount of CELO approved to the spender.\n         * @returns true if success.\n         */\n        _this.decreaseAllowance = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.decreaseAllowance);\n        /**\n         * Transfers CELO from one address to another with a comment.\n         * @param to The address to transfer CELO to.\n         * @param value The amount of CELO to transfer.\n         * @param comment The transfer comment\n         * @return True if the transaction succeeds.\n         */\n        _this.transferWithComment = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.transferWithComment);\n        /**\n         * Transfers CELO from one address to another.\n         * @param to The address to transfer CELO to.\n         * @param value The amount of CELO to transfer.\n         * @return True if the transaction succeeds.\n         */\n        _this.transfer = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.transfer);\n        /**\n         * Transfers CELO from one address to another on behalf of a user.\n         * @param from The address to transfer CELO from.\n         * @param to The address to transfer CELO to.\n         * @param value The amount of CELO to transfer.\n         * @return True if the transaction succeeds.\n         */\n        _this.transferFrom = BaseWrapper_1.proxySend(_this.kit, _this.contract.methods.transferFrom);\n        /**\n         * Gets the balance of the specified address.\n         * @param owner The address to query the balance of.\n         * @return The balance of the specified address.\n         */\n        _this.balanceOf = function (account) { return _this.kit.web3.eth.getBalance(account).then(BaseWrapper_1.valueToBigNumber); };\n        return _this;\n        /* WARNING: The actual call to the Gold contract of the balanceOf:\n         * `balanceOf = proxyCall(this.contract.methods.balanceOf, undefined, valueToBigNumber)`\n         * has issues with web3. Keep the one calling getBalance\n         */\n    }\n    return GoldTokenWrapper;\n}(BaseWrapper_1.BaseWrapper));\nexports.GoldTokenWrapper = GoldTokenWrapper;\n//# sourceMappingURL=GoldTokenWrapper.js.map"]},"metadata":{},"sourceType":"script"}