{"ast":null,"code":"var _jsxFileName = \"/Users/khoiplus/Desktop/celopad/cpadswaptest/src/components/CurrencyLogo/index.tsx\";\nimport { CELO, cUSD, Token } from '@ubeswap/sdk';\nimport { useActiveWeb3React } from 'hooks';\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport useHttpLocations from '../../hooks/useHttpLocations';\nimport { WrappedTokenInfo } from '../../state/lists/hooks';\nimport Logo from '../Logo';\n\nconst getTokenLogoURL = address => `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${address}/logo.png`;\n\nconst StyledLogo = styled(Logo)`\n  width: ${({\n  size\n}) => size};\n  height: ${({\n  size\n}) => size};\n  border-radius: ${({\n  size\n}) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  background-color: ${({\n  theme\n}) => theme.white};\n`;\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style\n}) {\n  var _currency$symbol;\n\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined);\n  const srcs = useMemo(() => {\n    if (currency === cUSD[chainId !== null && chainId !== void 0 ? chainId : 0]) return ['https://raw.githubusercontent.com/ubeswap/token-list/master/assets/asset_cUSD.png'];\n    if (currency === CELO[chainId !== null && chainId !== void 0 ? chainId : 0]) return ['https://raw.githubusercontent.com/ubeswap/token-list/master/assets/asset_cGLD.png'];\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)];\n      }\n\n      return [getTokenLogoURL(currency.address)];\n    }\n\n    return [];\n  }, [currency, uriLocations, chainId]);\n  return /*#__PURE__*/React.createElement(StyledLogo, {\n    size: size,\n    srcs: srcs,\n    alt: `${(_currency$symbol = currency === null || currency === void 0 ? void 0 : currency.symbol) !== null && _currency$symbol !== void 0 ? _currency$symbol : 'token'} logo`,\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["/Users/khoiplus/Desktop/celopad/cpadswaptest/src/components/CurrencyLogo/index.tsx"],"names":["CELO","cUSD","Token","useActiveWeb3React","React","useMemo","styled","useHttpLocations","WrappedTokenInfo","Logo","getTokenLogoURL","address","StyledLogo","size","theme","white","CurrencyLogo","currency","style","chainId","uriLocations","logoURI","undefined","srcs","symbol"],"mappings":";AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,KAArB,QAAkC,cAAlC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,eAAe,GAAIC,OAAD,IACrB,2FAA0FA,OAAQ,WADrG;;AAGA,MAAMC,UAAU,GAAGN,MAAM,CAACG,IAAD,CAAyB;WACvC,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAcA,IAAK;YAClB,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAcA,IAAK;mBACZ,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAcA,IAAK;;sBAEhB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAM;CALjD;AAQA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,QADmC;AAEnCJ,EAAAA,IAAI,GAAG,MAF4B;AAGnCK,EAAAA;AAHmC,CAAtB,EAQZ;AAAA;;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAchB,kBAAkB,EAAtC;AACA,QAAMiB,YAAY,GAAGb,gBAAgB,CAACU,QAAQ,YAAYT,gBAApB,GAAuCS,QAAQ,CAACI,OAAhD,GAA0DC,SAA3D,CAArC;AAEA,QAAMC,IAAc,GAAGlB,OAAO,CAAC,MAAM;AACnC,QAAIY,QAAQ,KAAKhB,IAAI,CAACkB,OAAD,aAACA,OAAD,cAACA,OAAD,GAAY,CAAZ,CAArB,EACE,OAAO,CAAC,mFAAD,CAAP;AACF,QAAIF,QAAQ,KAAKjB,IAAI,CAACmB,OAAD,aAACA,OAAD,cAACA,OAAD,GAAY,CAAZ,CAArB,EACE,OAAO,CAAC,mFAAD,CAAP;;AAEF,QAAIF,QAAQ,YAAYf,KAAxB,EAA+B;AAC7B,UAAIe,QAAQ,YAAYT,gBAAxB,EAA0C;AACxC,eAAO,CAAC,GAAGY,YAAJ,EAAkBV,eAAe,CAACO,QAAQ,CAACN,OAAV,CAAjC,CAAP;AACD;;AAED,aAAO,CAACD,eAAe,CAACO,QAAQ,CAACN,OAAV,CAAhB,CAAP;AACD;;AACD,WAAO,EAAP;AACD,GAd6B,EAc3B,CAACM,QAAD,EAAWG,YAAX,EAAyBD,OAAzB,CAd2B,CAA9B;AAgBA,sBAAO,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAEN,IAAlB;AAAwB,IAAA,IAAI,EAAEU,IAA9B;AAAoC,IAAA,GAAG,EAAG,GAAD,oBAAGN,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEO,MAAb,+DAAuB,OAAQ,OAAxE;AAAgF,IAAA,KAAK,EAAEN,KAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD","sourcesContent":["import { CELO, cUSD, Token } from '@ubeswap/sdk'\nimport { useActiveWeb3React } from 'hooks'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport Logo from '../Logo'\n\nconst getTokenLogoURL = (address: string) =>\n  `https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/${address}/logo.png`\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  border-radius: ${({ size }) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  background-color: ${({ theme }) => theme.white};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style\n}: {\n  currency?: Token\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const { chainId } = useActiveWeb3React()\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === cUSD[chainId ?? 0])\n      return ['https://raw.githubusercontent.com/ubeswap/token-list/master/assets/asset_cUSD.png']\n    if (currency === CELO[chainId ?? 0])\n      return ['https://raw.githubusercontent.com/ubeswap/token-list/master/assets/asset_cGLD.png']\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations, chainId])\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n"]},"metadata":{},"sourceType":"module"}