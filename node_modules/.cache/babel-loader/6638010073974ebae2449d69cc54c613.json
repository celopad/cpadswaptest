{"ast":null,"code":"var _jsxFileName = \"/Users/khoiplus/Desktop/celopad/cpadswaptest/src/components/Web3Status/index.tsx\";\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core';\nimport { ValoraConnector } from 'connectors/valora/ValoraConnector';\nimport useAccountSummary from 'hooks/useAccountSummary';\nimport { darken, lighten } from 'polished';\nimport React, { useMemo } from 'react';\nimport { Activity } from 'react-feather';\nimport { useTranslation } from 'react-i18next';\nimport styled, { css } from 'styled-components';\nimport { injected } from '../../connectors';\nimport { NetworkContextName } from '../../constants';\nimport { useWalletModalToggle } from '../../state/application/hooks';\nimport { isTransactionRecent, useAllTransactions } from '../../state/transactions/hooks';\nimport { shortenAddress } from '../../utils';\nimport { ButtonSecondary } from '../Button';\nimport Identicon from '../Identicon';\nimport Loader from '../Loader';\nimport { RowBetween } from '../Row';\nimport WalletModal from '../WalletModal';\nconst Web3StatusGeneric = styled(ButtonSecondary)`\n  ${({\n  theme\n}) => theme.flexRowNoWrap}\n  width: 100%;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 12px;\n  cursor: pointer;\n  user-select: none;\n  :focus {\n    outline: none;\n  }\n`;\nconst Web3StatusError = styled(Web3StatusGeneric)`\n  background-color: ${({\n  theme\n}) => theme.red1};\n  border: 1px solid ${({\n  theme\n}) => theme.red1};\n  color: ${({\n  theme\n}) => theme.white};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({\n  theme\n}) => darken(0.1, theme.red1)};\n  }\n`;\nconst Web3StatusConnect = styled(Web3StatusGeneric)`\n  background-color: ${({\n  theme\n}) => theme.primary4};\n  border: none;\n  color: ${({\n  theme\n}) => theme.primaryText1};\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    border: 1px solid ${({\n  theme\n}) => darken(0.05, theme.primary4)};\n    color: ${({\n  theme\n}) => theme.primaryText1};\n  }\n\n  ${({\n  faded\n}) => faded && css`\n      background-color: ${({\n  theme\n}) => theme.primary5};\n      border: 1px solid ${({\n  theme\n}) => theme.primary5};\n      color: ${({\n  theme\n}) => theme.primaryText1};\n\n      :hover,\n      :focus {\n        border: 1px solid ${({\n  theme\n}) => darken(0.05, theme.primary4)};\n        color: ${({\n  theme\n}) => darken(0.05, theme.primaryText1)};\n      }\n    `}\n`;\nconst Web3StatusConnected = styled(Web3StatusGeneric)`\n  background-color: ${({\n  pending,\n  theme\n}) => pending ? theme.primary1 : theme.bg2};\n  border: 1px solid ${({\n  pending,\n  theme\n}) => pending ? theme.primary1 : theme.bg3};\n  color: ${({\n  pending,\n  theme\n}) => pending ? theme.white : theme.text1};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({\n  pending,\n  theme\n}) => pending ? darken(0.05, theme.primary1) : lighten(0.05, theme.bg2)};\n\n    :focus {\n      border: 1px solid ${({\n  pending,\n  theme\n}) => pending ? darken(0.1, theme.primary1) : darken(0.1, theme.bg3)};\n    }\n  }\n`;\nconst Text = styled.p`\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin: 0 0.5rem 0 0.25rem;\n  font-size: 1rem;\n  width: fit-content;\n  font-weight: 500;\n`;\nconst NetworkIcon = styled(Activity)`\n  margin-left: 0.25rem;\n  margin-right: 0.5rem;\n  width: 16px;\n  height: 16px;\n`; // we want the latest one to come first, so return negative if a is after b\n\nfunction newTransactionsFirst(a, b) {\n  return b.addedTime - a.addedTime;\n} // eslint-disable-next-line react/prop-types\n\n\nfunction StatusIcon({\n  connector\n}) {\n  if (connector === injected) {\n    return /*#__PURE__*/React.createElement(Identicon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return null;\n}\n\nfunction Web3StatusInner() {\n  const {\n    t\n  } = useTranslation();\n  const {\n    account,\n    connector,\n    error\n  } = useWeb3React();\n  const {\n    summary\n  } = useAccountSummary(account !== null && account !== void 0 ? account : undefined);\n  const allTransactions = useAllTransactions();\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions);\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\n  }, [allTransactions]);\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash);\n  const hasPendingTransactions = !!pending.length;\n  const toggleWalletModal = useWalletModalToggle();\n\n  if (account) {\n    var _summary$name;\n\n    const accountName = connector instanceof ValoraConnector && connector.valoraAccount ? connector.valoraAccount.phoneNumber : (_summary$name = summary === null || summary === void 0 ? void 0 : summary.name) !== null && _summary$name !== void 0 ? _summary$name : shortenAddress(account);\n    return /*#__PURE__*/React.createElement(Web3StatusConnected, {\n      id: \"web3-status-connected\",\n      onClick: toggleWalletModal,\n      pending: hasPendingTransactions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }\n    }, hasPendingTransactions ? /*#__PURE__*/React.createElement(RowBetween, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, pending === null || pending === void 0 ? void 0 : pending.length, \" Pending\"), \" \", /*#__PURE__*/React.createElement(Loader, {\n      stroke: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 52\n      }\n    })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, accountName)), !hasPendingTransactions && connector && /*#__PURE__*/React.createElement(StatusIcon, {\n      connector: connector,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 50\n      }\n    }));\n  } else if (error) {\n    return /*#__PURE__*/React.createElement(Web3StatusError, {\n      onClick: toggleWalletModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NetworkIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, error instanceof UnsupportedChainIdError ? 'Wrong Network' : 'Error'));\n  } else {\n    return /*#__PURE__*/React.createElement(Web3StatusConnect, {\n      id: \"connect-wallet\",\n      onClick: toggleWalletModal,\n      faded: !account,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }, t('Connect to a wallet')));\n  }\n}\n\nexport default function Web3Status() {\n  var _summary$name2;\n\n  const {\n    active,\n    account\n  } = useWeb3React();\n  const contextNetwork = useWeb3React(NetworkContextName);\n  const allTransactions = useAllTransactions();\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions);\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst);\n  }, [allTransactions]);\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash);\n  const confirmed = sortedRecentTransactions.filter(tx => tx.receipt).map(tx => tx.hash);\n  const {\n    summary\n  } = useAccountSummary(account !== null && account !== void 0 ? account : undefined);\n\n  if (!contextNetwork.active && !active) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Web3StatusInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(WalletModal, {\n    ENSName: (_summary$name2 = summary === null || summary === void 0 ? void 0 : summary.name) !== null && _summary$name2 !== void 0 ? _summary$name2 : undefined,\n    pendingTransactions: pending,\n    confirmedTransactions: confirmed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/khoiplus/Desktop/celopad/cpadswaptest/src/components/Web3Status/index.tsx"],"names":["UnsupportedChainIdError","useWeb3React","ValoraConnector","useAccountSummary","darken","lighten","React","useMemo","Activity","useTranslation","styled","css","injected","NetworkContextName","useWalletModalToggle","isTransactionRecent","useAllTransactions","shortenAddress","ButtonSecondary","Identicon","Loader","RowBetween","WalletModal","Web3StatusGeneric","theme","flexRowNoWrap","Web3StatusError","red1","white","Web3StatusConnect","primary4","primaryText1","faded","primary5","Web3StatusConnected","pending","primary1","bg2","bg3","text1","Text","p","NetworkIcon","newTransactionsFirst","a","b","addedTime","StatusIcon","connector","Web3StatusInner","t","account","error","summary","undefined","allTransactions","sortedRecentTransactions","txs","Object","values","filter","sort","tx","receipt","map","hash","hasPendingTransactions","length","toggleWalletModal","accountName","valoraAccount","phoneNumber","name","Web3Status","active","contextNetwork","confirmed"],"mappings":"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","sourcesContent":["import { AbstractConnector } from '@web3-react/abstract-connector'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { ValoraConnector } from 'connectors/valora/ValoraConnector'\nimport useAccountSummary from 'hooks/useAccountSummary'\nimport { darken, lighten } from 'polished'\nimport React, { useMemo } from 'react'\nimport { Activity } from 'react-feather'\nimport { useTranslation } from 'react-i18next'\nimport styled, { css } from 'styled-components'\nimport { injected } from '../../connectors'\nimport { NetworkContextName } from '../../constants'\nimport { useWalletModalToggle } from '../../state/application/hooks'\nimport { isTransactionRecent, useAllTransactions } from '../../state/transactions/hooks'\nimport { TransactionDetails } from '../../state/transactions/reducer'\nimport { shortenAddress } from '../../utils'\nimport { ButtonSecondary } from '../Button'\nimport Identicon from '../Identicon'\nimport Loader from '../Loader'\nimport { RowBetween } from '../Row'\nimport WalletModal from '../WalletModal'\n\nconst Web3StatusGeneric = styled(ButtonSecondary)`\n  ${({ theme }) => theme.flexRowNoWrap}\n  width: 100%;\n  align-items: center;\n  padding: 0.5rem;\n  border-radius: 12px;\n  cursor: pointer;\n  user-select: none;\n  :focus {\n    outline: none;\n  }\n`\nconst Web3StatusError = styled(Web3StatusGeneric)`\n  background-color: ${({ theme }) => theme.red1};\n  border: 1px solid ${({ theme }) => theme.red1};\n  color: ${({ theme }) => theme.white};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => darken(0.1, theme.red1)};\n  }\n`\n\nconst Web3StatusConnect = styled(Web3StatusGeneric)<{ faded?: boolean }>`\n  background-color: ${({ theme }) => theme.primary4};\n  border: none;\n  color: ${({ theme }) => theme.primaryText1};\n  font-weight: 500;\n\n  :hover,\n  :focus {\n    border: 1px solid ${({ theme }) => darken(0.05, theme.primary4)};\n    color: ${({ theme }) => theme.primaryText1};\n  }\n\n  ${({ faded }) =>\n    faded &&\n    css`\n      background-color: ${({ theme }) => theme.primary5};\n      border: 1px solid ${({ theme }) => theme.primary5};\n      color: ${({ theme }) => theme.primaryText1};\n\n      :hover,\n      :focus {\n        border: 1px solid ${({ theme }) => darken(0.05, theme.primary4)};\n        color: ${({ theme }) => darken(0.05, theme.primaryText1)};\n      }\n    `}\n`\n\nconst Web3StatusConnected = styled(Web3StatusGeneric)<{ pending?: boolean }>`\n  background-color: ${({ pending, theme }) => (pending ? theme.primary1 : theme.bg2)};\n  border: 1px solid ${({ pending, theme }) => (pending ? theme.primary1 : theme.bg3)};\n  color: ${({ pending, theme }) => (pending ? theme.white : theme.text1)};\n  font-weight: 500;\n  :hover,\n  :focus {\n    background-color: ${({ pending, theme }) => (pending ? darken(0.05, theme.primary1) : lighten(0.05, theme.bg2))};\n\n    :focus {\n      border: 1px solid ${({ pending, theme }) => (pending ? darken(0.1, theme.primary1) : darken(0.1, theme.bg3))};\n    }\n  }\n`\n\nconst Text = styled.p`\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin: 0 0.5rem 0 0.25rem;\n  font-size: 1rem;\n  width: fit-content;\n  font-weight: 500;\n`\n\nconst NetworkIcon = styled(Activity)`\n  margin-left: 0.25rem;\n  margin-right: 0.5rem;\n  width: 16px;\n  height: 16px;\n`\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\n// eslint-disable-next-line react/prop-types\nfunction StatusIcon({ connector }: { connector: AbstractConnector }) {\n  if (connector === injected) {\n    return <Identicon />\n  }\n  return null\n}\n\nfunction Web3StatusInner() {\n  const { t } = useTranslation()\n  const { account, connector, error } = useWeb3React()\n  const { summary } = useAccountSummary(account ?? undefined)\n\n  const allTransactions = useAllTransactions()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash)\n\n  const hasPendingTransactions = !!pending.length\n  const toggleWalletModal = useWalletModalToggle()\n  if (account) {\n    const accountName =\n      connector instanceof ValoraConnector && connector.valoraAccount\n        ? connector.valoraAccount.phoneNumber\n        : summary?.name ?? shortenAddress(account)\n    return (\n      <Web3StatusConnected id=\"web3-status-connected\" onClick={toggleWalletModal} pending={hasPendingTransactions}>\n        {hasPendingTransactions ? (\n          <RowBetween>\n            <Text>{pending?.length} Pending</Text> <Loader stroke=\"white\" />\n          </RowBetween>\n        ) : (\n          <>\n            <Text>{accountName}</Text>\n          </>\n        )}\n        {!hasPendingTransactions && connector && <StatusIcon connector={connector} />}\n      </Web3StatusConnected>\n    )\n  } else if (error) {\n    return (\n      <Web3StatusError onClick={toggleWalletModal}>\n        <NetworkIcon />\n        <Text>{error instanceof UnsupportedChainIdError ? 'Wrong Network' : 'Error'}</Text>\n      </Web3StatusError>\n    )\n  } else {\n    return (\n      <Web3StatusConnect id=\"connect-wallet\" onClick={toggleWalletModal} faded={!account}>\n        <Text>{t('Connect to a wallet')}</Text>\n      </Web3StatusConnect>\n    )\n  }\n}\n\nexport default function Web3Status() {\n  const { active, account } = useWeb3React()\n  const contextNetwork = useWeb3React(NetworkContextName)\n  const allTransactions = useAllTransactions()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter(tx => !tx.receipt).map(tx => tx.hash)\n  const confirmed = sortedRecentTransactions.filter(tx => tx.receipt).map(tx => tx.hash)\n  const { summary } = useAccountSummary(account ?? undefined)\n\n  if (!contextNetwork.active && !active) {\n    return null\n  }\n\n  return (\n    <>\n      <Web3StatusInner />\n      <WalletModal\n        ENSName={summary?.name ?? undefined}\n        pendingTransactions={pending}\n        confirmedTransactions={confirmed}\n      />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}